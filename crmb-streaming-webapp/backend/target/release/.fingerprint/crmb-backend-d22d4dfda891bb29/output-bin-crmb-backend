{"$message_type":"diagnostic","message":"the name `CacheKeys` is defined multiple times","code":{"code":"E0255","explanation":"You can't import a value whose name is the same as another value defined in the\nmodule.\n\nErroneous code example:\n\n```compile_fail,E0255\nuse bar::foo; // error: an item named `foo` is already in scope\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse bar::foo as bar_foo; // ok!\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nOr you can reference the item with its parent:\n\n```\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {\n    bar::foo(); // we get the item by referring to its parent\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/mdblist.rs","byte_start":12239,"byte_end":12256,"line_start":352,"line_end":352,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub mod CacheKeys {","highlight_start":1,"highlight_end":18}],"label":"`CacheKeys` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mdblist.rs","byte_start":579,"byte_end":588,"line_start":18,"line_end":18,"column_start":44,"column_end":53,"is_primary":false,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys, CacheResult};","highlight_start":44,"highlight_end":53}],"label":"previous import of the type `CacheKeys` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`CacheKeys` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can use `as` to change the binding name of the import","code":null,"level":"help","spans":[{"file_name":"src/services/mdblist.rs","byte_start":588,"byte_end":588,"line_start":18,"line_end":18,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys, CacheResult};","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":" as OtherCacheKeys","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/mdblist.rs:352:1: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0255]\u001b[0m\u001b[0m: the name `CacheKeys` is defined multiple times: `CacheKeys` redefined here\u001b[0m\n"}
{"$message_type":"diagnostic","message":"the name `CacheKeys` is defined multiple times","code":{"code":"E0255","explanation":"You can't import a value whose name is the same as another value defined in the\nmodule.\n\nErroneous code example:\n\n```compile_fail,E0255\nuse bar::foo; // error: an item named `foo` is already in scope\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse bar::foo as bar_foo; // ok!\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nOr you can reference the item with its parent:\n\n```\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {\n    bar::foo(); // we get the item by referring to its parent\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":20158,"byte_end":20175,"line_start":579,"line_end":579,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub mod CacheKeys {","highlight_start":1,"highlight_end":18}],"label":"`CacheKeys` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":699,"byte_end":708,"line_start":18,"line_end":18,"column_start":44,"column_end":53,"is_primary":false,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":44,"highlight_end":53}],"label":"previous import of the type `CacheKeys` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`CacheKeys` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can use `as` to change the binding name of the import","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":708,"byte_end":708,"line_start":18,"line_end":18,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":" as OtherCacheKeys","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:579:1: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0255]\u001b[0m\u001b[0m: the name `CacheKeys` is defined multiple times: `CacheKeys` redefined here\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::models::stremio::StremioCatalog`, `crate::models::stremio::StremioManifest`, `crate::models::stremio::StremioMeta`, `crate::models::stremio::StremioMetaItem`, `crate::models::stremio::StremioStream`, `crate::models::stremio::StremioStreamItem`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":403,"byte_end":417,"line_start":17,"line_end":17,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        StremioCatalog,","highlight_start":9,"highlight_end":23}],"label":"no `StremioCatalog` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":427,"byte_end":442,"line_start":18,"line_end":18,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        StremioManifest,","highlight_start":9,"highlight_end":24}],"label":"no `StremioManifest` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":452,"byte_end":463,"line_start":19,"line_end":19,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        StremioMeta,","highlight_start":9,"highlight_end":20}],"label":"no `StremioMeta` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":473,"byte_end":488,"line_start":20,"line_end":20,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        StremioMetaItem,","highlight_start":9,"highlight_end":24}],"label":"no `StremioMetaItem` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":498,"byte_end":511,"line_start":21,"line_end":21,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        StremioStream,","highlight_start":9,"highlight_end":22}],"label":"no `StremioStream` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":521,"byte_end":538,"line_start":22,"line_end":22,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        StremioStreamItem,","highlight_start":9,"highlight_end":26}],"label":"no `StremioStreamItem` in `models::stremio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:17:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m: unresolved imports `crate::models::stremio::StremioCatalog`, `crate::models::stremio::StremioManifest`, `crate::models::stremio::StremioMeta`, `crate::models::stremio::StremioMetaItem`, `crate::models::stremio::StremioStream`, `crate::models::stremio::StremioStreamItem`: no `StremioCatalog` in `models::stremio`, no `StremioManifest` in `models::stremio`, no `StremioMeta` in `models::stremio`, no `StremioMetaItem` in `models::stremio`, no `StremioStream` in `models::stremio`, no `StremioStreamItem` in `models::stremio`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::models::tmdb::TmdbMovie`, `crate::models::tmdb::TmdbShow`, `crate::models::tmdb::TmdbSearchResponse`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":446,"byte_end":455,"line_start":14,"line_end":14,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"use crate::models::tmdb::{TmdbMovie, TmdbShow, TmdbSearchResponse};","highlight_start":27,"highlight_end":36}],"label":"no `TmdbMovie` in `models::tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":457,"byte_end":465,"line_start":14,"line_end":14,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"use crate::models::tmdb::{TmdbMovie, TmdbShow, TmdbSearchResponse};","highlight_start":38,"highlight_end":46}],"label":"no `TmdbShow` in `models::tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":467,"byte_end":485,"line_start":14,"line_end":14,"column_start":48,"column_end":66,"is_primary":true,"text":[{"text":"use crate::models::tmdb::{TmdbMovie, TmdbShow, TmdbSearchResponse};","highlight_start":48,"highlight_end":66}],"label":"no `TmdbSearchResponse` in `models::tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":467,"byte_end":485,"line_start":14,"line_end":14,"column_start":48,"column_end":66,"is_primary":true,"text":[{"text":"use crate::models::tmdb::{TmdbMovie, TmdbShow, TmdbSearchResponse};","highlight_start":48,"highlight_end":66}],"label":null,"suggested_replacement":"TmdbErrorResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:14:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m: unresolved imports `crate::models::tmdb::TmdbMovie`, `crate::models::tmdb::TmdbShow`, `crate::models::tmdb::TmdbSearchResponse`: no `TmdbMovie` in `models::tmdb`, no `TmdbShow` in `models::tmdb`, no `TmdbSearchResponse` in `models::tmdb`, help: a similar name exists in the module: `TmdbErrorResponse`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `MediaType` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":7381,"byte_end":7390,"line_start":249,"line_end":249,"column_start":60,"column_end":69,"is_primary":true,"text":[{"text":"            Some(MediaType::Movie) => crate::models::tmdb::MediaType::Movie,","highlight_start":60,"highlight_end":69}],"label":"could not find `MediaType` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:249:60: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `MediaType` in `tmdb`: could not find `MediaType` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `MediaType` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":7455,"byte_end":7464,"line_start":250,"line_end":250,"column_start":57,"column_end":66,"is_primary":true,"text":[{"text":"            Some(MediaType::Tv) => crate::models::tmdb::MediaType::Tv,","highlight_start":57,"highlight_end":66}],"label":"could not find `MediaType` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:250:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `MediaType` in `tmdb`: could not find `MediaType` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `MediaType` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":7511,"byte_end":7520,"line_start":251,"line_end":251,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"            None => crate::models::tmdb::MediaType::All,","highlight_start":42,"highlight_end":51}],"label":"could not find `MediaType` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:251:42: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `MediaType` in `tmdb`: could not find `MediaType` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":8940,"byte_end":8948,"line_start":297,"line_end":297,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Movie(ref movie) => MediaType::Movie,","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:297:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":9021,"byte_end":9029,"line_start":298,"line_end":298,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Show(ref show) => MediaType::Tv,","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:298:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":9149,"byte_end":9157,"line_start":302,"line_end":302,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Movie(ref movie) => movie.id,","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:302:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":9222,"byte_end":9230,"line_start":303,"line_end":303,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Show(ref show) => show.id,","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:303:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":9386,"byte_end":9394,"line_start":308,"line_end":308,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Movie(ref movie) => movie.imdb_id.clone(),","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:308:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":9472,"byte_end":9480,"line_start":309,"line_end":309,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Show(ref show) => show.external_ids.imdb_id.clone(),","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:309:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":10058,"byte_end":10066,"line_start":326,"line_end":326,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Movie(movie) => self.build_enhanced_movie(movie, mdblist_data),","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:326:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `TmdbItem` in `tmdb`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":10165,"byte_end":10173,"line_start":327,"line_end":327,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            crate::models::tmdb::TmdbItem::Show(show) => self.build_enhanced_show(show, mdblist_data),","highlight_start":34,"highlight_end":42}],"label":"could not find `TmdbItem` in `tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:327:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: could not find `TmdbItem` in `tmdb`: could not find `TmdbItem` in `tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `PaginationInfo` in module `crate::models::api`","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":2578,"byte_end":2592,"line_start":87,"line_end":87,"column_start":41,"column_end":55,"is_primary":true,"text":[{"text":"        pagination: crate::models::api::PaginationInfo {","highlight_start":41,"highlight_end":55}],"label":"not found in `crate::models::api`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:87:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m: cannot find struct, variant or union type `PaginationInfo` in module `crate::models::api`: not found in `crate::models::api`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `MdbListUserList` in module `crate::models::mdblist`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/models/mdblist.rs","byte_start":2953,"byte_end":2980,"line_start":108,"line_end":108,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub struct MdbListUserLists {","highlight_start":1,"highlight_end":28}],"label":"similarly named struct `MdbListUserLists` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":4053,"byte_end":4068,"line_start":132,"line_end":132,"column_start":61,"column_end":76,"is_primary":true,"text":[{"text":") -> AppResult<Json<ApiResponse<Vec<crate::models::mdblist::MdbListUserList>>>> {","highlight_start":61,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":4053,"byte_end":4068,"line_start":132,"line_end":132,"column_start":61,"column_end":76,"is_primary":true,"text":[{"text":") -> AppResult<Json<ApiResponse<Vec<crate::models::mdblist::MdbListUserList>>>> {","highlight_start":61,"highlight_end":76}],"label":null,"suggested_replacement":"MdbListUserLists","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:132:61: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `MdbListUserList` in module `crate::models::mdblist`: help: a struct with a similar name exists: `MdbListUserLists`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `ExternalApiError`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1476,"byte_end":1492,"line_start":53,"line_end":53,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"            AppError::ExternalApi(ExternalApiError::TmdbError(\"Failed to search movies\".to_string()))","highlight_start":35,"highlight_end":51}],"label":"use of undeclared type `ExternalApiError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this enum","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":213,"byte_end":213,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::error::ExternalApiError;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:53:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of undeclared type `ExternalApiError`: use of undeclared type `ExternalApiError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `ExternalApiError`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":2355,"byte_end":2371,"line_start":78,"line_end":78,"column_start":44,"column_end":60,"is_primary":true,"text":[{"text":"                _ => AppError::ExternalApi(ExternalApiError::TmdbError(\"Failed to get movie details\".to_string())),","highlight_start":44,"highlight_end":60}],"label":"use of undeclared type `ExternalApiError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this enum","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":213,"byte_end":213,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::error::ExternalApiError;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:78:44: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of undeclared type `ExternalApiError`: use of undeclared type `ExternalApiError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `ExternalApiError`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":3300,"byte_end":3316,"line_start":105,"line_end":105,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"            AppError::ExternalApi(ExternalApiError::TmdbError(\"Failed to get trending movies\".to_string()))","highlight_start":35,"highlight_end":51}],"label":"use of undeclared type `ExternalApiError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this enum","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":213,"byte_end":213,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::error::ExternalApiError;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:105:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of undeclared type `ExternalApiError`: use of undeclared type `ExternalApiError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `ExternalApiError`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4168,"byte_end":4184,"line_start":131,"line_end":131,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"            AppError::ExternalApi(ExternalApiError::TmdbError(\"Failed to get popular movies\".to_string()))","highlight_start":35,"highlight_end":51}],"label":"use of undeclared type `ExternalApiError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this enum","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":213,"byte_end":213,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::error::ExternalApiError;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:131:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of undeclared type `ExternalApiError`: use of undeclared type `ExternalApiError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `ExternalApiError`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":5017,"byte_end":5033,"line_start":156,"line_end":156,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"            AppError::ExternalApi(ExternalApiError::TmdbError(\"Failed to discover movies\".to_string()))","highlight_start":35,"highlight_end":51}],"label":"use of undeclared type `ExternalApiError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this enum","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":213,"byte_end":213,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::error::ExternalApiError;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:156:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of undeclared type `ExternalApiError`: use of undeclared type `ExternalApiError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `TmdbConfiguration` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/models/tmdb.rs","byte_start":5655,"byte_end":5679,"line_start":216,"line_end":216,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct Configuration {","highlight_start":1,"highlight_end":25}],"label":"similarly named struct `Configuration` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":5487,"byte_end":5504,"line_start":176,"line_end":176,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"        let config: TmdbConfiguration = response.json().await?;","highlight_start":21,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/services/tmdb.rs","byte_start":5487,"byte_end":5504,"line_start":176,"line_end":176,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"        let config: TmdbConfiguration = response.json().await?;","highlight_start":21,"highlight_end":38}],"label":null,"suggested_replacement":"Configuration","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/tmdb.rs:176:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `TmdbConfiguration` in this scope: help: a struct with a similar name exists: `Configuration`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `CatalogDefinition` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":4521,"byte_end":4538,"line_start":147,"line_end":147,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"                CatalogDefinition {","highlight_start":17,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::stremio::CatalogDefinition;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:147:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m: cannot find struct, variant or union type `CatalogDefinition` in this scope: not found in this scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `CatalogDefinition` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":4776,"byte_end":4793,"line_start":153,"line_end":153,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"                CatalogDefinition {","highlight_start":17,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::stremio::CatalogDefinition;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:153:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m: cannot find struct, variant or union type `CatalogDefinition` in this scope: not found in this scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `CatalogDefinition` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":5032,"byte_end":5049,"line_start":159,"line_end":159,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"                CatalogDefinition {","highlight_start":17,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::stremio::CatalogDefinition;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:159:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m: cannot find struct, variant or union type `CatalogDefinition` in this scope: not found in this scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `Video` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":22780,"byte_end":22785,"line_start":618,"line_end":618,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"        let videos: Vec<Video> = vec![];","highlight_start":25,"highlight_end":30}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::stremio::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::tmdb::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::services::enhanced_metadata::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:618:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `Video` in this scope: not found in this scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `Video` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":24223,"byte_end":24228,"line_start":654,"line_end":654,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"        let videos: Vec<Video> = vec![];","highlight_start":25,"highlight_end":30}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::stremio::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::models::tmdb::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/stremio.rs","byte_start":303,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::services::enhanced_metadata::Video;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:654:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `Video` in this scope: not found in this scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `TmdbSearchResult` in module `crate::models::tmdb`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/models/tmdb.rs","byte_start":1682,"byte_end":1703,"line_start":67,"line_end":67,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"pub enum SearchResult {","highlight_start":1,"highlight_end":22}],"label":"similarly named enum `SearchResult` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":8325,"byte_end":8341,"line_start":280,"line_end":280,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"        result: crate::models::tmdb::TmdbSearchResult,","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":8325,"byte_end":8341,"line_start":280,"line_end":280,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"        result: crate::models::tmdb::TmdbSearchResult,","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":"SearchResult","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:280:38: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `TmdbSearchResult` in module `crate::models::tmdb`: help: an enum with a similar name exists: `SearchResult`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find type `TmdbItem` in module `crate::models::tmdb`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":8794,"byte_end":8802,"line_start":294,"line_end":294,"column_start":41,"column_end":49,"is_primary":true,"text":[{"text":"        tmdb_item: crate::models::tmdb::TmdbItem,","highlight_start":41,"highlight_end":49}],"label":"not found in `crate::models::tmdb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:294:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m: cannot find type `TmdbItem` in module `crate::models::tmdb`: not found in `crate::models::tmdb`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn_with_state` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6691,"byte_end":6709,"line_start":221,"line_end":221,"column_start":36,"column_end":54,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":36,"highlight_end":54}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn_with_state;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn_with_state`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6679,"byte_end":6691,"line_start":221,"line_end":221,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:221:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn_with_state` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn_with_state` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6896,"byte_end":6914,"line_start":227,"line_end":227,"column_start":36,"column_end":54,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":36,"highlight_end":54}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn_with_state;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn_with_state`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6884,"byte_end":6896,"line_start":227,"line_end":227,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:227:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn_with_state` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn_with_state` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7105,"byte_end":7123,"line_start":233,"line_end":233,"column_start":36,"column_end":54,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":36,"highlight_end":54}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn_with_state;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn_with_state`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7093,"byte_end":7105,"line_start":233,"line_end":233,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn_with_state(","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:233:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn_with_state` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7332,"byte_end":7339,"line_start":239,"line_end":239,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn(request_logging))","highlight_start":36,"highlight_end":43}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7320,"byte_end":7332,"line_start":239,"line_end":239,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn(request_logging))","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:239:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7440,"byte_end":7447,"line_start":242,"line_end":242,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn(request_id_middleware))","highlight_start":36,"highlight_end":43}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7428,"byte_end":7440,"line_start":242,"line_end":242,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                .layer(middleware::from_fn(request_id_middleware))","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:242:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7923,"byte_end":7930,"line_start":258,"line_end":258,"column_start":63,"column_end":70,"is_primary":true,"text":[{"text":"        .route(\"/auth/logout\", post(logout).layer(middleware::from_fn(require_auth)))","highlight_start":63,"highlight_end":70}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7911,"byte_end":7923,"line_start":258,"line_end":258,"column_start":51,"column_end":63,"is_primary":true,"text":[{"text":"        .route(\"/auth/logout\", post(logout).layer(middleware::from_fn(require_auth)))","highlight_start":51,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:258:63: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8027,"byte_end":8034,"line_start":259,"line_end":259,"column_start":81,"column_end":88,"is_primary":true,"text":[{"text":"        .route(\"/auth/change-password\", post(change_password).layer(middleware::from_fn(require_auth)))","highlight_start":81,"highlight_end":88}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8015,"byte_end":8027,"line_start":259,"line_end":259,"column_start":69,"column_end":81,"is_primary":true,"text":[{"text":"        .route(\"/auth/change-password\", post(change_password).layer(middleware::from_fn(require_auth)))","highlight_start":69,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:259:81: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8150,"byte_end":8157,"line_start":262,"line_end":262,"column_start":68,"column_end":75,"is_primary":true,"text":[{"text":"        .route(\"/user/profile\", get(get_profile).layer(middleware::from_fn(require_auth)))","highlight_start":68,"highlight_end":75}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8138,"byte_end":8150,"line_start":262,"line_end":262,"column_start":56,"column_end":68,"is_primary":true,"text":[{"text":"        .route(\"/user/profile\", get(get_profile).layer(middleware::from_fn(require_auth)))","highlight_start":56,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:262:68: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8244,"byte_end":8251,"line_start":263,"line_end":263,"column_start":71,"column_end":78,"is_primary":true,"text":[{"text":"        .route(\"/user/profile\", put(update_profile).layer(middleware::from_fn(require_auth)))","highlight_start":71,"highlight_end":78}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8232,"byte_end":8244,"line_start":263,"line_end":263,"column_start":59,"column_end":71,"is_primary":true,"text":[{"text":"        .route(\"/user/profile\", put(update_profile).layer(middleware::from_fn(require_auth)))","highlight_start":59,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:263:71: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8339,"byte_end":8346,"line_start":264,"line_end":264,"column_start":72,"column_end":79,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist\", get(get_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":72,"highlight_end":79}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8327,"byte_end":8339,"line_start":264,"line_end":264,"column_start":60,"column_end":72,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist\", get(get_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":60,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:264:72: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8438,"byte_end":8445,"line_start":265,"line_end":265,"column_start":76,"column_end":83,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist\", post(add_to_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":76,"highlight_end":83}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8426,"byte_end":8438,"line_start":265,"line_end":265,"column_start":64,"column_end":76,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist\", post(add_to_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":64,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:265:76: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8548,"byte_end":8555,"line_start":266,"line_end":266,"column_start":87,"column_end":94,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist/:id\", delete(remove_from_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":87,"highlight_end":94}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8536,"byte_end":8548,"line_start":266,"line_end":266,"column_start":75,"column_end":87,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist/:id\", delete(remove_from_watchlist).layer(middleware::from_fn(require_auth)))","highlight_start":75,"highlight_end":87}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:266:87: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8660,"byte_end":8667,"line_start":267,"line_end":267,"column_start":89,"column_end":96,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist/:id/check\", get(check_watchlist_item).layer(middleware::from_fn(require_auth)))","highlight_start":89,"highlight_end":96}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8648,"byte_end":8660,"line_start":267,"line_end":267,"column_start":77,"column_end":89,"is_primary":true,"text":[{"text":"        .route(\"/user/watchlist/:id/check\", get(check_watchlist_item).layer(middleware::from_fn(require_auth)))","highlight_start":77,"highlight_end":89}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:267:89: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8759,"byte_end":8766,"line_start":268,"line_end":268,"column_start":76,"column_end":83,"is_primary":true,"text":[{"text":"        .route(\"/user/preferences\", get(get_preferences).layer(middleware::from_fn(require_auth)))","highlight_start":76,"highlight_end":83}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8747,"byte_end":8759,"line_start":268,"line_end":268,"column_start":64,"column_end":76,"is_primary":true,"text":[{"text":"        .route(\"/user/preferences\", get(get_preferences).layer(middleware::from_fn(require_auth)))","highlight_start":64,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:268:76: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8861,"byte_end":8868,"line_start":269,"line_end":269,"column_start":79,"column_end":86,"is_primary":true,"text":[{"text":"        .route(\"/user/preferences\", put(update_preferences).layer(middleware::from_fn(require_auth)))","highlight_start":79,"highlight_end":86}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8849,"byte_end":8861,"line_start":269,"line_end":269,"column_start":67,"column_end":79,"is_primary":true,"text":[{"text":"        .route(\"/user/preferences\", put(update_preferences).layer(middleware::from_fn(require_auth)))","highlight_start":67,"highlight_end":79}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:269:79: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8958,"byte_end":8965,"line_start":270,"line_end":270,"column_start":74,"column_end":81,"is_primary":true,"text":[{"text":"        .route(\"/user/account\", delete(delete_account).layer(middleware::from_fn(require_auth)))","highlight_start":74,"highlight_end":81}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8946,"byte_end":8958,"line_start":270,"line_end":270,"column_start":62,"column_end":74,"is_primary":true,"text":[{"text":"        .route(\"/user/account\", delete(delete_account).layer(middleware::from_fn(require_auth)))","highlight_start":62,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:270:74: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9101,"byte_end":9108,"line_start":273,"line_end":273,"column_start":75,"column_end":82,"is_primary":true,"text":[{"text":"        .route(\"/enhanced/search\", get(enhanced_search).layer(middleware::from_fn(optional_auth)))","highlight_start":75,"highlight_end":82}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9089,"byte_end":9101,"line_start":273,"line_end":273,"column_start":63,"column_end":75,"is_primary":true,"text":[{"text":"        .route(\"/enhanced/search\", get(enhanced_search).layer(middleware::from_fn(optional_auth)))","highlight_start":63,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:273:75: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9211,"byte_end":9218,"line_start":274,"line_end":274,"column_start":86,"column_end":93,"is_primary":true,"text":[{"text":"        .route(\"/enhanced/:type/:id\", get(get_enhanced_by_tmdb_id).layer(middleware::from_fn(optional_auth)))","highlight_start":86,"highlight_end":93}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9199,"byte_end":9211,"line_start":274,"line_end":274,"column_start":74,"column_end":86,"is_primary":true,"text":[{"text":"        .route(\"/enhanced/:type/:id\", get(get_enhanced_by_tmdb_id).layer(middleware::from_fn(optional_auth)))","highlight_start":74,"highlight_end":86}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:274:86: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9317,"byte_end":9324,"line_start":275,"line_end":275,"column_start":82,"column_end":89,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/user-lists\", get(get_user_watchlists).layer(middleware::from_fn(optional_auth)))","highlight_start":82,"highlight_end":89}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9305,"byte_end":9317,"line_start":275,"line_end":275,"column_start":70,"column_end":82,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/user-lists\", get(get_user_watchlists).layer(middleware::from_fn(optional_auth)))","highlight_start":70,"highlight_end":82}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:275:82: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9419,"byte_end":9426,"line_start":276,"line_end":276,"column_start":78,"column_end":85,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/lists/:id\", get(get_mdblist_list).layer(middleware::from_fn(optional_auth)))","highlight_start":78,"highlight_end":85}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9407,"byte_end":9419,"line_start":276,"line_end":276,"column_start":66,"column_end":78,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/lists/:id\", get(get_mdblist_list).layer(middleware::from_fn(optional_auth)))","highlight_start":66,"highlight_end":78}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:276:78: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9524,"byte_end":9531,"line_start":277,"line_end":277,"column_start":81,"column_end":88,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/trending\", get(get_mdblist_trending).layer(middleware::from_fn(optional_auth)))","highlight_start":81,"highlight_end":88}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9512,"byte_end":9524,"line_start":277,"line_end":277,"column_start":69,"column_end":81,"is_primary":true,"text":[{"text":"        .route(\"/mdblist/trending\", get(get_mdblist_trending).layer(middleware::from_fn(optional_auth)))","highlight_start":69,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:277:81: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9816,"byte_end":9823,"line_start":283,"line_end":283,"column_start":71,"column_end":78,"is_primary":true,"text":[{"text":"        .route(\"/movies/search\", get(search_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":71,"highlight_end":78}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9804,"byte_end":9816,"line_start":283,"line_end":283,"column_start":59,"column_end":71,"is_primary":true,"text":[{"text":"        .route(\"/movies/search\", get(search_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":59,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:283:71: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9919,"byte_end":9926,"line_start":284,"line_end":284,"column_start":79,"column_end":86,"is_primary":true,"text":[{"text":"        .route(\"/movies/trending\", get(get_trending_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":79,"highlight_end":86}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9907,"byte_end":9919,"line_start":284,"line_end":284,"column_start":67,"column_end":79,"is_primary":true,"text":[{"text":"        .route(\"/movies/trending\", get(get_trending_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":67,"highlight_end":79}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:284:79: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10020,"byte_end":10027,"line_start":285,"line_end":285,"column_start":77,"column_end":84,"is_primary":true,"text":[{"text":"        .route(\"/movies/popular\", get(get_popular_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":77,"highlight_end":84}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10008,"byte_end":10020,"line_start":285,"line_end":285,"column_start":65,"column_end":77,"is_primary":true,"text":[{"text":"        .route(\"/movies/popular\", get(get_popular_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":65,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:285:77: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10119,"byte_end":10126,"line_start":286,"line_end":286,"column_start":75,"column_end":82,"is_primary":true,"text":[{"text":"        .route(\"/movies/discover\", get(discover_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":75,"highlight_end":82}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10107,"byte_end":10119,"line_start":286,"line_end":286,"column_start":63,"column_end":75,"is_primary":true,"text":[{"text":"        .route(\"/movies/discover\", get(discover_movies).layer(middleware::from_fn(optional_auth)))","highlight_start":63,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:286:75: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10207,"byte_end":10214,"line_start":287,"line_end":287,"column_start":64,"column_end":71,"is_primary":true,"text":[{"text":"        .route(\"/movies/:id\", get(get_movie).layer(middleware::from_fn(optional_auth)))","highlight_start":64,"highlight_end":71}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10195,"byte_end":10207,"line_start":287,"line_end":287,"column_start":52,"column_end":64,"is_primary":true,"text":[{"text":"        .route(\"/movies/:id\", get(get_movie).layer(middleware::from_fn(optional_auth)))","highlight_start":52,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:287:64: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10335,"byte_end":10342,"line_start":290,"line_end":290,"column_start":69,"column_end":76,"is_primary":true,"text":[{"text":"        .route(\"/tv/search\", get(search_tv_shows).layer(middleware::from_fn(optional_auth)))","highlight_start":69,"highlight_end":76}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10323,"byte_end":10335,"line_start":290,"line_end":290,"column_start":57,"column_end":69,"is_primary":true,"text":[{"text":"        .route(\"/tv/search\", get(search_tv_shows).layer(middleware::from_fn(optional_auth)))","highlight_start":57,"highlight_end":69}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:290:69: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10430,"byte_end":10437,"line_start":291,"line_end":291,"column_start":71,"column_end":78,"is_primary":true,"text":[{"text":"        .route(\"/tv/trending\", get(get_trending_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":71,"highlight_end":78}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10418,"byte_end":10430,"line_start":291,"line_end":291,"column_start":59,"column_end":71,"is_primary":true,"text":[{"text":"        .route(\"/tv/trending\", get(get_trending_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":59,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:291:71: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10523,"byte_end":10530,"line_start":292,"line_end":292,"column_start":69,"column_end":76,"is_primary":true,"text":[{"text":"        .route(\"/tv/popular\", get(get_popular_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":69,"highlight_end":76}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10511,"byte_end":10523,"line_start":292,"line_end":292,"column_start":57,"column_end":69,"is_primary":true,"text":[{"text":"        .route(\"/tv/popular\", get(get_popular_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":57,"highlight_end":69}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:292:69: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10614,"byte_end":10621,"line_start":293,"line_end":293,"column_start":67,"column_end":74,"is_primary":true,"text":[{"text":"        .route(\"/tv/discover\", get(discover_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":67,"highlight_end":74}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10602,"byte_end":10614,"line_start":293,"line_end":293,"column_start":55,"column_end":67,"is_primary":true,"text":[{"text":"        .route(\"/tv/discover\", get(discover_tv).layer(middleware::from_fn(optional_auth)))","highlight_start":55,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:293:67: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot find function `from_fn` in module `middleware`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":10700,"byte_end":10707,"line_start":294,"line_end":294,"column_start":62,"column_end":69,"is_primary":true,"text":[{"text":"        .route(\"/tv/:id\", get(get_tv_show).layer(middleware::from_fn(optional_auth)))","highlight_start":62,"highlight_end":69}],"label":"not found in `middleware`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these functions","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::array::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::iter::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":390,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use axum::middleware::from_fn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `from_fn`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":10688,"byte_end":10700,"line_start":294,"line_end":294,"column_start":50,"column_end":62,"is_primary":true,"text":[{"text":"        .route(\"/tv/:id\", get(get_tv_show).layer(middleware::from_fn(optional_auth)))","highlight_start":50,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:294:62: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m: cannot find function `from_fn` in module `middleware`: not found in `middleware`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"enum import `MdbListMediaType` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":5405,"byte_end":5421,"line_start":169,"line_end":169,"column_start":57,"column_end":73,"is_primary":true,"text":[{"text":"        Some(\"movie\") => Some(crate::services::mdblist::MdbListMediaType::Movie),","highlight_start":57,"highlight_end":73}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":5423,"byte_end":5428,"line_start":169,"line_end":169,"column_start":75,"column_end":80,"is_primary":false,"text":[{"text":"        Some(\"movie\") => Some(crate::services::mdblist::MdbListMediaType::Movie),","highlight_start":75,"highlight_end":80}],"label":"unit variant `Movie` is not publicly re-exported","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `MdbListMediaType` is defined here...","code":null,"level":"note","spans":[{"file_name":"src/services/mdblist.rs","byte_start":509,"byte_end":534,"line_start":17,"line_end":17,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use crate::models::mdblist::*;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `MdbListMediaType` which is defined here","code":null,"level":"note","spans":[{"file_name":"src/models/mdblist.rs","byte_start":343,"byte_end":368,"line_start":12,"line_end":12,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"pub enum MdbListMediaType {","highlight_start":1,"highlight_end":26}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:169:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m: enum import `MdbListMediaType` is private: private enum import\u001b[0m\n"}
{"$message_type":"diagnostic","message":"enum import `MdbListMediaType` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":5484,"byte_end":5500,"line_start":170,"line_end":170,"column_start":54,"column_end":70,"is_primary":true,"text":[{"text":"        Some(\"tv\") => Some(crate::services::mdblist::MdbListMediaType::Show),","highlight_start":54,"highlight_end":70}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":5502,"byte_end":5506,"line_start":170,"line_end":170,"column_start":72,"column_end":76,"is_primary":false,"text":[{"text":"        Some(\"tv\") => Some(crate::services::mdblist::MdbListMediaType::Show),","highlight_start":72,"highlight_end":76}],"label":"unit variant `Show` is not publicly re-exported","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `MdbListMediaType` is defined here...","code":null,"level":"note","spans":[{"file_name":"src/services/mdblist.rs","byte_start":509,"byte_end":534,"line_start":17,"line_end":17,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use crate::models::mdblist::*;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `MdbListMediaType` which is defined here","code":null,"level":"note","spans":[{"file_name":"src/models/mdblist.rs","byte_start":343,"byte_end":368,"line_start":12,"line_end":12,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"pub enum MdbListMediaType {","highlight_start":1,"highlight_end":26}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:170:54: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m: enum import `MdbListMediaType` is private: private enum import\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `http::Method` and `patch`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":437,"byte_end":449,"line_start":14,"line_end":14,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    http::Method,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":489,"byte_end":494,"line_start":15,"line_end":15,"column_start":39,"column_end":44,"is_primary":true,"text":[{"text":"    routing::{get, post, put, delete, patch},","highlight_start":39,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":431,"byte_end":449,"line_start":13,"line_end":14,"column_start":30,"column_end":17,"is_primary":true,"text":[{"text":"    extract::DefaultBodyLimit,","highlight_start":30,"highlight_end":31},{"text":"    http::Method,","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":487,"byte_end":494,"line_start":15,"line_end":15,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"    routing::{get, post, put, delete, patch},","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:14:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `http::Method` and `patch`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `error` and `warn`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":772,"byte_end":776,"line_start":33,"line_end":33,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":778,"byte_end":783,"line_start":33,"line_end":33,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":770,"byte_end":783,"line_start":33,"line_end":33,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":765,"byte_end":766,"line_start":33,"line_end":33,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":783,"byte_end":784,"line_start":33,"line_end":33,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:33:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `error` and `warn`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/error.rs","byte_start":535,"byte_end":543,"line_start":19,"line_end":19,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/error.rs","byte_start":531,"byte_end":545,"line_start":19,"line_end":20,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"use thiserror::Error;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/error.rs:19:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::fmt`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Query`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/auth.rs","byte_start":26,"byte_end":31,"line_start":2,"line_end":2,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    extract::{Query, State},","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":26,"byte_end":33,"line_start":2,"line_end":2,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    extract::{Query, State},","highlight_start":15,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":25,"byte_end":26,"line_start":2,"line_end":2,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    extract::{Query, State},","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":38,"byte_end":39,"line_start":2,"line_end":2,"column_start":27,"column_end":28,"is_primary":true,"text":[{"text":"    extract::{Query, State},","highlight_start":27,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:2:15: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Query`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize` and `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/auth.rs","byte_start":251,"byte_end":262,"line_start":8,"line_end":8,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":264,"byte_end":273,"line_start":8,"line_end":8,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":239,"byte_end":276,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":37},{"text":"use serde_json::json;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:8:13: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `Deserialize` and `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/auth.rs","byte_start":302,"byte_end":327,"line_start":10,"line_end":10,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":298,"byte_end":329,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"use uuid::Uuid;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:10:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::collections::HashMap`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `http::StatusCode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":260,"byte_end":276,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    http::StatusCode,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":254,"byte_end":276,"line_start":9,"line_end":10,"column_start":28,"column_end":21,"is_primary":true,"text":[{"text":"    extract::{Query, State},","highlight_start":28,"highlight_end":29},{"text":"    http::StatusCode,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:10:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":342,"byte_end":356,"line_start":14,"line_end":14,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":338,"byte_end":358,"line_start":14,"line_end":15,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:14:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::sync::Arc`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `http::StatusCode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/movies.rs","byte_start":264,"byte_end":280,"line_start":12,"line_end":12,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    http::StatusCode,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":258,"byte_end":280,"line_start":11,"line_end":12,"column_start":34,"column_end":21,"is_primary":true,"text":[{"text":"    extract::{Path, Query, State},","highlight_start":34,"highlight_end":35},{"text":"    http::StatusCode,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:12:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/movies.rs","byte_start":330,"byte_end":339,"line_start":15,"line_end":15,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":328,"byte_end":339,"line_start":15,"line_end":15,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":316,"byte_end":317,"line_start":15,"line_end":15,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":339,"byte_end":340,"line_start":15,"line_end":15,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":35,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:15:26: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `warn`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/movies.rs","byte_start":369,"byte_end":373,"line_start":16,"line_end":16,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"use tracing::{error, info, warn};","highlight_start":28,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":367,"byte_end":373,"line_start":16,"line_end":16,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"use tracing::{error, info, warn};","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:16:28: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `warn`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `TrendingResponse`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/movies.rs","byte_start":579,"byte_end":595,"line_start":23,"line_end":23,"column_start":37,"column_end":53,"is_primary":true,"text":[{"text":"        tmdb::{Movie, MovieDetails, TrendingResponse},","highlight_start":37,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":577,"byte_end":595,"line_start":23,"line_end":23,"column_start":35,"column_end":53,"is_primary":true,"text":[{"text":"        tmdb::{Movie, MovieDetails, TrendingResponse},","highlight_start":35,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:23:37: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `TrendingResponse`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize` and `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":120,"byte_end":131,"line_start":6,"line_end":6,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":133,"byte_end":142,"line_start":6,"line_end":6,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":108,"byte_end":145,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":37},{"text":"use serde_json::json;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:6:13: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `Deserialize` and `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `http::StatusCode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":238,"byte_end":254,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    http::StatusCode,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":232,"byte_end":254,"line_start":7,"line_end":8,"column_start":34,"column_end":21,"is_primary":true,"text":[{"text":"    extract::{Path, Query, State},","highlight_start":34,"highlight_end":35},{"text":"    http::StatusCode,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:8:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":320,"byte_end":334,"line_start":12,"line_end":12,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":316,"byte_end":336,"line_start":12,"line_end":13,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:12:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::sync::Arc`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `stremio::StremioService`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":636,"byte_end":659,"line_start":26,"line_end":26,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"        stremio::StremioService,","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":626,"byte_end":659,"line_start":25,"line_end":26,"column_start":64,"column_end":32,"is_primary":true,"text":[{"text":"        enhanced_metadata::{EnhancedMetadataService, MediaType},","highlight_start":64,"highlight_end":65},{"text":"        stremio::StremioService,","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":561,"byte_end":571,"line_start":24,"line_end":25,"column_start":15,"column_end":9,"is_primary":true,"text":[{"text":"    services::{","highlight_start":15,"highlight_end":16},{"text":"        enhanced_metadata::{EnhancedMetadataService, MediaType},","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":659,"byte_end":666,"line_start":26,"line_end":27,"column_start":32,"column_end":6,"is_primary":true,"text":[{"text":"        stremio::StremioService,","highlight_start":32,"highlight_end":33},{"text":"    },","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:26:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `stremio::StremioService`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize` and `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":120,"byte_end":131,"line_start":6,"line_end":6,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":133,"byte_end":142,"line_start":6,"line_end":6,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":108,"byte_end":145,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":37},{"text":"use serde_json::json;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:6:13: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `Deserialize` and `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `http::StatusCode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":278,"byte_end":294,"line_start":12,"line_end":12,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    http::StatusCode,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":272,"byte_end":294,"line_start":11,"line_end":12,"column_start":34,"column_end":21,"is_primary":true,"text":[{"text":"    extract::{Path, Query, State},","highlight_start":34,"highlight_end":35},{"text":"    http::StatusCode,","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:12:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":344,"byte_end":353,"line_start":15,"line_end":15,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":342,"byte_end":353,"line_start":15,"line_end":15,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/tv.rs","byte_start":330,"byte_end":331,"line_start":15,"line_end":15,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/tv.rs","byte_start":353,"byte_end":354,"line_start":15,"line_end":15,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":35,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:15:26: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `serde_json::json`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":360,"byte_end":376,"line_start":16,"line_end":16,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":356,"byte_end":378,"line_start":16,"line_end":17,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde_json::json;","highlight_start":1,"highlight_end":22},{"text":"use uuid::Uuid;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:16:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `serde_json::json`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `uuid::Uuid`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":382,"byte_end":392,"line_start":17,"line_end":17,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"use uuid::Uuid;","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":378,"byte_end":394,"line_start":17,"line_end":18,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use uuid::Uuid;","highlight_start":1,"highlight_end":16},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:17:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `uuid::Uuid`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/user.rs","byte_start":148,"byte_end":157,"line_start":7,"line_end":7,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":146,"byte_end":157,"line_start":7,"line_end":7,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":134,"byte_end":135,"line_start":7,"line_end":7,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":157,"byte_end":158,"line_start":7,"line_end":7,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":35,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:7:26: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `database::Database`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/user.rs","byte_start":230,"byte_end":248,"line_start":13,"line_end":13,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    database::Database,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":224,"byte_end":248,"line_start":12,"line_end":13,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    AppState,","highlight_start":13,"highlight_end":14},{"text":"    database::Database,","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:13:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `database::Database`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/auth.rs","byte_start":470,"byte_end":484,"line_start":16,"line_end":16,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/middleware/auth.rs","byte_start":466,"byte_end":486,"line_start":16,"line_end":17,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:16:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::sync::Arc`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `ACCEPT`, `AUTHORIZATION`, and `CONTENT_TYPE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/cors.rs","byte_start":436,"byte_end":442,"line_start":12,"line_end":12,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":444,"byte_end":457,"line_start":12,"line_end":12,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":459,"byte_end":471,"line_start":12,"line_end":12,"column_start":44,"column_end":56,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":44,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/middleware/cors.rs","byte_start":436,"byte_end":473,"line_start":12,"line_end":12,"column_start":21,"column_end":58,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":21,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":435,"byte_end":436,"line_start":12,"line_end":12,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":479,"byte_end":480,"line_start":12,"line_end":12,"column_start":64,"column_end":65,"is_primary":true,"text":[{"text":"    http::{header::{ACCEPT, AUTHORIZATION, CONTENT_TYPE, ORIGIN},","highlight_start":64,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/cors.rs:12:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `ACCEPT`, `AUTHORIZATION`, and `CONTENT_TYPE`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Uri`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/logging.rs","byte_start":422,"byte_end":425,"line_start":13,"line_end":13,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"    http::{HeaderMap, Method, StatusCode, Uri},","highlight_start":43,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/middleware/logging.rs","byte_start":420,"byte_end":425,"line_start":13,"line_end":13,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"    http::{HeaderMap, Method, StatusCode, Uri},","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/logging.rs:13:43: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Uri`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Span`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/logging.rs","byte_start":590,"byte_end":594,"line_start":19,"line_end":19,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error, debug, Span};","highlight_start":41,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/middleware/logging.rs","byte_start":588,"byte_end":594,"line_start":19,"line_end":19,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error, debug, Span};","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/logging.rs:19:41: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Span`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize` and `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":574,"byte_end":585,"line_start":17,"line_end":17,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":587,"byte_end":596,"line_start":17,"line_end":17,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":562,"byte_end":599,"line_start":17,"line_end":18,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":37},{"text":"use std::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:17:13: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `Deserialize` and `Serialize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio::time::sleep`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":699,"byte_end":717,"line_start":23,"line_end":23,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use tokio::time::sleep;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":695,"byte_end":719,"line_start":23,"line_end":24,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::time::sleep;","highlight_start":1,"highlight_end":24},{"text":"use tracing::{debug, warn, error};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:23:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `tokio::time::sleep`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":746,"byte_end":751,"line_start":24,"line_end":24,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":744,"byte_end":751,"line_start":24,"line_end":24,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":26,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:24:28: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `error`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `AppResult`, `RateLimiter`, `RequestContext`, and `UserContext`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":790,"byte_end":799,"line_start":27,"line_end":27,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    error::{AppError, AppResult},","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":836,"byte_end":850,"line_start":28,"line_end":28,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"    middleware::{extract_real_ip, RequestContext},","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":894,"byte_end":905,"line_start":29,"line_end":29,"column_start":42,"column_end":53,"is_primary":true,"text":[{"text":"    middleware::auth::{get_user_context, UserContext},","highlight_start":42,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":937,"byte_end":948,"line_start":30,"line_end":30,"column_start":30,"column_end":41,"is_primary":true,"text":[{"text":"    services::rate_limiter::{RateLimiter, RateLimitConfig, RateLimitResult},","highlight_start":30,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":788,"byte_end":799,"line_start":27,"line_end":27,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    error::{AppError, AppResult},","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":779,"byte_end":780,"line_start":27,"line_end":27,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    error::{AppError, AppResult},","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":799,"byte_end":800,"line_start":27,"line_end":27,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    error::{AppError, AppResult},","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":834,"byte_end":850,"line_start":28,"line_end":28,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"    middleware::{extract_real_ip, RequestContext},","highlight_start":33,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":818,"byte_end":819,"line_start":28,"line_end":28,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    middleware::{extract_real_ip, RequestContext},","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":850,"byte_end":851,"line_start":28,"line_end":28,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"    middleware::{extract_real_ip, RequestContext},","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":892,"byte_end":905,"line_start":29,"line_end":29,"column_start":40,"column_end":53,"is_primary":true,"text":[{"text":"    middleware::auth::{get_user_context, UserContext},","highlight_start":40,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":875,"byte_end":876,"line_start":29,"line_end":29,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    middleware::auth::{get_user_context, UserContext},","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":905,"byte_end":906,"line_start":29,"line_end":29,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"    middleware::auth::{get_user_context, UserContext},","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":937,"byte_end":950,"line_start":30,"line_end":30,"column_start":30,"column_end":43,"is_primary":true,"text":[{"text":"    services::rate_limiter::{RateLimiter, RateLimitConfig, RateLimitResult},","highlight_start":30,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:27:23: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `AppResult`, `RateLimiter`, `RequestContext`, and `UserContext`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `HeaderName`, `IntoResponse`, and `StatusCode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":429,"byte_end":439,"line_start":14,"line_end":14,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"    http::{HeaderMap, HeaderName, HeaderValue, Method, StatusCode, Uri},","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/security.rs","byte_start":462,"byte_end":472,"line_start":14,"line_end":14,"column_start":56,"column_end":66,"is_primary":true,"text":[{"text":"    http::{HeaderMap, HeaderName, HeaderValue, Method, StatusCode, Uri},","highlight_start":56,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/security.rs","byte_start":517,"byte_end":529,"line_start":16,"line_end":16,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"    response::{IntoResponse, Response},","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":427,"byte_end":439,"line_start":14,"line_end":14,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    http::{HeaderMap, HeaderName, HeaderValue, Method, StatusCode, Uri},","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":460,"byte_end":472,"line_start":14,"line_end":14,"column_start":54,"column_end":66,"is_primary":true,"text":[{"text":"    http::{HeaderMap, HeaderName, HeaderValue, Method, StatusCode, Uri},","highlight_start":54,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":517,"byte_end":531,"line_start":16,"line_end":16,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    response::{IntoResponse, Response},","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":516,"byte_end":517,"line_start":16,"line_end":16,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"    response::{IntoResponse, Response},","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":539,"byte_end":540,"line_start":16,"line_end":16,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"    response::{IntoResponse, Response},","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:14:23: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `HeaderName`, `IntoResponse`, and `StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":606,"byte_end":631,"line_start":20,"line_end":20,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashSet;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":602,"byte_end":633,"line_start":20,"line_end":21,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashSet;","highlight_start":1,"highlight_end":31},{"text":"use tracing::{debug, warn, error};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:20:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::collections::HashSet`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `debug` and `error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":647,"byte_end":652,"line_start":21,"line_end":21,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/security.rs","byte_start":660,"byte_end":665,"line_start":21,"line_end":21,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":647,"byte_end":654,"line_start":21,"line_end":21,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":15,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":658,"byte_end":665,"line_start":21,"line_end":21,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":26,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":646,"byte_end":647,"line_start":21,"line_end":21,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/middleware/security.rs","byte_start":665,"byte_end":666,"line_start":21,"line_end":21,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"use tracing::{debug, warn, error};","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:21:15: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `debug` and `error`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `regex::Regex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":672,"byte_end":684,"line_start":22,"line_end":22,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use regex::Regex;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":668,"byte_end":686,"line_start":22,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use regex::Regex;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:22:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `regex::Regex`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/models/tmdb.rs","byte_start":41,"byte_end":66,"line_start":2,"line_end":2,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/models/tmdb.rs","byte_start":37,"byte_end":68,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/models/tmdb.rs:2:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::collections::HashMap`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/models/mdblist.rs","byte_start":202,"byte_end":227,"line_start":7,"line_end":7,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/models/mdblist.rs","byte_start":198,"byte_end":229,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/models/mdblist.rs:7:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::collections::HashMap`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `SearchParams`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/services/stremio.rs","byte_start":664,"byte_end":676,"line_start":18,"line_end":18,"column_start":42,"column_end":54,"is_primary":true,"text":[{"text":"use crate::services::tmdb::{TmdbService, SearchParams, DiscoverParams};","highlight_start":42,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/services/stremio.rs","byte_start":662,"byte_end":676,"line_start":18,"line_end":18,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"use crate::services::tmdb::{TmdbService, SearchParams, DiscoverParams};","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:18:42: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `SearchParams`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `std::hash::Hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/services/cache.rs","byte_start":334,"byte_end":349,"line_start":10,"line_end":10,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::hash::Hash;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/services/cache.rs","byte_start":330,"byte_end":351,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::hash::Hash;","highlight_start":1,"highlight_end":21},{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/cache.rs:10:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `std::hash::Hash`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `CacheKeys`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/services/mdblist.rs","byte_start":579,"byte_end":588,"line_start":18,"line_end":18,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys, CacheResult};","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/services/mdblist.rs","byte_start":577,"byte_end":588,"line_start":18,"line_end":18,"column_start":42,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys, CacheResult};","highlight_start":42,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/mdblist.rs:18:44: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `CacheKeys`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `info`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":399,"byte_end":403,"line_start":12,"line_end":12,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":399,"byte_end":405,"line_start":12,"line_end":12,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use tracing::{info, warn, error};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:12:15: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `info`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `CacheKeys`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":699,"byte_end":708,"line_start":18,"line_end":18,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":697,"byte_end":708,"line_start":18,"line_end":18,"column_start":42,"column_end":53,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":42,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":684,"byte_end":685,"line_start":18,"line_end":18,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":708,"byte_end":709,"line_start":18,"line_end":18,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"use crate::services::cache::{CacheService, CacheKeys};","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:18:44: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `CacheKeys`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused import: `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/response.rs","byte_start":136,"byte_end":141,"line_start":4,"line_end":4,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"use serde_json::{json, Value};","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/utils/response.rs","byte_start":134,"byte_end":141,"line_start":4,"line_end":4,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"use serde_json::{json, Value};","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/response.rs","byte_start":129,"byte_end":130,"line_start":4,"line_end":4,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"use serde_json::{json, Value};","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/response.rs","byte_start":141,"byte_end":142,"line_start":4,"line_end":4,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use serde_json::{json, Value};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/utils/response.rs:4:24: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused import: `Value`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused imports: `auth::AuthService`, `cache::CacheService`, `enhanced_metadata::EnhancedMetadataService`, `mdblist::MdbListService`, `rate_limiter::RateLimiter`, `stremio::StremioService`, and `tmdb::TmdbService`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2292,"byte_end":2309,"line_start":77,"line_end":77,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        auth::AuthService,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2319,"byte_end":2338,"line_start":78,"line_end":78,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        cache::CacheService,","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2348,"byte_end":2373,"line_start":79,"line_end":79,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"        rate_limiter::RateLimiter,","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2383,"byte_end":2406,"line_start":80,"line_end":80,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"        stremio::StremioService,","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2416,"byte_end":2433,"line_start":81,"line_end":81,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        tmdb::TmdbService,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2461,"byte_end":2484,"line_start":83,"line_end":83,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"        mdblist::MdbListService,","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2494,"byte_end":2536,"line_start":84,"line_end":84,"column_start":9,"column_end":51,"is_primary":true,"text":[{"text":"        enhanced_metadata::EnhancedMetadataService,","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2292,"byte_end":2443,"line_start":77,"line_end":82,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        auth::AuthService,","highlight_start":9,"highlight_end":27},{"text":"        cache::CacheService,","highlight_start":1,"highlight_end":29},{"text":"        rate_limiter::RateLimiter,","highlight_start":1,"highlight_end":35},{"text":"        stremio::StremioService,","highlight_start":1,"highlight_end":33},{"text":"        tmdb::TmdbService,","highlight_start":1,"highlight_end":27},{"text":"        Services,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":2451,"byte_end":2536,"line_start":82,"line_end":84,"column_start":17,"column_end":51,"is_primary":true,"text":[{"text":"        Services,","highlight_start":17,"highlight_end":18},{"text":"        mdblist::MdbListService,","highlight_start":1,"highlight_end":33},{"text":"        enhanced_metadata::EnhancedMetadataService,","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":2282,"byte_end":2292,"line_start":76,"line_end":77,"column_start":15,"column_end":9,"is_primary":true,"text":[{"text":"    services::{","highlight_start":15,"highlight_end":16},{"text":"        auth::AuthService,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":2536,"byte_end":2543,"line_start":84,"line_end":85,"column_start":51,"column_end":6,"is_primary":true,"text":[{"text":"        enhanced_metadata::EnhancedMetadataService,","highlight_start":51,"highlight_end":52},{"text":"    },","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/main.rs:77:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused imports: `auth::AuthService`, `cache::CacheService`, `enhanced_metadata::EnhancedMetadataService`, `mdblist::MdbListService`, `rate_limiter::RateLimiter`, `stremio::StremioService`, and `tmdb::TmdbService`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":1260,"byte_end":1269,"line_start":48,"line_end":48,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        timestamp,","highlight_start":9,"highlight_end":18}],"label":"expected `String`, found `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"src/handlers/health.rs","byte_start":1260,"byte_end":1260,"line_start":48,"line_end":48,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        timestamp,","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"timestamp: ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/handlers/health.rs","byte_start":1269,"byte_end":1269,"line_start":48,"line_end":48,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"        timestamp,","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:48:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `u64`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::HealthStatus` has no field named `uptime`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":1335,"byte_end":1341,"line_start":50,"line_end":50,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        uptime: get_uptime(),","highlight_start":9,"highlight_end":15}],"label":"`models::HealthStatus` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `database`, `tmdb_api`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:50:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::HealthStatus` has no field named `uptime`: `models::HealthStatus` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::HealthStatus` has no field named `checks`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":1365,"byte_end":1371,"line_start":51,"line_end":51,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        checks: json!({","highlight_start":9,"highlight_end":15}],"label":"`models::HealthStatus` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `database`, `tmdb_api`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:51:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::HealthStatus` has no field named `checks`: `models::HealthStatus` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::HealthStatus>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":1826,"byte_end":1830,"line_start":67,"line_end":67,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:67:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::HealthStatus>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `state` on type `Arc<tokio::sync::RwLock<RateLimiter>>`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7173,"byte_end":7178,"line_start":234,"line_end":234,"column_start":49,"column_end":54,"is_primary":true,"text":[{"text":"                    state.services.rate_limiter.state.clone(),","highlight_start":49,"highlight_end":54}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/main.rs:234:49: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `state` on type `Arc<tokio::sync::RwLock<RateLimiter>>`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/database.rs","byte_start":4362,"byte_end":4366,"line_start":137,"line_end":137,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(User {","highlight_start":12,"highlight_end":16}],"label":"missing `avatar_url`, `full_name` and `preferences`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/database.rs:137:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m: missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`: missing `avatar_url`, `full_name` and `preferences`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/database.rs","byte_start":5222,"byte_end":5226,"line_start":159,"line_end":159,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Some(row) => Ok(Some(User {","highlight_start":34,"highlight_end":38}],"label":"missing `avatar_url`, `full_name` and `preferences`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/database.rs:159:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m: missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`: missing `avatar_url`, `full_name` and `preferences`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/database.rs","byte_start":6176,"byte_end":6180,"line_start":183,"line_end":183,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"            Some(row) => Ok(Some(User {","highlight_start":34,"highlight_end":38}],"label":"missing `avatar_url`, `full_name` and `preferences`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/database.rs:183:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m: missing fields `avatar_url`, `full_name` and `preferences` in initializer of `User`: missing `avatar_url`, `full_name` and `preferences`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":939,"byte_end":1049,"line_start":35,"line_end":38,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": validation_error,","highlight_start":1,"highlight_end":45},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":934,"byte_end":938,"line_start":35,"line_end":35,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":939,"byte_end":1049,"line_start":35,"line_end":38,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": validation_error,","highlight_start":1,"highlight_end":45},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":934,"byte_end":1050,"line_start":35,"line_end":38,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": validation_error,","highlight_start":1,"highlight_end":45},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":939,"byte_end":1049,"line_start":35,"line_end":38,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": validation_error,","highlight_start":1,"highlight_end":45},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:35:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":1064,"byte_end":1068,"line_start":39,"line_end":39,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:39:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":1383,"byte_end":1509,"line_start":49,"line_end":52,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this email already exists\",","highlight_start":1,"highlight_end":66},{"text":"                \"code\": \"USER_EXISTS\"","highlight_start":1,"highlight_end":38},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":1378,"byte_end":1382,"line_start":49,"line_end":49,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":1383,"byte_end":1509,"line_start":49,"line_end":52,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this email already exists\",","highlight_start":1,"highlight_end":66},{"text":"                \"code\": \"USER_EXISTS\"","highlight_start":1,"highlight_end":38},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":1378,"byte_end":1510,"line_start":49,"line_end":52,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"User with this email already exists\",","highlight_start":1,"highlight_end":66},{"text":"                \"code\": \"USER_EXISTS\"","highlight_start":1,"highlight_end":38},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":1383,"byte_end":1509,"line_start":49,"line_end":52,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this email already exists\",","highlight_start":1,"highlight_end":66},{"text":"                \"code\": \"USER_EXISTS\"","highlight_start":1,"highlight_end":38},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:49:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":1524,"byte_end":1528,"line_start":53,"line_end":53,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:53:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":1810,"byte_end":1943,"line_start":62,"line_end":65,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this username already exists\",","highlight_start":1,"highlight_end":69},{"text":"                \"code\": \"USERNAME_EXISTS\"","highlight_start":1,"highlight_end":42},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":1805,"byte_end":1809,"line_start":62,"line_end":62,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":1810,"byte_end":1943,"line_start":62,"line_end":65,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this username already exists\",","highlight_start":1,"highlight_end":69},{"text":"                \"code\": \"USERNAME_EXISTS\"","highlight_start":1,"highlight_end":42},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":1805,"byte_end":1944,"line_start":62,"line_end":65,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"User with this username already exists\",","highlight_start":1,"highlight_end":69},{"text":"                \"code\": \"USERNAME_EXISTS\"","highlight_start":1,"highlight_end":42},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":1810,"byte_end":1943,"line_start":62,"line_end":65,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"User with this username already exists\",","highlight_start":1,"highlight_end":69},{"text":"                \"code\": \"USERNAME_EXISTS\"","highlight_start":1,"highlight_end":42},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:62:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":1958,"byte_end":1962,"line_start":66,"line_end":66,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:66:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2378,"byte_end":2505,"line_start":79,"line_end":82,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":2373,"byte_end":2377,"line_start":79,"line_end":79,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":2378,"byte_end":2505,"line_start":79,"line_end":82,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":2373,"byte_end":2506,"line_start":79,"line_end":82,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":2378,"byte_end":2505,"line_start":79,"line_end":82,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:79:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2524,"byte_end":2528,"line_start":83,"line_end":83,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:83:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `UserCreate` has no field named `full_name`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2811,"byte_end":2820,"line_start":94,"line_end":94,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        full_name: payload.full_name,","highlight_start":9,"highlight_end":18}],"label":"`UserCreate` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `password`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:94:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `UserCreate` has no field named `full_name`: `UserCreate` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `full_name` on type `models::auth::RegisterRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2830,"byte_end":2839,"line_start":94,"line_end":94,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"        full_name: payload.full_name,","highlight_start":28,"highlight_end":37}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `username`, `email`, `password`, `confirm_password`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:94:28: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `full_name` on type `models::auth::RegisterRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2886,"byte_end":2900,"line_start":97,"line_end":97,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"    match state.database.create_user(create_request).await {","highlight_start":38,"highlight_end":52}],"label":"expected `&UserCreate`, found `UserCreate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":2874,"byte_end":2885,"line_start":97,"line_end":97,"column_start":26,"column_end":37,"is_primary":false,"text":[{"text":"    match state.database.create_user(create_request).await {","highlight_start":26,"highlight_end":37}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":3471,"byte_end":3495,"line_start":107,"line_end":107,"column_start":37,"column_end":61,"is_primary":false,"text":[{"text":"    pub async fn create_user(&self, user_create: &UserCreate) -> Result<User> {","highlight_start":37,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":3452,"byte_end":3463,"line_start":107,"line_end":107,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    pub async fn create_user(&self, user_create: &UserCreate) -> Result<User> {","highlight_start":18,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":2886,"byte_end":2886,"line_start":97,"line_end":97,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"    match state.database.create_user(create_request).await {","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:97:38: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&UserCreate`, found `UserCreate`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":3458,"byte_end":3617,"line_start":109,"line_end":112,"column_start":37,"column_end":27,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":3453,"byte_end":3457,"line_start":109,"line_end":109,"column_start":32,"column_end":36,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":36}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":3458,"byte_end":3617,"line_start":109,"line_end":112,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":3453,"byte_end":3618,"line_start":109,"line_end":112,"column_start":32,"column_end":28,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":3458,"byte_end":3617,"line_start":109,"line_end":112,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:109:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":3644,"byte_end":3648,"line_start":113,"line_end":113,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: None,","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:113:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 3 arguments but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":3880,"byte_end":3906,"line_start":120,"line_end":120,"column_start":58,"column_end":84,"is_primary":false,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":58,"highlight_end":84}],"label":"argument #3 of type `DateTime<Utc>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":3866,"byte_end":3880,"line_start":120,"line_end":120,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":44,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":9453,"byte_end":9478,"line_start":279,"line_end":279,"column_start":73,"column_end":98,"is_primary":false,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":73,"highlight_end":98}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9398,"byte_end":9412,"line_start":279,"line_end":279,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":3880,"byte_end":3906,"line_start":120,"line_end":120,"column_start":58,"column_end":84,"is_primary":true,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":58,"highlight_end":84}],"label":null,"suggested_replacement":"(&user.id, &refresh_token, /* DateTime<Utc> */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:120:44: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 3 arguments but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `full_name`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":4369,"byte_end":4378,"line_start":133,"line_end":133,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                    full_name: user.full_name,","highlight_start":21,"highlight_end":30}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:133:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `full_name`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `updated_at`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":4465,"byte_end":4475,"line_start":135,"line_end":135,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    updated_at: user.updated_at,","highlight_start":21,"highlight_end":31}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:135:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `updated_at`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::AuthResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":4689,"byte_end":4693,"line_start":143,"line_end":143,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:143:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::AuthResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":4910,"byte_end":4918,"line_start":149,"line_end":149,"column_start":40,"column_end":48,"is_primary":true,"text":[{"text":"            (StatusCode::CREATED, Json(response))","highlight_start":40,"highlight_end":48}],"label":"expected `ApiResponse<()>`, found `ApiResponse<AuthResponse>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":4905,"byte_end":4909,"line_start":149,"line_end":149,"column_start":35,"column_end":39,"is_primary":false,"text":[{"text":"            (StatusCode::CREATED, Json(response))","highlight_start":35,"highlight_end":39}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::auth::AuthResponse>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::auth::AuthResponse>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":4910,"byte_end":4918,"line_start":149,"line_end":149,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"            (StatusCode::CREATED, Json(response))","highlight_start":40,"highlight_end":48}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":4905,"byte_end":4919,"line_start":149,"line_end":149,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"            (StatusCode::CREATED, Json(response))","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:149:40: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<AuthResponse>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5146,"byte_end":5278,"line_start":156,"line_end":159,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to create user\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"USER_CREATION_ERROR\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":5141,"byte_end":5145,"line_start":156,"line_end":156,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":5146,"byte_end":5278,"line_start":156,"line_end":159,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to create user\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"USER_CREATION_ERROR\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":5141,"byte_end":5279,"line_start":156,"line_end":159,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Failed to create user\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"USER_CREATION_ERROR\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":5146,"byte_end":5278,"line_start":156,"line_end":159,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to create user\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"USER_CREATION_ERROR\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:156:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5297,"byte_end":5301,"line_start":160,"line_end":160,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:160:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `username_or_email` on type `models::auth::LoginRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5614,"byte_end":5631,"line_start":173,"line_end":173,"column_start":53,"column_end":70,"is_primary":true,"text":[{"text":"    tracing::info!(\"Login attempt for: {}\", payload.username_or_email);","highlight_start":53,"highlight_end":70}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5614,"byte_end":5631,"line_start":173,"line_end":173,"column_start":53,"column_end":70,"is_primary":true,"text":[{"text":"    tracing::info!(\"Login attempt for: {}\", payload.username_or_email);","highlight_start":53,"highlight_end":70}],"label":null,"suggested_replacement":"email_or_username","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:173:53: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `username_or_email` on type `models::auth::LoginRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `username_or_email` on type `models::auth::LoginRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5740,"byte_end":5757,"line_start":176,"line_end":176,"column_start":69,"column_end":86,"is_primary":true,"text":[{"text":"    let user = match get_user_by_username_or_email(&state, &payload.username_or_email).await {","highlight_start":69,"highlight_end":86}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5740,"byte_end":5757,"line_start":176,"line_end":176,"column_start":69,"column_end":86,"is_primary":true,"text":[{"text":"    let user = match get_user_by_username_or_email(&state, &payload.username_or_email).await {","highlight_start":69,"highlight_end":86}],"label":null,"suggested_replacement":"email_or_username","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:176:69: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `username_or_email` on type `models::auth::LoginRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":5948,"byte_end":6078,"line_start":182,"line_end":185,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":5943,"byte_end":5947,"line_start":182,"line_end":182,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":5948,"byte_end":6078,"line_start":182,"line_end":185,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":5943,"byte_end":6079,"line_start":182,"line_end":185,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":5948,"byte_end":6078,"line_start":182,"line_end":185,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:182:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":6097,"byte_end":6101,"line_start":186,"line_end":186,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:186:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":6832,"byte_end":6991,"line_start":205,"line_end":208,"column_start":37,"column_end":27,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":6827,"byte_end":6831,"line_start":205,"line_end":205,"column_start":32,"column_end":36,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":36}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":6832,"byte_end":6991,"line_start":205,"line_end":208,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":6827,"byte_end":6992,"line_start":205,"line_end":208,"column_start":32,"column_end":28,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":6832,"byte_end":6991,"line_start":205,"line_end":208,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"Internal server error\",","highlight_start":1,"highlight_end":64},{"text":"                            \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":61},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:205:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":7018,"byte_end":7022,"line_start":209,"line_end":209,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: None,","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:209:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 3 arguments but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":7254,"byte_end":7280,"line_start":216,"line_end":216,"column_start":58,"column_end":84,"is_primary":false,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":58,"highlight_end":84}],"label":"argument #3 of type `DateTime<Utc>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":7240,"byte_end":7254,"line_start":216,"line_end":216,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":44,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":9453,"byte_end":9478,"line_start":279,"line_end":279,"column_start":73,"column_end":98,"is_primary":false,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":73,"highlight_end":98}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9398,"byte_end":9412,"line_start":279,"line_end":279,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":7254,"byte_end":7280,"line_start":216,"line_end":216,"column_start":58,"column_end":84,"is_primary":true,"text":[{"text":"            if let Err(e) = state.database.create_session(&user.id, &refresh_token).await {","highlight_start":58,"highlight_end":84}],"label":null,"suggested_replacement":"(&user.id, &refresh_token, /* DateTime<Utc> */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:216:44: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 3 arguments but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `full_name`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":7743,"byte_end":7752,"line_start":229,"line_end":229,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                    full_name: user.full_name,","highlight_start":21,"highlight_end":30}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:229:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `full_name`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `updated_at`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":7839,"byte_end":7849,"line_start":231,"line_end":231,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    updated_at: user.updated_at,","highlight_start":21,"highlight_end":31}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:231:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `updated_at`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::AuthResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8063,"byte_end":8067,"line_start":239,"line_end":239,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:239:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::AuthResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8279,"byte_end":8287,"line_start":245,"line_end":245,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<AuthResponse>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":8274,"byte_end":8278,"line_start":245,"line_end":245,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::auth::AuthResponse>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::auth::AuthResponse>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8279,"byte_end":8287,"line_start":245,"line_end":245,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":8274,"byte_end":8288,"line_start":245,"line_end":245,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:245:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<AuthResponse>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `username_or_email` on type `models::auth::LoginRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8400,"byte_end":8417,"line_start":248,"line_end":248,"column_start":69,"column_end":86,"is_primary":true,"text":[{"text":"            tracing::warn!(\"Invalid password for user: {}\", payload.username_or_email);","highlight_start":69,"highlight_end":86}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8400,"byte_end":8417,"line_start":248,"line_end":248,"column_start":69,"column_end":86,"is_primary":true,"text":[{"text":"            tracing::warn!(\"Invalid password for user: {}\", payload.username_or_email);","highlight_start":69,"highlight_end":86}],"label":null,"suggested_replacement":"email_or_username","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:248:69: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `username_or_email` on type `models::auth::LoginRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8555,"byte_end":8685,"line_start":252,"line_end":255,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":8550,"byte_end":8554,"line_start":252,"line_end":252,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":8555,"byte_end":8685,"line_start":252,"line_end":255,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":8550,"byte_end":8686,"line_start":252,"line_end":255,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":8555,"byte_end":8685,"line_start":252,"line_end":255,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid credentials\",","highlight_start":1,"highlight_end":54},{"text":"                    \"code\": \"INVALID_CREDENTIALS\"","highlight_start":1,"highlight_end":50},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:252:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":8704,"byte_end":8708,"line_start":256,"line_end":256,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:256:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9517,"byte_end":9643,"line_start":283,"line_end":286,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid refresh token\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":9512,"byte_end":9516,"line_start":283,"line_end":283,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":9517,"byte_end":9643,"line_start":283,"line_end":286,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid refresh token\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":9512,"byte_end":9644,"line_start":283,"line_end":286,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid refresh token\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":9517,"byte_end":9643,"line_start":283,"line_end":286,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid refresh token\",","highlight_start":1,"highlight_end":56},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:283:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9662,"byte_end":9666,"line_start":287,"line_end":287,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:287:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::RefreshTokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9853,"byte_end":9860,"line_start":294,"line_end":294,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"    match state.database.is_session_valid(&claims.user_id, &payload.refresh_token).await {","highlight_start":51,"highlight_end":58}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `exp`, `iat`, `jti`, `token_type`, `iss`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:294:51: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::RefreshTokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9845,"byte_end":9860,"line_start":294,"line_end":294,"column_start":43,"column_end":58,"is_primary":false,"text":[{"text":"    match state.database.is_session_valid(&claims.user_id, &payload.refresh_token).await {","highlight_start":43,"highlight_end":58}],"label":"unexpected argument #1","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":9828,"byte_end":9844,"line_start":294,"line_end":294,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    match state.database.is_session_valid(&claims.user_id, &payload.refresh_token).await {","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":10335,"byte_end":10351,"line_start":312,"line_end":312,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    pub async fn is_session_valid(&self, token_hash: &str) -> Result<bool> {","highlight_start":18,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9845,"byte_end":9862,"line_start":294,"line_end":294,"column_start":43,"column_end":60,"is_primary":true,"text":[{"text":"    match state.database.is_session_valid(&claims.user_id, &payload.refresh_token).await {","highlight_start":43,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:294:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::RefreshTokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":9996,"byte_end":10003,"line_start":297,"line_end":297,"column_start":57,"column_end":64,"is_primary":true,"text":[{"text":"            match state.database.get_user_by_id(&claims.user_id).await {","highlight_start":57,"highlight_end":64}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `exp`, `iat`, `jti`, `token_type`, `iss`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:297:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::RefreshTokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":10559,"byte_end":10744,"line_start":307,"line_end":310,"column_start":45,"column_end":35,"is_primary":true,"text":[{"text":"                                error: Some(json!({","highlight_start":45,"highlight_end":52},{"text":"                                    \"message\": \"Token generation failed\",","highlight_start":1,"highlight_end":74},{"text":"                                    \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":69},{"text":"                                })),","highlight_start":1,"highlight_end":35}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":10554,"byte_end":10558,"line_start":307,"line_end":307,"column_start":40,"column_end":44,"is_primary":false,"text":[{"text":"                                error: Some(json!({","highlight_start":40,"highlight_end":44}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":10559,"byte_end":10744,"line_start":307,"line_end":310,"column_start":45,"column_end":35,"is_primary":false,"text":[{"text":"                                error: Some(json!({","highlight_start":45,"highlight_end":52},{"text":"                                    \"message\": \"Token generation failed\",","highlight_start":1,"highlight_end":74},{"text":"                                    \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":69},{"text":"                                })),","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":10554,"byte_end":10745,"line_start":307,"line_end":310,"column_start":40,"column_end":36,"is_primary":true,"text":[{"text":"                                error: Some(json!({","highlight_start":40,"highlight_end":52},{"text":"                                    \"message\": \"Token generation failed\",","highlight_start":1,"highlight_end":74},{"text":"                                    \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":69},{"text":"                                })),","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":10559,"byte_end":10744,"line_start":307,"line_end":310,"column_start":45,"column_end":35,"is_primary":false,"text":[{"text":"                                error: Some(json!({","highlight_start":45,"highlight_end":52},{"text":"                                    \"message\": \"Token generation failed\",","highlight_start":1,"highlight_end":74},{"text":"                                    \"code\": \"TOKEN_GENERATION_ERROR\"","highlight_start":1,"highlight_end":69},{"text":"                                })),","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:307:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":10779,"byte_end":10783,"line_start":311,"line_end":311,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"                                meta: None,","highlight_start":33,"highlight_end":37}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:311:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::RefreshTokenResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":11401,"byte_end":11405,"line_start":327,"line_end":327,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: Some(json!({","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:327:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::RefreshTokenResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":11657,"byte_end":11665,"line_start":333,"line_end":333,"column_start":43,"column_end":51,"is_primary":true,"text":[{"text":"                    (StatusCode::OK, Json(response))","highlight_start":43,"highlight_end":51}],"label":"expected `ApiResponse<()>`, found `ApiResponse<RefreshTokenResponse>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":11652,"byte_end":11656,"line_start":333,"line_end":333,"column_start":38,"column_end":42,"is_primary":false,"text":[{"text":"                    (StatusCode::OK, Json(response))","highlight_start":38,"highlight_end":42}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::auth::RefreshTokenResponse>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::auth::RefreshTokenResponse>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":11657,"byte_end":11665,"line_start":333,"line_end":333,"column_start":43,"column_end":51,"is_primary":false,"text":[{"text":"                    (StatusCode::OK, Json(response))","highlight_start":43,"highlight_end":51}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":11652,"byte_end":11666,"line_start":333,"line_end":333,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"                    (StatusCode::OK, Json(response))","highlight_start":38,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:333:43: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<RefreshTokenResponse>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":11964,"byte_end":12108,"line_start":340,"line_end":343,"column_start":37,"column_end":27,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"User not found\",","highlight_start":1,"highlight_end":57},{"text":"                            \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":53},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":11959,"byte_end":11963,"line_start":340,"line_end":340,"column_start":32,"column_end":36,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":36}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":11964,"byte_end":12108,"line_start":340,"line_end":343,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"User not found\",","highlight_start":1,"highlight_end":57},{"text":"                            \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":53},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":11959,"byte_end":12109,"line_start":340,"line_end":343,"column_start":32,"column_end":28,"is_primary":true,"text":[{"text":"                        error: Some(json!({","highlight_start":32,"highlight_end":44},{"text":"                            \"message\": \"User not found\",","highlight_start":1,"highlight_end":57},{"text":"                            \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":53},{"text":"                        })),","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":11964,"byte_end":12108,"line_start":340,"line_end":343,"column_start":37,"column_end":27,"is_primary":false,"text":[{"text":"                        error: Some(json!({","highlight_start":37,"highlight_end":44},{"text":"                            \"message\": \"User not found\",","highlight_start":1,"highlight_end":57},{"text":"                            \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":53},{"text":"                        })),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:340:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":12135,"byte_end":12139,"line_start":344,"line_end":344,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: None,","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:344:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":12498,"byte_end":12620,"line_start":355,"line_end":358,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid session\",","highlight_start":1,"highlight_end":50},{"text":"                    \"code\": \"INVALID_SESSION\"","highlight_start":1,"highlight_end":46},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":12493,"byte_end":12497,"line_start":355,"line_end":355,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":12498,"byte_end":12620,"line_start":355,"line_end":358,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid session\",","highlight_start":1,"highlight_end":50},{"text":"                    \"code\": \"INVALID_SESSION\"","highlight_start":1,"highlight_end":46},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":12493,"byte_end":12621,"line_start":355,"line_end":358,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid session\",","highlight_start":1,"highlight_end":50},{"text":"                    \"code\": \"INVALID_SESSION\"","highlight_start":1,"highlight_end":46},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":12498,"byte_end":12620,"line_start":355,"line_end":358,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid session\",","highlight_start":1,"highlight_end":50},{"text":"                    \"code\": \"INVALID_SESSION\"","highlight_start":1,"highlight_end":46},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:355:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":12639,"byte_end":12643,"line_start":359,"line_end":359,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:359:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":12951,"byte_end":13081,"line_start":368,"line_end":371,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Session validation failed\",","highlight_start":1,"highlight_end":60},{"text":"                    \"code\": \"SESSION_ERROR\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":12946,"byte_end":12950,"line_start":368,"line_end":368,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":12951,"byte_end":13081,"line_start":368,"line_end":371,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Session validation failed\",","highlight_start":1,"highlight_end":60},{"text":"                    \"code\": \"SESSION_ERROR\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":12946,"byte_end":13082,"line_start":368,"line_end":371,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Session validation failed\",","highlight_start":1,"highlight_end":60},{"text":"                    \"code\": \"SESSION_ERROR\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":12951,"byte_end":13081,"line_start":368,"line_end":371,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Session validation failed\",","highlight_start":1,"highlight_end":60},{"text":"                    \"code\": \"SESSION_ERROR\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:368:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":13100,"byte_end":13104,"line_start":372,"line_end":372,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:372:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":13738,"byte_end":13867,"line_start":395,"line_end":398,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing token\",","highlight_start":1,"highlight_end":59},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":13733,"byte_end":13737,"line_start":395,"line_end":395,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":13738,"byte_end":13867,"line_start":395,"line_end":398,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing token\",","highlight_start":1,"highlight_end":59},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":13733,"byte_end":13868,"line_start":395,"line_end":398,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing token\",","highlight_start":1,"highlight_end":59},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":13738,"byte_end":13867,"line_start":395,"line_end":398,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing token\",","highlight_start":1,"highlight_end":59},{"text":"                    \"code\": \"INVALID_TOKEN\"","highlight_start":1,"highlight_end":44},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:395:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":13886,"byte_end":13890,"line_start":399,"line_end":399,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:399:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14074,"byte_end":14096,"line_start":406,"line_end":406,"column_start":55,"column_end":77,"is_primary":false,"text":[{"text":"    match state.database.invalidate_session(&user_id, &payload.refresh_token).await {","highlight_start":55,"highlight_end":77}],"label":"unexpected argument #2 of type `&std::option::Option<std::string::String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":14045,"byte_end":14063,"line_start":406,"line_end":406,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.invalidate_session(&user_id, &payload.refresh_token).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":10058,"byte_end":10076,"line_start":301,"line_end":301,"column_start":18,"column_end":36,"is_primary":true,"text":[{"text":"    pub async fn invalidate_session(&self, token_hash: &str) -> Result<()> {","highlight_start":18,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14072,"byte_end":14096,"line_start":406,"line_end":406,"column_start":53,"column_end":77,"is_primary":true,"text":[{"text":"    match state.database.invalidate_session(&user_id, &payload.refresh_token).await {","highlight_start":53,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:406:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::LogoutResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14504,"byte_end":14508,"line_start":418,"line_end":418,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:418:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::LogoutResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14720,"byte_end":14728,"line_start":424,"line_end":424,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<LogoutResponse>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":14715,"byte_end":14719,"line_start":424,"line_end":424,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::auth::LogoutResponse>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::auth::LogoutResponse>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14720,"byte_end":14728,"line_start":424,"line_end":424,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":14715,"byte_end":14729,"line_start":424,"line_end":424,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:424:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<LogoutResponse>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":14963,"byte_end":15080,"line_start":431,"line_end":434,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Logout failed\",","highlight_start":1,"highlight_end":48},{"text":"                    \"code\": \"LOGOUT_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":14958,"byte_end":14962,"line_start":431,"line_end":431,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":14963,"byte_end":15080,"line_start":431,"line_end":434,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Logout failed\",","highlight_start":1,"highlight_end":48},{"text":"                    \"code\": \"LOGOUT_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":14958,"byte_end":15081,"line_start":431,"line_end":434,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Logout failed\",","highlight_start":1,"highlight_end":48},{"text":"                    \"code\": \"LOGOUT_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":14963,"byte_end":15080,"line_start":431,"line_end":434,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Logout failed\",","highlight_start":1,"highlight_end":48},{"text":"                    \"code\": \"LOGOUT_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:431:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":15099,"byte_end":15103,"line_start":435,"line_end":435,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:435:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenValidationResponse` has no field named `user`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":15692,"byte_end":15696,"line_start":454,"line_end":454,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        user: Some(UserInfo {","highlight_start":25,"highlight_end":29}],"label":"`models::auth::TokenValidationResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user_id`, `username`, `expires_at`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:454:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenValidationResponse` has no field named `user`: `models::auth::TokenValidationResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `full_name`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":15883,"byte_end":15892,"line_start":458,"line_end":458,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"                            full_name: user.full_name,","highlight_start":29,"highlight_end":38}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:458:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `full_name`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::UserInfo` has no field named `updated_at`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":15995,"byte_end":16005,"line_start":460,"line_end":460,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                            updated_at: user.updated_at,","highlight_start":29,"highlight_end":39}],"label":"`models::auth::UserInfo` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:460:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::UserInfo` has no field named `updated_at`: `models::auth::UserInfo` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":16282,"byte_end":16286,"line_start":468,"line_end":468,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: None,","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:468:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenValidationResponse` has no field named `user`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":16551,"byte_end":16555,"line_start":476,"line_end":476,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        user: None,","highlight_start":25,"highlight_end":29}],"label":"`models::auth::TokenValidationResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user_id`, `username`, `expires_at`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:476:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenValidationResponse` has no field named `user`: `models::auth::TokenValidationResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":16793,"byte_end":16797,"line_start":483,"line_end":483,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        meta: None,","highlight_start":25,"highlight_end":29}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:483:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenValidationResponse` has no field named `user`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":17054,"byte_end":17058,"line_start":493,"line_end":493,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                user: None,","highlight_start":17,"highlight_end":21}],"label":"`models::auth::TokenValidationResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user_id`, `username`, `expires_at`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:493:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenValidationResponse` has no field named `user`: `models::auth::TokenValidationResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":17248,"byte_end":17252,"line_start":500,"line_end":500,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:500:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::auth::TokenValidationResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":18004,"byte_end":18061,"line_start":531,"line_end":531,"column_start":9,"column_end":66,"is_primary":true,"text":[{"text":"        state.database.get_user_by_email(username_or_email).await","highlight_start":9,"highlight_end":66}],"label":"expected `Result<User, Box<...>>`, found `Result<Option<User>, Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":18004,"byte_end":18061,"line_start":531,"line_end":531,"column_start":9,"column_end":66,"is_primary":false,"text":[{"text":"        state.database.get_user_by_email(username_or_email).await","highlight_start":9,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected enum `Result<User, Box<(dyn StdError + Send + Sync + 'static)>>`\n   found enum `Result<std::option::Option<User>, anyhow::Error>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:531:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `Result<User, Box<...>>`, found `Result<Option<User>, Error>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":18083,"byte_end":18143,"line_start":533,"line_end":533,"column_start":9,"column_end":69,"is_primary":true,"text":[{"text":"        state.database.get_user_by_username(username_or_email).await","highlight_start":9,"highlight_end":69}],"label":"expected `Result<User, Box<...>>`, found `Result<Option<User>, Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":18083,"byte_end":18143,"line_start":533,"line_end":533,"column_start":9,"column_end":69,"is_primary":false,"text":[{"text":"        state.database.get_user_by_username(username_or_email).await","highlight_start":9,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected enum `Result<User, Box<(dyn StdError + Send + Sync + 'static)>>`\n   found enum `Result<std::option::Option<User>, anyhow::Error>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:533:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `Result<User, Box<...>>`, found `Result<Option<User>, Error>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":20678,"byte_end":20820,"line_start":624,"line_end":627,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing authorization token\",","highlight_start":1,"highlight_end":73},{"text":"                    \"code\": \"UNAUTHORIZED\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":20673,"byte_end":20677,"line_start":624,"line_end":624,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":20678,"byte_end":20820,"line_start":624,"line_end":627,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing authorization token\",","highlight_start":1,"highlight_end":73},{"text":"                    \"code\": \"UNAUTHORIZED\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":20673,"byte_end":20821,"line_start":624,"line_end":627,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing authorization token\",","highlight_start":1,"highlight_end":73},{"text":"                    \"code\": \"UNAUTHORIZED\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":20678,"byte_end":20820,"line_start":624,"line_end":627,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Invalid or missing authorization token\",","highlight_start":1,"highlight_end":73},{"text":"                    \"code\": \"UNAUTHORIZED\"","highlight_start":1,"highlight_end":43},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:624:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":20839,"byte_end":20843,"line_start":628,"line_end":628,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:628:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":21227,"byte_end":21347,"line_start":641,"line_end":644,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"User not found\",","highlight_start":1,"highlight_end":49},{"text":"                    \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":21222,"byte_end":21226,"line_start":641,"line_end":641,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":21227,"byte_end":21347,"line_start":641,"line_end":644,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"User not found\",","highlight_start":1,"highlight_end":49},{"text":"                    \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":21222,"byte_end":21348,"line_start":641,"line_end":644,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"User not found\",","highlight_start":1,"highlight_end":49},{"text":"                    \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":21227,"byte_end":21347,"line_start":641,"line_end":644,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"User not found\",","highlight_start":1,"highlight_end":49},{"text":"                    \"code\": \"USER_NOT_FOUND\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:641:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":21366,"byte_end":21370,"line_start":645,"line_end":645,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:645:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":21703,"byte_end":21828,"line_start":656,"line_end":659,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Current password is incorrect\",","highlight_start":1,"highlight_end":60},{"text":"                \"code\": \"INVALID_PASSWORD\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":21698,"byte_end":21702,"line_start":656,"line_end":656,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":21703,"byte_end":21828,"line_start":656,"line_end":659,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Current password is incorrect\",","highlight_start":1,"highlight_end":60},{"text":"                \"code\": \"INVALID_PASSWORD\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":21698,"byte_end":21829,"line_start":656,"line_end":659,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Current password is incorrect\",","highlight_start":1,"highlight_end":60},{"text":"                \"code\": \"INVALID_PASSWORD\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":21703,"byte_end":21828,"line_start":656,"line_end":659,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Current password is incorrect\",","highlight_start":1,"highlight_end":60},{"text":"                \"code\": \"INVALID_PASSWORD\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:656:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":21843,"byte_end":21847,"line_start":660,"line_end":660,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:660:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":22119,"byte_end":22262,"line_start":670,"line_end":673,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"New password must be at least 8 characters long\",","highlight_start":1,"highlight_end":78},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":22114,"byte_end":22118,"line_start":670,"line_end":670,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":22119,"byte_end":22262,"line_start":670,"line_end":673,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"New password must be at least 8 characters long\",","highlight_start":1,"highlight_end":78},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":22114,"byte_end":22263,"line_start":670,"line_end":673,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"New password must be at least 8 characters long\",","highlight_start":1,"highlight_end":78},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":22119,"byte_end":22262,"line_start":670,"line_end":673,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"New password must be at least 8 characters long\",","highlight_start":1,"highlight_end":78},{"text":"                \"code\": \"VALIDATION_ERROR\"","highlight_start":1,"highlight_end":43},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:670:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":22277,"byte_end":22281,"line_start":674,"line_end":674,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:674:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":22649,"byte_end":22785,"line_start":686,"line_end":689,"column_start":29,"column_end":19,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to process new password\",","highlight_start":1,"highlight_end":65},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":22644,"byte_end":22648,"line_start":686,"line_end":686,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":22649,"byte_end":22785,"line_start":686,"line_end":689,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to process new password\",","highlight_start":1,"highlight_end":65},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":22644,"byte_end":22786,"line_start":686,"line_end":689,"column_start":24,"column_end":20,"is_primary":true,"text":[{"text":"                error: Some(json!({","highlight_start":24,"highlight_end":36},{"text":"                    \"message\": \"Failed to process new password\",","highlight_start":1,"highlight_end":65},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":22649,"byte_end":22785,"line_start":686,"line_end":689,"column_start":29,"column_end":19,"is_primary":false,"text":[{"text":"                error: Some(json!({","highlight_start":29,"highlight_end":36},{"text":"                    \"message\": \"Failed to process new password\",","highlight_start":1,"highlight_end":65},{"text":"                    \"code\": \"INTERNAL_ERROR\"","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:686:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":22804,"byte_end":22808,"line_start":690,"line_end":690,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: None,","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:690:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `update_user_password` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":22991,"byte_end":23011,"line_start":697,"line_end":697,"column_start":36,"column_end":56,"is_primary":true,"text":[{"text":"    if let Err(_) = state.database.update_user_password(&user_id, &new_password_hash).await {","highlight_start":36,"highlight_end":56}],"label":"method not found in `Arc<Database>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/auth.rs:697:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `update_user_password` found for struct `Arc<database::Database>` in the current scope: method not found in `Arc<Database>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":23169,"byte_end":23288,"line_start":701,"line_end":704,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Failed to update password\",","highlight_start":1,"highlight_end":56},{"text":"                \"code\": \"DATABASE_ERROR\"","highlight_start":1,"highlight_end":41},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":23164,"byte_end":23168,"line_start":701,"line_end":701,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":23169,"byte_end":23288,"line_start":701,"line_end":704,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Failed to update password\",","highlight_start":1,"highlight_end":56},{"text":"                \"code\": \"DATABASE_ERROR\"","highlight_start":1,"highlight_end":41},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/auth.rs","byte_start":23164,"byte_end":23289,"line_start":701,"line_end":704,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Failed to update password\",","highlight_start":1,"highlight_end":56},{"text":"                \"code\": \"DATABASE_ERROR\"","highlight_start":1,"highlight_end":41},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/auth.rs","byte_start":23169,"byte_end":23288,"line_start":701,"line_end":704,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Failed to update password\",","highlight_start":1,"highlight_end":56},{"text":"                \"code\": \"DATABASE_ERROR\"","highlight_start":1,"highlight_end":41},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:701:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":23303,"byte_end":23307,"line_start":705,"line_end":705,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:705:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<JsonValue>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":23657,"byte_end":23661,"line_start":718,"line_end":718,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: None,","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:718:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<JsonValue>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":23703,"byte_end":23711,"line_start":721,"line_end":721,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"expected `ApiResponse<()>`, found `ApiResponse<Value>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":23698,"byte_end":23702,"line_start":721,"line_end":721,"column_start":22,"column_end":26,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":26}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<JsonValue>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<JsonValue>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/auth.rs","byte_start":23703,"byte_end":23711,"line_start":721,"line_end":721,"column_start":27,"column_end":35,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/auth.rs","byte_start":23698,"byte_end":23712,"line_start":721,"line_end":721,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:721:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<Value>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `api::PaginatedResponse<_>` has no field named `data`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":2513,"byte_end":2517,"line_start":86,"line_end":86,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        data: paginated_results,","highlight_start":9,"highlight_end":13}],"label":"`api::PaginatedResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `page`, `results`, `total_results`, `total_pages`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:86:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `api::PaginatedResponse<_>` has no field named `data`: `api::PaginatedResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `api::PaginatedResponse<_>` has no field named `pagination`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":2546,"byte_end":2556,"line_start":87,"line_end":87,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        pagination: crate::models::api::PaginationInfo {","highlight_start":9,"highlight_end":19}],"label":"`api::PaginatedResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `page`, `results`, `total_results`, `total_pages`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:87:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `api::PaginatedResponse<_>` has no field named `pagination`: `api::PaginatedResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `trending` on type `models::mdblist::MdbListTrendingResponse`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":5844,"byte_end":5852,"line_start":181,"line_end":181,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"    for item in trending.trending {","highlight_start":26,"highlight_end":34}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `movies`, `shows`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:181:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `trending` on type `models::mdblist::MdbListTrendingResponse`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `health_check` found for struct `Arc<MdbListService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":6633,"byte_end":6645,"line_start":207,"line_end":207,"column_start":41,"column_end":53,"is_primary":true,"text":[{"text":"    let health = state.services.mdblist.health_check().await;","highlight_start":41,"highlight_end":53}],"label":"method not found in `Arc<MdbListService>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `HealthCheck` which provides `health_check` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":215,"byte_end":215,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::services::HealthCheck;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:207:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `health_check` found for struct `Arc<MdbListService>` in the current scope: method not found in `Arc<MdbListService>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `health_check` found for struct `Arc<MdbListService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":7112,"byte_end":7124,"line_start":221,"line_end":221,"column_start":47,"column_end":59,"is_primary":true,"text":[{"text":"    health_checks.push(state.services.mdblist.health_check().await);","highlight_start":47,"highlight_end":59}],"label":"method not found in `Arc<MdbListService>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `HealthCheck` which provides `health_check` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":215,"byte_end":215,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use axum::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::services::HealthCheck;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:221:47: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `health_check` found for struct `Arc<MdbListService>` in the current scope: method not found in `Arc<MdbListService>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":7173,"byte_end":7186,"line_start":223,"line_end":223,"column_start":34,"column_end":47,"is_primary":true,"text":[{"text":"    Ok(Json(ApiResponse::success(health_checks)))","highlight_start":34,"highlight_end":47}],"label":"expected `Vec<ServiceHealth>`, found `Vec<Result<bool, TmdbError>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":6989,"byte_end":7029,"line_start":218,"line_end":218,"column_start":24,"column_end":64,"is_primary":false,"text":[{"text":"    health_checks.push(state.services.tmdb.health_check().await);","highlight_start":24,"highlight_end":64}],"label":"this argument has type `Result<bool, services::tmdb::TmdbError>`...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":6970,"byte_end":6983,"line_start":218,"line_end":218,"column_start":5,"column_end":18,"is_primary":false,"text":[{"text":"    health_checks.push(state.services.tmdb.health_check().await);","highlight_start":5,"highlight_end":18}],"label":"... which causes `health_checks` to have type `Vec<Result<bool, services::tmdb::TmdbError>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/enhanced_metadata.rs","byte_start":7152,"byte_end":7172,"line_start":223,"line_end":223,"column_start":13,"column_end":33,"is_primary":false,"text":[{"text":"    Ok(Json(ApiResponse::success(health_checks)))","highlight_start":13,"highlight_end":33}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `Vec<ServiceHealth>`\n   found struct `Vec<Result<bool, services::tmdb::TmdbError>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/models/api.rs","byte_start":2655,"byte_end":2662,"line_start":94,"line_end":94,"column_start":20,"column_end":27,"is_primary":false,"text":[{"text":"    pub fn success(data: T) -> Self {","highlight_start":20,"highlight_end":27}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/api.rs","byte_start":2647,"byte_end":2654,"line_start":94,"line_end":94,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn success(data: T) -> Self {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/enhanced_metadata.rs:223:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `Vec<ServiceHealth>`, found `Vec<Result<bool, TmdbError>>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `status` on type `JsonValue`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":2683,"byte_end":2689,"line_start":95,"line_end":95,"column_start":38,"column_end":44,"is_primary":true,"text":[{"text":"    let all_healthy = database_check.status == \"healthy\" ","highlight_start":38,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:95:38: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `status` on type `JsonValue`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `status` on type `JsonValue`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":2726,"byte_end":2732,"line_start":96,"line_end":96,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"        && tmdb_check.status == \"healthy\"","highlight_start":23,"highlight_end":29}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:96:23: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `status` on type `JsonValue`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `status` on type `JsonValue`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":2770,"byte_end":2776,"line_start":97,"line_end":97,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"        && memory_check.status == \"healthy\"","highlight_start":25,"highlight_end":31}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:97:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `status` on type `JsonValue`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `status` on type `JsonValue`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":2812,"byte_end":2818,"line_start":98,"line_end":98,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"        && disk_check.status == \"healthy\";","highlight_start":23,"highlight_end":29}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:98:23: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `status` on type `JsonValue`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<JsonValue>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":3733,"byte_end":3737,"line_start":130,"line_end":130,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:130:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<JsonValue>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `pool` of struct `database::Database` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":5289,"byte_end":5293,"line_start":189,"line_end":189,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"        .fetch_one(&state.database.pool)","highlight_start":36,"highlight_end":40}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:189:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `pool` of struct `database::Database` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `http_client` on type `&AppState`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":5727,"byte_end":5738,"line_start":203,"line_end":203,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    let response = state.http_client","highlight_start":26,"highlight_end":37}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `config`, `database`, `services`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:203:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `http_client` on type `&AppState`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `pool` of struct `database::Database` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":6286,"byte_end":6290,"line_start":221,"line_end":221,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"        .fetch_one(&state.database.pool)","highlight_start":36,"highlight_end":40}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:221:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `pool` of struct `database::Database` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `pool` of struct `database::Database` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":6561,"byte_end":6565,"line_start":229,"line_end":229,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"                \"connection_pool_size\": state.database.pool.size(),","highlight_start":56,"highlight_end":60}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:229:56: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `pool` of struct `database::Database` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `pool` of struct `database::Database` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":6625,"byte_end":6629,"line_start":230,"line_end":230,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"                \"idle_connections\": state.database.pool.num_idle()","highlight_start":52,"highlight_end":56}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/health.rs:230:52: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `pool` of struct `database::Database` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `http_client` on type `&AppState`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/health.rs","byte_start":7169,"byte_end":7180,"line_start":251,"line_end":251,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"    match state.http_client","highlight_start":17,"highlight_end":28}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `config`, `database`, `services`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/health.rs:251:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `http_client` on type `&AppState`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `&UserContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1255,"byte_end":1262,"line_start":45,"line_end":45,"column_start":54,"column_end":61,"is_primary":true,"text":[{"text":"        query, page, user_context.as_ref().map(|u| u.user_id)","highlight_start":54,"highlight_end":61}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user`, `token_claims`, `is_authenticated`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:45:54: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `&UserContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1336,"byte_end":1342,"line_start":49,"line_end":49,"column_start":24,"column_end":30,"is_primary":false,"text":[{"text":"        .search_movies(&query, page)","highlight_start":24,"highlight_end":30}],"label":"expected `SearchParams`, found `&String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":1344,"byte_end":1348,"line_start":49,"line_end":49,"column_start":32,"column_end":36,"is_primary":false,"text":[{"text":"        .search_movies(&query, page)","highlight_start":32,"highlight_end":36}],"label":"unexpected argument #2 of type `u32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":1322,"byte_end":1335,"line_start":49,"line_end":49,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"        .search_movies(&query, page)","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/tmdb.rs","byte_start":5801,"byte_end":5821,"line_start":187,"line_end":187,"column_start":39,"column_end":59,"is_primary":false,"text":[{"text":"    pub async fn search_movies(&self, params: SearchParams) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":39,"highlight_end":59}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":5780,"byte_end":5793,"line_start":187,"line_end":187,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"    pub async fn search_movies(&self, params: SearchParams) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":18,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1342,"byte_end":1348,"line_start":49,"line_end":49,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"        .search_movies(&query, page)","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":1336,"byte_end":1342,"line_start":49,"line_end":49,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"        .search_movies(&query, page)","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":"/* SearchParams */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:49:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1574,"byte_end":1580,"line_start":56,"line_end":56,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":1569,"byte_end":1573,"line_start":56,"line_end":56,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":12}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `api::PaginatedResponse<models::tmdb::Movie>`\n   found struct `models::tmdb::TmdbResponse<models::tmdb::Movie>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::tmdb::TmdbResponse<models::tmdb::Movie>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1574,"byte_end":1580,"line_start":56,"line_end":56,"column_start":13,"column_end":19,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":1569,"byte_end":1581,"line_start":56,"line_end":56,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:56:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `&UserContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":1946,"byte_end":1953,"line_start":68,"line_end":68,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"        movie_id, user_context.as_ref().map(|u| u.user_id)","highlight_start":51,"highlight_end":58}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user`, `token_claims`, `is_authenticated`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:68:51: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `&UserContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `&UserContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":3061,"byte_end":3068,"line_start":97,"line_end":97,"column_start":60,"column_end":67,"is_primary":true,"text":[{"text":"        time_window, page, user_context.as_ref().map(|u| u.user_id)","highlight_start":60,"highlight_end":67}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user`, `token_claims`, `is_authenticated`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:97:60: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `&UserContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_trending_movies` found for struct `Arc<TmdbService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":3099,"byte_end":3128,"line_start":100,"line_end":101,"column_start":18,"column_end":10,"is_primary":false,"text":[{"text":"    let result = state.services.tmdb","highlight_start":18,"highlight_end":37},{"text":"        .get_trending_movies(&time_window, page)","highlight_start":1,"highlight_end":10}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":3128,"byte_end":3147,"line_start":101,"line_end":101,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"        .get_trending_movies(&time_window, page)","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_trending` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":3128,"byte_end":3147,"line_start":101,"line_end":101,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"        .get_trending_movies(&time_window, page)","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":"get_trending","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:101:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_trending_movies` found for struct `Arc<TmdbService>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `&UserContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":3926,"byte_end":3933,"line_start":123,"line_end":123,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"        page, region, user_context.as_ref().map(|u| u.user_id)","highlight_start":55,"highlight_end":62}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user`, `token_claims`, `is_authenticated`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:123:55: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `&UserContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4018,"byte_end":4035,"line_start":127,"line_end":127,"column_start":35,"column_end":52,"is_primary":false,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":35,"highlight_end":52}],"label":"unexpected argument #2 of type `std::option::Option<&str>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":3993,"byte_end":4011,"line_start":127,"line_end":127,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Option<u32>`, found `u32`","code":null,"level":"note","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4012,"byte_end":4016,"line_start":127,"line_end":127,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":29,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected enum `std::option::Option<u32>`\n   found type `u32`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/tmdb.rs","byte_start":12491,"byte_end":12508,"line_start":365,"line_end":365,"column_start":44,"column_end":61,"is_primary":false,"text":[{"text":"    pub async fn get_popular_movies(&self, page: Option<u32>) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":44,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":12465,"byte_end":12483,"line_start":365,"line_end":365,"column_start":18,"column_end":36,"is_primary":true,"text":[{"text":"    pub async fn get_popular_movies(&self, page: Option<u32>) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":18,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `Some`","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4012,"byte_end":4012,"line_start":127,"line_end":127,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"Some(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4016,"byte_end":4016,"line_start":127,"line_end":127,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4016,"byte_end":4035,"line_start":127,"line_end":127,"column_start":33,"column_end":52,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":33,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4012,"byte_end":4016,"line_start":127,"line_end":127,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"        .get_popular_movies(page, region.as_deref())","highlight_start":29,"highlight_end":33}],"label":null,"suggested_replacement":"/* std::option::Option<u32> */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:127:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4271,"byte_end":4277,"line_start":134,"line_end":134,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4266,"byte_end":4270,"line_start":134,"line_end":134,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":12}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `api::PaginatedResponse<models::tmdb::Movie>`\n   found struct `models::tmdb::TmdbResponse<models::tmdb::Movie>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::tmdb::TmdbResponse<models::tmdb::Movie>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4271,"byte_end":4277,"line_start":134,"line_end":134,"column_start":13,"column_end":19,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4266,"byte_end":4278,"line_start":134,"line_end":134,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:134:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `&UserContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4791,"byte_end":4798,"line_start":148,"line_end":148,"column_start":63,"column_end":70,"is_primary":true,"text":[{"text":"        page, params.sort_by, user_context.as_ref().map(|u| u.user_id)","highlight_start":63,"highlight_end":70}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `user`, `token_claims`, `is_authenticated`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:148:63: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `&UserContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4874,"byte_end":4881,"line_start":152,"line_end":152,"column_start":26,"column_end":33,"is_primary":false,"text":[{"text":"        .discover_movies(&params, page)","highlight_start":26,"highlight_end":33}],"label":"expected `DiscoverParams`, found `&DiscoverQuery`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4883,"byte_end":4887,"line_start":152,"line_end":152,"column_start":35,"column_end":39,"is_primary":false,"text":[{"text":"        .discover_movies(&params, page)","highlight_start":35,"highlight_end":39}],"label":"unexpected argument #2 of type `u32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4858,"byte_end":4873,"line_start":152,"line_end":152,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"        .discover_movies(&params, page)","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/tmdb.rs","byte_start":10650,"byte_end":10672,"line_start":317,"line_end":317,"column_start":41,"column_end":63,"is_primary":false,"text":[{"text":"    pub async fn discover_movies(&self, params: DiscoverParams) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":41,"highlight_end":63}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":10627,"byte_end":10642,"line_start":317,"line_end":317,"column_start":18,"column_end":33,"is_primary":true,"text":[{"text":"    pub async fn discover_movies(&self, params: DiscoverParams) -> TmdbResult<TmdbResponse<Movie>> {","highlight_start":18,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":4881,"byte_end":4887,"line_start":152,"line_end":152,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"        .discover_movies(&params, page)","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":4874,"byte_end":4881,"line_start":152,"line_end":152,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"        .discover_movies(&params, page)","highlight_start":26,"highlight_end":33}],"label":null,"suggested_replacement":"/* DiscoverParams */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:152:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 2 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/movies.rs","byte_start":5117,"byte_end":5123,"line_start":159,"line_end":159,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":5112,"byte_end":5116,"line_start":159,"line_end":159,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":12}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `api::PaginatedResponse<models::tmdb::Movie>`\n   found struct `models::tmdb::TmdbResponse<models::tmdb::Movie>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::tmdb::TmdbResponse<models::tmdb::Movie>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/movies.rs","byte_start":5117,"byte_end":5123,"line_start":159,"line_end":159,"column_start":13,"column_end":19,"is_primary":false,"text":[{"text":"    Ok(Json(result))","highlight_start":13,"highlight_end":19}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/movies.rs","byte_start":5112,"byte_end":5124,"line_start":159,"line_end":159,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"    Ok(Json(result))","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/movies.rs:159:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `PaginatedResponse<Movie>`, found `TmdbResponse<Movie>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::Manifest>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":666,"byte_end":670,"line_start":31,"line_end":31,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:31:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::Manifest>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":2377,"byte_end":2434,"line_start":87,"line_end":87,"column_start":20,"column_end":77,"is_primary":true,"text":[{"text":"        \"movie\" => get_movie_catalog(&state, &catalog_id, page, genre).await,","highlight_start":20,"highlight_end":77}],"label":"expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":2377,"byte_end":2434,"line_start":87,"line_end":87,"column_start":20,"column_end":77,"is_primary":false,"text":[{"text":"        \"movie\" => get_movie_catalog(&state, &catalog_id, page, genre).await,","highlight_start":20,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:87:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":2456,"byte_end":2510,"line_start":88,"line_end":88,"column_start":21,"column_end":75,"is_primary":true,"text":[{"text":"        \"series\" => get_tv_catalog(&state, &catalog_id, page, genre).await,","highlight_start":21,"highlight_end":75}],"label":"expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":2456,"byte_end":2510,"line_start":88,"line_end":88,"column_start":21,"column_end":75,"is_primary":false,"text":[{"text":"        \"series\" => get_tv_catalog(&state, &catalog_id, page, genre).await,","highlight_start":21,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:88:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":3280,"byte_end":3317,"line_start":113,"line_end":113,"column_start":20,"column_end":57,"is_primary":true,"text":[{"text":"        \"movie\" => get_movie_meta(&state, tmdb_id).await,","highlight_start":20,"highlight_end":57}],"label":"expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":3280,"byte_end":3317,"line_start":113,"line_end":113,"column_start":20,"column_end":57,"is_primary":false,"text":[{"text":"        \"movie\" => get_movie_meta(&state, tmdb_id).await,","highlight_start":20,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:113:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":3339,"byte_end":3373,"line_start":114,"line_end":114,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"        \"series\" => get_tv_meta(&state, tmdb_id).await,","highlight_start":21,"highlight_end":55}],"label":"expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":3339,"byte_end":3373,"line_start":114,"line_end":114,"column_start":21,"column_end":55,"is_primary":false,"text":[{"text":"        \"series\" => get_tv_meta(&state, tmdb_id).await,","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:114:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<()>>)`, found `(StatusCode, Json<ApiResponse<...>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::StreamResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":5725,"byte_end":5729,"line_start":180,"line_end":180,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:180:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::StreamResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":6053,"byte_end":6061,"line_start":189,"line_end":189,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"expected `ApiResponse<()>`, found `ApiResponse<StreamResponse>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":6048,"byte_end":6052,"line_start":189,"line_end":189,"column_start":22,"column_end":26,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":26}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::stremio::StreamResponse>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::stremio::StreamResponse>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":6053,"byte_end":6061,"line_start":189,"line_end":189,"column_start":27,"column_end":35,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":6048,"byte_end":6062,"line_start":189,"line_end":189,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:189:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<StreamResponse>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::CatalogResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":8226,"byte_end":8230,"line_start":251,"line_end":251,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:251:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::CatalogResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":8832,"byte_end":8903,"line_start":268,"line_end":268,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            handle_stremio_error(StremioError::ExternalServiceError(e.to_string()))","highlight_start":13,"highlight_end":84}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":6207,"byte_end":6255,"line_start":199,"line_end":199,"column_start":6,"column_end":54,"is_primary":false,"text":[{"text":") -> (StatusCode, Json<ApiResponse<CatalogResponse>>) {","highlight_start":6,"highlight_end":54}],"label":"expected `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:268:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::CatalogResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":10736,"byte_end":10740,"line_start":325,"line_end":325,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:325:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::CatalogResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":11307,"byte_end":11378,"line_start":341,"line_end":341,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            handle_stremio_error(StremioError::ExternalServiceError(e.to_string()))","highlight_start":13,"highlight_end":84}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":9039,"byte_end":9087,"line_start":278,"line_end":278,"column_start":6,"column_end":54,"is_primary":false,"text":[{"text":") -> (StatusCode, Json<ApiResponse<CatalogResponse>>) {","highlight_start":6,"highlight_end":54}],"label":"expected `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::CatalogResponse>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:341:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::MetaResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":12587,"byte_end":12591,"line_start":377,"line_end":377,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:377:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::MetaResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":13087,"byte_end":13158,"line_start":391,"line_end":391,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            handle_stremio_error(StremioError::ExternalServiceError(e.to_string()))","highlight_start":13,"highlight_end":84}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":11468,"byte_end":11513,"line_start":349,"line_end":349,"column_start":6,"column_end":51,"is_primary":false,"text":[{"text":") -> (StatusCode, Json<ApiResponse<MetaResponse>>) {","highlight_start":6,"highlight_end":51}],"label":"expected `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:391:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::stremio::MetaResponse>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":14312,"byte_end":14316,"line_start":427,"line_end":427,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:427:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::stremio::MetaResponse>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":14809,"byte_end":14880,"line_start":441,"line_end":441,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            handle_stremio_error(StremioError::ExternalServiceError(e.to_string()))","highlight_start":13,"highlight_end":84}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":13245,"byte_end":13290,"line_start":399,"line_end":399,"column_start":6,"column_end":51,"is_primary":false,"text":[{"text":") -> (StatusCode, Json<ApiResponse<MetaResponse>>) {","highlight_start":6,"highlight_end":51}],"label":"expected `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::stremio::MetaResponse>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:441:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `http_client` on type `&AppState`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":19611,"byte_end":19622,"line_start":576,"line_end":576,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"        .http_client","highlight_start":10,"highlight_end":21}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `config`, `database`, `services`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:576:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `http_client` on type `&AppState`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `mdblist_service` of struct `EnhancedMetadataService` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":5140,"byte_end":5155,"line_start":159,"line_end":159,"column_start":39,"column_end":54,"is_primary":true,"text":[{"text":"    let user_lists = enhanced_service.mdblist_service.get_user_lists(user_id).await","highlight_start":39,"highlight_end":54}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:159:39: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `mdblist_service` of struct `EnhancedMetadataService` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `mdblist_service` of struct `EnhancedMetadataService` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":5517,"byte_end":5532,"line_start":166,"line_end":166,"column_start":45,"column_end":60,"is_primary":true,"text":[{"text":"        let list_content = enhanced_service.mdblist_service.get_list_content(&watchlist.id).await","highlight_start":45,"highlight_end":60}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:166:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `mdblist_service` of struct `EnhancedMetadataService` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6172,"byte_end":6191,"line_start":179,"line_end":179,"column_start":30,"column_end":49,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":30,"highlight_end":49}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6167,"byte_end":6171,"line_start":179,"line_end":179,"column_start":25,"column_end":29,"is_primary":false,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":25,"highlight_end":29}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `std::string::String` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6172,"byte_end":6191,"line_start":179,"line_end":179,"column_start":30,"column_end":49,"is_primary":false,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":30,"highlight_end":49}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6167,"byte_end":6192,"line_start":179,"line_end":179,"column_start":25,"column_end":50,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":25,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try removing the method call","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6179,"byte_end":6191,"line_start":179,"line_end":179,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":37,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:179:30: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `mdblist_service` of struct `EnhancedMetadataService` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":6898,"byte_end":6913,"line_start":205,"line_end":205,"column_start":39,"column_end":54,"is_primary":true,"text":[{"text":"    let user_lists = enhanced_service.mdblist_service.get_user_lists(user_id).await","highlight_start":39,"highlight_end":54}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:205:39: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `mdblist_service` of struct `EnhancedMetadataService` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `mdblist_service` of struct `EnhancedMetadataService` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":7513,"byte_end":7528,"line_start":222,"line_end":222,"column_start":45,"column_end":60,"is_primary":true,"text":[{"text":"        let list_content = enhanced_service.mdblist_service.get_list_content(&list_id).await","highlight_start":45,"highlight_end":60}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:222:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `mdblist_service` of struct `EnhancedMetadataService` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8158,"byte_end":8177,"line_start":235,"line_end":235,"column_start":30,"column_end":49,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":30,"highlight_end":49}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8153,"byte_end":8157,"line_start":235,"line_end":235,"column_start":25,"column_end":29,"is_primary":false,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":25,"highlight_end":29}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `std::string::String` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8158,"byte_end":8177,"line_start":235,"line_end":235,"column_start":30,"column_end":49,"is_primary":false,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":30,"highlight_end":49}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8153,"byte_end":8178,"line_start":235,"line_end":235,"column_start":25,"column_end":50,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":25,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try removing the method call","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8165,"byte_end":8177,"line_start":235,"line_end":235,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"                        Some(user_id.to_string()),","highlight_start":37,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:235:30: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"field `mdblist_service` of struct `EnhancedMetadataService` is private","code":{"code":"E0616","explanation":"Attempted to access a private field on a struct.\n\nErroneous code example:\n\n```compile_fail,E0616\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // error: field `x` of struct `some_module::Foo` is private\n```\n\nIf you want to access this field, you have two options:\n\n1) Set the field public:\n\n```\nmod some_module {\n    pub struct Foo {\n        pub x: u32, // `x` is now public.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.x); // ok!\n```\n\n2) Add a getter function:\n\n```\nmod some_module {\n    pub struct Foo {\n        x: u32, // So `x` is still private in here.\n    }\n\n    impl Foo {\n        pub fn new() -> Foo { Foo { x: 0 } }\n\n        // We create the getter function here:\n        pub fn get_x(&self) -> &u32 { &self.x }\n    }\n}\n\nlet f = some_module::Foo::new();\nprintln!(\"{}\", f.get_x()); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":8836,"byte_end":8851,"line_start":259,"line_end":259,"column_start":37,"column_end":52,"is_primary":true,"text":[{"text":"    let trending = enhanced_service.mdblist_service.get_trending(None).await","highlight_start":37,"highlight_end":52}],"label":"private field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:259:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0616]\u001b[0m\u001b[0m: field `mdblist_service` of struct `EnhancedMetadataService` is private: private field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":11373,"byte_end":11378,"line_start":333,"line_end":333,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":11373,"byte_end":11378,"line_start":333,"line_end":333,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:333:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::tmdb::Configuration>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":1184,"byte_end":1188,"line_start":43,"line_end":43,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:43:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::tmdb::Configuration>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":1594,"byte_end":1614,"line_start":55,"line_end":55,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":19,"highlight_end":39}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":1533,"byte_end":1565,"line_start":53,"line_end":53,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::Configuration>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":936,"byte_end":1621,"line_start":37,"line_end":56,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match make_tmdb_request::<Configuration>(&state, &url).await {","highlight_start":5,"highlight_end":67},{"text":"        Ok(config) => {","highlight_start":1,"highlight_end":24},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(config.clone()),","highlight_start":1,"highlight_end":44},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string(),","highlight_start":1,"highlight_end":62},{"text":"                    \"cached\": false","highlight_start":1,"highlight_end":36},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Cache for 24 hours","highlight_start":1,"highlight_end":34},{"text":"            cache_response(&state, cache_key, &response, 86400).await;","highlight_start":1,"highlight_end":71},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::Configuration>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:55:19: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":2036,"byte_end":2157,"line_start":71,"line_end":74,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":2031,"byte_end":2035,"line_start":71,"line_end":71,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":2036,"byte_end":2157,"line_start":71,"line_end":74,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/tmdb.rs","byte_start":2031,"byte_end":2158,"line_start":71,"line_end":74,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":2036,"byte_end":2157,"line_start":71,"line_end":74,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:71:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":2172,"byte_end":2176,"line_start":75,"line_end":75,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:75:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `urlencoding`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":2803,"byte_end":2814,"line_start":95,"line_end":95,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        urlencoding::encode(&params.query)","highlight_start":9,"highlight_end":20}],"label":"use of unresolved module or unlinked crate `urlencoding`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you wanted to use a crate named `urlencoding`, use `cargo add urlencoding` to add it to your `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:95:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of unresolved module or unlinked crate `urlencoding`: use of unresolved module or unlinked crate `urlencoding`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":3974,"byte_end":3978,"line_start":127,"line_end":127,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:127:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":4386,"byte_end":4394,"line_start":138,"line_end":138,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<Movie>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":4381,"byte_end":4385,"line_start":138,"line_end":138,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":4386,"byte_end":4394,"line_start":138,"line_end":138,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":4381,"byte_end":4395,"line_start":138,"line_end":138,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:138:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<Movie>>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":4861,"byte_end":4982,"line_start":156,"line_end":159,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":4856,"byte_end":4860,"line_start":156,"line_end":156,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":4861,"byte_end":4982,"line_start":156,"line_end":159,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/tmdb.rs","byte_start":4856,"byte_end":4983,"line_start":156,"line_end":159,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":4861,"byte_end":4982,"line_start":156,"line_end":159,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Search query cannot be empty\",","highlight_start":1,"highlight_end":59},{"text":"                \"code\": \"INVALID_QUERY\"","highlight_start":1,"highlight_end":40},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:156:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":4997,"byte_end":5001,"line_start":160,"line_end":160,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:160:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `urlencoding`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":5596,"byte_end":5607,"line_start":179,"line_end":179,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        urlencoding::encode(&params.query)","highlight_start":9,"highlight_end":20}],"label":"use of unresolved module or unlinked crate `urlencoding`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you wanted to use a crate named `urlencoding`, use `cargo add urlencoding` to add it to your `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:179:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of unresolved module or unlinked crate `urlencoding`: use of unresolved module or unlinked crate `urlencoding`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":6567,"byte_end":6571,"line_start":205,"line_end":205,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:205:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":6947,"byte_end":6955,"line_start":215,"line_end":215,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<TvShow>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":6942,"byte_end":6946,"line_start":215,"line_end":215,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":6947,"byte_end":6955,"line_start":215,"line_end":215,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":6942,"byte_end":6956,"line_start":215,"line_end":215,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:215:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<TvShow>>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::tmdb::MovieDetails>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":8161,"byte_end":8165,"line_start":252,"line_end":252,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:252:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::tmdb::MovieDetails>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":8607,"byte_end":8627,"line_start":265,"line_end":265,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":19,"highlight_end":39}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":8546,"byte_end":8578,"line_start":263,"line_end":263,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::MovieDetails>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":7908,"byte_end":8634,"line_start":246,"line_end":266,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match make_tmdb_request::<MovieDetails>(&state, &url).await {","highlight_start":5,"highlight_end":66},{"text":"        Ok(movie_details) => {","highlight_start":1,"highlight_end":31},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(movie_details),","highlight_start":1,"highlight_end":43},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string(),","highlight_start":1,"highlight_end":62},{"text":"                    \"movie_id\": id,","highlight_start":1,"highlight_end":36},{"text":"                    \"cached\": false","highlight_start":1,"highlight_end":36},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Cache for 6 hours","highlight_start":1,"highlight_end":33},{"text":"            cache_response(&state, &cache_key, &response, 21600).await;","highlight_start":1,"highlight_end":72},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::MovieDetails>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:265:19: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::tmdb::TvShowDetails>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":9771,"byte_end":9775,"line_start":300,"line_end":300,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:300:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::tmdb::TvShowDetails>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":10181,"byte_end":10201,"line_start":312,"line_end":312,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":19,"highlight_end":39}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":10120,"byte_end":10152,"line_start":310,"line_end":310,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::TvShowDetails>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":9523,"byte_end":10208,"line_start":294,"line_end":313,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match make_tmdb_request::<TvShowDetails>(&state, &url).await {","highlight_start":5,"highlight_end":67},{"text":"        Ok(tv_details) => {","highlight_start":1,"highlight_end":28},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(tv_details),","highlight_start":1,"highlight_end":40},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string(),","highlight_start":1,"highlight_end":62},{"text":"                    \"tv_id\": id,","highlight_start":1,"highlight_end":33},{"text":"                    \"cached\": false","highlight_start":1,"highlight_end":36},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            cache_response(&state, &cache_key, &response, 21600).await;","highlight_start":1,"highlight_end":72},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::tmdb::TvShowDetails>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:312:19: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":10788,"byte_end":10944,"line_start":330,"line_end":333,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid media type. Must be one of: movie, tv, person, all\",","highlight_start":1,"highlight_end":89},{"text":"                \"code\": \"INVALID_MEDIA_TYPE\"","highlight_start":1,"highlight_end":45},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":10783,"byte_end":10787,"line_start":330,"line_end":330,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":10788,"byte_end":10944,"line_start":330,"line_end":333,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid media type. Must be one of: movie, tv, person, all\",","highlight_start":1,"highlight_end":89},{"text":"                \"code\": \"INVALID_MEDIA_TYPE\"","highlight_start":1,"highlight_end":45},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/tmdb.rs","byte_start":10783,"byte_end":10945,"line_start":330,"line_end":333,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Invalid media type. Must be one of: movie, tv, person, all\",","highlight_start":1,"highlight_end":89},{"text":"                \"code\": \"INVALID_MEDIA_TYPE\"","highlight_start":1,"highlight_end":45},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":10788,"byte_end":10944,"line_start":330,"line_end":333,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid media type. Must be one of: movie, tv, person, all\",","highlight_start":1,"highlight_end":89},{"text":"                \"code\": \"INVALID_MEDIA_TYPE\"","highlight_start":1,"highlight_end":45},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:330:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":10959,"byte_end":10963,"line_start":334,"line_end":334,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:334:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":11223,"byte_end":11366,"line_start":343,"line_end":346,"column_start":25,"column_end":15,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid time window. Must be 'day' or 'week'\",","highlight_start":1,"highlight_end":75},{"text":"                \"code\": \"INVALID_TIME_WINDOW\"","highlight_start":1,"highlight_end":46},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":11218,"byte_end":11222,"line_start":343,"line_end":343,"column_start":20,"column_end":24,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":24}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":11223,"byte_end":11366,"line_start":343,"line_end":346,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid time window. Must be 'day' or 'week'\",","highlight_start":1,"highlight_end":75},{"text":"                \"code\": \"INVALID_TIME_WINDOW\"","highlight_start":1,"highlight_end":46},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/tmdb.rs","byte_start":11218,"byte_end":11367,"line_start":343,"line_end":346,"column_start":20,"column_end":16,"is_primary":true,"text":[{"text":"            error: Some(json!({","highlight_start":20,"highlight_end":32},{"text":"                \"message\": \"Invalid time window. Must be 'day' or 'week'\",","highlight_start":1,"highlight_end":75},{"text":"                \"code\": \"INVALID_TIME_WINDOW\"","highlight_start":1,"highlight_end":46},{"text":"            })),","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":11223,"byte_end":11366,"line_start":343,"line_end":346,"column_start":25,"column_end":15,"is_primary":false,"text":[{"text":"            error: Some(json!({","highlight_start":25,"highlight_end":32},{"text":"                \"message\": \"Invalid time window. Must be 'day' or 'week'\",","highlight_start":1,"highlight_end":75},{"text":"                \"code\": \"INVALID_TIME_WINDOW\"","highlight_start":1,"highlight_end":46},{"text":"            })),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:343:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":11381,"byte_end":11385,"line_start":347,"line_end":347,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            meta: None,","highlight_start":13,"highlight_end":17}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:347:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TrendingItem>>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":12571,"byte_end":12575,"line_start":378,"line_end":378,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:378:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TrendingItem>>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":13038,"byte_end":13046,"line_start":390,"line_end":390,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<...>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":13033,"byte_end":13037,"line_start":390,"line_end":390,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TrendingItem>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::PaginatedResponse<models::tmdb::TrendingItem>>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":13038,"byte_end":13046,"line_start":390,"line_end":390,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":13033,"byte_end":13047,"line_start":390,"line_end":390,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:390:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<PaginatedResponse<...>>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `include_adult` on type `models::tmdb::DiscoverMovieParams`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":14741,"byte_end":14754,"line_start":440,"line_end":440,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"    if let Some(include_adult) = params.include_adult {","highlight_start":41,"highlight_end":54}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `page`, `region`, `sort_by`, `with_genres`, `without_genres` ... and 11 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:440:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `include_adult` on type `models::tmdb::DiscoverMovieParams`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":15390,"byte_end":15394,"line_start":457,"line_end":457,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:457:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":15805,"byte_end":15825,"line_start":469,"line_end":469,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":19,"highlight_end":39}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":15744,"byte_end":15776,"line_start":467,"line_end":467,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":14836,"byte_end":15832,"line_start":444,"line_end":470,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match make_tmdb_request::<TmdbResponse<Movie>>(&state, &url).await {","highlight_start":5,"highlight_end":73},{"text":"        Ok(discover_result) => {","highlight_start":1,"highlight_end":33},{"text":"            let paginated_response = PaginatedResponse::new(","highlight_start":1,"highlight_end":61},{"text":"                discover_result.results,","highlight_start":1,"highlight_end":41},{"text":"                discover_result.page.unwrap_or(1),","highlight_start":1,"highlight_end":51},{"text":"                discover_result.total_pages.unwrap_or(1),","highlight_start":1,"highlight_end":58},{"text":"                discover_result.total_results.unwrap_or(0),","highlight_start":1,"highlight_end":60},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(paginated_response),","highlight_start":1,"highlight_end":48},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string(),","highlight_start":1,"highlight_end":62},{"text":"                    \"filters\": params,","highlight_start":1,"highlight_end":39},{"text":"                    \"cached\": false","highlight_start":1,"highlight_end":36},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            cache_response(&state, &cache_key, &response, 3600).await;","highlight_start":1,"highlight_end":71},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::PaginatedResponse<models::tmdb::Movie>>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:469:19: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":18065,"byte_end":18069,"line_start":531,"line_end":531,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:531:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":18480,"byte_end":18500,"line_start":543,"line_end":543,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":19,"highlight_end":39}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":18419,"byte_end":18451,"line_start":541,"line_end":541,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":17510,"byte_end":18507,"line_start":518,"line_end":544,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match make_tmdb_request::<TmdbResponse<TvShow>>(&state, &url).await {","highlight_start":5,"highlight_end":74},{"text":"        Ok(discover_result) => {","highlight_start":1,"highlight_end":33},{"text":"            let paginated_response = PaginatedResponse::new(","highlight_start":1,"highlight_end":61},{"text":"                discover_result.results,","highlight_start":1,"highlight_end":41},{"text":"                discover_result.page.unwrap_or(1),","highlight_start":1,"highlight_end":51},{"text":"                discover_result.total_pages.unwrap_or(1),","highlight_start":1,"highlight_end":58},{"text":"                discover_result.total_results.unwrap_or(0),","highlight_start":1,"highlight_end":60},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(paginated_response),","highlight_start":1,"highlight_end":48},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string(),","highlight_start":1,"highlight_end":62},{"text":"                    \"filters\": params,","highlight_start":1,"highlight_end":39},{"text":"                    \"cached\": false","highlight_start":1,"highlight_end":36},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            cache_response(&state, &cache_key, &response, 3600).await;","highlight_start":1,"highlight_end":71},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => handle_tmdb_error(e),","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::PaginatedResponse<models::tmdb::TvShow>>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:543:19: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `http_client` on type `&AppState`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":18828,"byte_end":18839,"line_start":562,"line_end":562,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"        .http_client","highlight_start":10,"highlight_end":21}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `config`, `database`, `services`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:562:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `http_client` on type `&AppState`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `RequestFailed` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":18974,"byte_end":18987,"line_start":567,"line_end":567,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"        .map_err(|e| TmdbError::RequestFailed(e.to_string()))?;","highlight_start":33,"highlight_end":46}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `RequestFailed` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:567:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `RequestFailed` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19139,"byte_end":19160,"line_start":573,"line_end":573,"column_start":33,"column_end":54,"is_primary":true,"text":[{"text":"        .map_err(|e| TmdbError::ResponseParsingFailed(e.to_string()))?;","highlight_start":33,"highlight_end":54}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `ResponseParsingFailed` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:573:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19290,"byte_end":19311,"line_start":577,"line_end":577,"column_start":37,"column_end":58,"is_primary":true,"text":[{"text":"            .map_err(|e| TmdbError::ResponseParsingFailed(e.to_string()))","highlight_start":37,"highlight_end":58}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `ResponseParsingFailed` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:577:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Unauthorized` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19407,"byte_end":19419,"line_start":580,"line_end":580,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"            401 => Err(TmdbError::Unauthorized),","highlight_start":35,"highlight_end":47}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `Unauthorized` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:580:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `Unauthorized` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"expected value, found struct variant `TmdbError::ApiError`","code":{"code":"E0533","explanation":"An item which isn't a unit struct, a variant, nor a constant has been used as a\nmatch pattern.\n\nErroneous code example:\n\n```compile_fail,E0533\nstruct Tortoise;\n\nimpl Tortoise {\n    fn turtle(&self) -> u32 { 0 }\n}\n\nmatch 0u32 {\n    Tortoise::turtle => {} // Error!\n    _ => {}\n}\nif let Tortoise::turtle = 0u32 {} // Same error!\n```\n\nIf you want to match against a value returned by a method, you need to bind the\nvalue first:\n\n```\nstruct Tortoise;\n\nimpl Tortoise {\n    fn turtle(&self) -> u32 { 0 }\n}\n\nmatch 0u32 {\n    x if x == Tortoise.turtle() => {} // Bound into `x` then we compare it!\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19542,"byte_end":19561,"line_start":583,"line_end":583,"column_start":22,"column_end":41,"is_primary":true,"text":[{"text":"            _ => Err(TmdbError::ApiError(format!(","highlight_start":22,"highlight_end":41}],"label":"not a value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to create a new value of the struct","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19561,"byte_end":19679,"line_start":583,"line_end":587,"column_start":41,"column_end":15,"is_primary":true,"text":[{"text":"            _ => Err(TmdbError::ApiError(format!(","highlight_start":41,"highlight_end":50},{"text":"                \"HTTP {}: {}\",","highlight_start":1,"highlight_end":31},{"text":"                status.as_u16(),","highlight_start":1,"highlight_end":33},{"text":"                response_text","highlight_start":1,"highlight_end":30},{"text":"            ))),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":" { status_code: /* value */, message: /* value */ }","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:583:22: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0533]\u001b[0m\u001b[0m: expected value, found struct variant `TmdbError::ApiError`: not a value\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19727,"byte_end":19732,"line_start":592,"line_end":592,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"async fn check_rate_limit(state: &AppState) -> bool {","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":19727,"byte_end":19732,"line_start":592,"line_end":592,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"async fn check_rate_limit(state: &AppState) -> bool {","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:592:27: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":1155,"byte_end":1160,"line_start":52,"line_end":52,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":1155,"byte_end":1160,"line_start":52,"line_end":52,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:52:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `query`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":1240,"byte_end":1245,"line_start":54,"line_end":54,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let query = match params.query {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":1240,"byte_end":1245,"line_start":54,"line_end":54,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let query = match params.query {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_query","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:54:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `query`: help: if this is intentional, prefix it with an underscore: `_query`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `tv_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2068,"byte_end":2073,"line_start":87,"line_end":87,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    Path(tv_id): Path<u32>,","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2068,"byte_end":2073,"line_start":87,"line_end":87,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    Path(tv_id): Path<u32>,","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"_tv_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:87:10: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `tv_id`: help: if this is intentional, prefix it with an underscore: `_tv_id`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2097,"byte_end":2102,"line_start":88,"line_end":88,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2097,"byte_end":2102,"line_start":88,"line_end":88,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:88:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2589,"byte_end":2594,"line_start":103,"line_end":103,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2589,"byte_end":2594,"line_start":103,"line_end":103,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:103:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `time_window`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2715,"byte_end":2726,"line_start":106,"line_end":106,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let time_window = params.time_window.unwrap_or_else(|| \"day\".to_string());","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":2715,"byte_end":2726,"line_start":106,"line_end":106,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let time_window = params.time_window.unwrap_or_else(|| \"day\".to_string());","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_time_window","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:106:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `time_window`: help: if this is intentional, prefix it with an underscore: `_time_window`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":3263,"byte_end":3268,"line_start":128,"line_end":128,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":3263,"byte_end":3268,"line_start":128,"line_end":128,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:128:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/handlers/tv.rs","byte_start":3884,"byte_end":3889,"line_start":152,"line_end":152,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/handlers/tv.rs","byte_start":3884,"byte_end":3889,"line_start":152,"line_end":152,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tv.rs:152:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":770,"byte_end":780,"line_start":35,"line_end":35,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":41,"highlight_end":51}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":755,"byte_end":769,"line_start":35,"line_end":35,"column_start":26,"column_end":40,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":26,"highlight_end":40}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":770,"byte_end":770,"line_start":35,"line_end":35,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:35:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":801,"byte_end":811,"line_start":36,"line_end":36,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        Ok(Some(user)) => {","highlight_start":12,"highlight_end":22}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":740,"byte_end":787,"line_start":35,"line_end":35,"column_start":11,"column_end":58,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":11,"highlight_end":58}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:36:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1270,"byte_end":1274,"line_start":49,"line_end":49,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(None) => {","highlight_start":12,"highlight_end":16}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":740,"byte_end":787,"line_start":35,"line_end":35,"column_start":11,"column_end":58,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":11,"highlight_end":58}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:49:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::user::UserProfile>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1023,"byte_end":1027,"line_start":42,"line_end":42,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:42:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::user::UserProfile>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `code`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1463,"byte_end":1467,"line_start":53,"line_end":53,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                code: \"USER_NOT_FOUND\".to_string(),","highlight_start":17,"highlight_end":21}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:53:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `code`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `details`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1515,"byte_end":1522,"line_start":54,"line_end":54,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                details: None,","highlight_start":17,"highlight_end":24}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:54:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `details`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1680,"byte_end":1694,"line_start":59,"line_end":59,"column_start":29,"column_end":43,"is_primary":true,"text":[{"text":"                error: Some(error_response),","highlight_start":29,"highlight_end":43}],"label":"expected `String`, found `ErrorResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1675,"byte_end":1679,"line_start":59,"line_end":59,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"                error: Some(error_response),","highlight_start":24,"highlight_end":28}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `models::ErrorResponse` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":1680,"byte_end":1694,"line_start":59,"line_end":59,"column_start":29,"column_end":43,"is_primary":false,"text":[{"text":"                error: Some(error_response),","highlight_start":29,"highlight_end":43}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1675,"byte_end":1695,"line_start":59,"line_end":59,"column_start":24,"column_end":44,"is_primary":true,"text":[{"text":"                error: Some(error_response),","highlight_start":24,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:59:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `ErrorResponse`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1713,"byte_end":1717,"line_start":60,"line_end":60,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:60:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":1906,"byte_end":1945,"line_start":65,"line_end":65,"column_start":13,"column_end":52,"is_primary":true,"text":[{"text":"            (StatusCode::NOT_FOUND, Json(response))","highlight_start":13,"highlight_end":52}],"label":"expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1216,"byte_end":1248,"line_start":47,"line_end":47,"column_start":13,"column_end":45,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":45}],"label":"this is found to be of type `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::user::UserProfile>>)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":734,"byte_end":2137,"line_start":35,"line_end":71,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":5,"highlight_end":60},{"text":"        Ok(Some(user)) => {","highlight_start":1,"highlight_end":28},{"text":"            let profile = UserProfile::from(user);","highlight_start":1,"highlight_end":51},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: true,","highlight_start":1,"highlight_end":31},{"text":"                data: Some(profile),","highlight_start":1,"highlight_end":37},{"text":"                error: None,","highlight_start":1,"highlight_end":29},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string()","highlight_start":1,"highlight_end":61},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            (StatusCode::OK, Json(response))","highlight_start":1,"highlight_end":45},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Ok(None) => {","highlight_start":1,"highlight_end":22},{"text":"            tracing::warn!(\"User not found: {}\", claims.sub);","highlight_start":1,"highlight_end":62},{"text":"            let error_response = ErrorResponse {","highlight_start":1,"highlight_end":49},{"text":"                message: \"User not found\".to_string(),","highlight_start":1,"highlight_end":55},{"text":"                code: \"USER_NOT_FOUND\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                details: None,","highlight_start":1,"highlight_end":31},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            let response = ApiResponse {","highlight_start":1,"highlight_end":41},{"text":"                success: false,","highlight_start":1,"highlight_end":32},{"text":"                data: None::<()>,","highlight_start":1,"highlight_end":34},{"text":"                error: Some(error_response),","highlight_start":1,"highlight_end":45},{"text":"                meta: Some(json!({","highlight_start":1,"highlight_end":35},{"text":"                    \"timestamp\": chrono::Utc::now().timestamp(),","highlight_start":1,"highlight_end":65},{"text":"                    \"request_id\": Uuid::new_v4().to_string()","highlight_start":1,"highlight_end":61},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            (StatusCode::NOT_FOUND, Json(response))","highlight_start":1,"highlight_end":52},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        Err(e) => {","highlight_start":1,"highlight_end":20},{"text":"            tracing::error!(\"Database error getting user profile: {}\", e);","highlight_start":1,"highlight_end":75},{"text":"            handle_user_error(AuthError::DatabaseError(e.to_string()))","highlight_start":1,"highlight_end":71},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<models::user::UserProfile>>)`\n   found tuple `(axum::http::StatusCode, axum::Json<models::ApiResponse<()>>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you could change the return type to be a boxed trait object","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":645,"byte_end":649,"line_start":32,"line_end":32,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":") -> impl IntoResponse {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"Box<dyn","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/handlers/user.rs","byte_start":645,"byte_end":662,"line_start":32,"line_end":32,"column_start":6,"column_end":23,"is_primary":false,"text":[{"text":") -> impl IntoResponse {","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/user.rs","byte_start":662,"byte_end":662,"line_start":32,"line_end":32,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":") -> impl IntoResponse {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/handlers/user.rs","byte_start":645,"byte_end":662,"line_start":32,"line_end":32,"column_start":6,"column_end":23,"is_primary":false,"text":[{"text":") -> impl IntoResponse {","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"if you change the return type to expect trait objects, box the returned expressions","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":1216,"byte_end":1216,"line_start":47,"line_end":47,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1906,"byte_end":1906,"line_start":65,"line_end":65,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            (StatusCode::NOT_FOUND, Json(response))","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1248,"byte_end":1248,"line_start":47,"line_end":47,"column_start":45,"column_end":45,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":45,"highlight_end":45}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":1945,"byte_end":1945,"line_start":65,"line_end":65,"column_start":52,"column_end":52,"is_primary":true,"text":[{"text":"            (StatusCode::NOT_FOUND, Json(response))","highlight_start":52,"highlight_end":52}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:65:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `(StatusCode, Json<ApiResponse<...>>)`, found `(StatusCode, Json<ApiResponse<()>>)`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":2727,"byte_end":2737,"line_start":89,"line_end":89,"column_start":60,"column_end":70,"is_primary":true,"text":[{"text":"    let current_user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":60,"highlight_end":70}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":2712,"byte_end":2726,"line_start":89,"line_end":89,"column_start":45,"column_end":59,"is_primary":false,"text":[{"text":"    let current_user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":45,"highlight_end":59}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":2727,"byte_end":2727,"line_start":89,"line_end":89,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"    let current_user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:89:60: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":2758,"byte_end":2768,"line_start":90,"line_end":90,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        Ok(Some(user)) => user,","highlight_start":12,"highlight_end":22}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":2697,"byte_end":2744,"line_start":89,"line_end":89,"column_start":30,"column_end":77,"is_primary":false,"text":[{"text":"    let current_user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":30,"highlight_end":77}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:90:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":2790,"byte_end":2794,"line_start":91,"line_end":91,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(None) => {","highlight_start":12,"highlight_end":16}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":2697,"byte_end":2744,"line_start":89,"line_end":89,"column_start":30,"column_end":77,"is_primary":false,"text":[{"text":"    let current_user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":30,"highlight_end":77}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:91:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `EmailAlreadyExists` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":3317,"byte_end":3335,"line_start":104,"line_end":104,"column_start":57,"column_end":75,"is_primary":true,"text":[{"text":"                    return handle_user_error(AuthError::EmailAlreadyExists);","highlight_start":57,"highlight_end":75}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `EmailAlreadyExists` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":3317,"byte_end":3336,"line_start":104,"line_end":104,"column_start":57,"column_end":76,"is_primary":true,"text":[{"text":"                    return handle_user_error(AuthError::EmailAlreadyExists);","highlight_start":57,"highlight_end":76}],"label":null,"suggested_replacement":"UserAlreadyExists","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:104:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `EmailAlreadyExists` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `UsernameAlreadyExists` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":3921,"byte_end":3942,"line_start":119,"line_end":119,"column_start":57,"column_end":78,"is_primary":true,"text":[{"text":"                    return handle_user_error(AuthError::UsernameAlreadyExists);","highlight_start":57,"highlight_end":78}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `UsernameAlreadyExists` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":3921,"byte_end":3943,"line_start":119,"line_end":119,"column_start":57,"column_end":79,"is_primary":true,"text":[{"text":"                    return handle_user_error(AuthError::UsernameAlreadyExists);","highlight_start":57,"highlight_end":79}],"label":null,"suggested_replacement":"UserAlreadyExists","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:119:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `UsernameAlreadyExists` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::user::UserProfile>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":5148,"byte_end":5152,"line_start":155,"line_end":155,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:155:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::user::UserProfile>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":5397,"byte_end":5405,"line_start":162,"line_end":162,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"expected `ApiResponse<()>`, found `ApiResponse<UserProfile>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":5392,"byte_end":5396,"line_start":162,"line_end":162,"column_start":22,"column_end":26,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":26}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::user::UserProfile>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::user::UserProfile>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":5397,"byte_end":5405,"line_start":162,"line_end":162,"column_start":27,"column_end":35,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":5392,"byte_end":5406,"line_start":162,"line_end":162,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:162:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<UserProfile>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":5865,"byte_end":5883,"line_start":177,"line_end":177,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_watchlist` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":5865,"byte_end":5883,"line_start":177,"line_end":177,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":"get_watchlist","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:177:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":8111,"byte_end":8129,"line_start":236,"line_end":236,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_watchlist` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":8111,"byte_end":8129,"line_start":236,"line_end":236,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":"get_watchlist","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:236:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `as_deref` found for struct `std::string::String` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":8842,"byte_end":8850,"line_start":258,"line_end":258,"column_start":31,"column_end":39,"is_primary":true,"text":[{"text":"            add_request.title.as_deref(),","highlight_start":31,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `as_ref` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":8842,"byte_end":8850,"line_start":258,"line_end":258,"column_start":31,"column_end":39,"is_primary":true,"text":[{"text":"            add_request.title.as_deref(),","highlight_start":31,"highlight_end":39}],"label":null,"suggested_replacement":"as_ref","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:258:31: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `as_deref` found for struct `std::string::String` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 2 arguments but 5 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":8730,"byte_end":8740,"line_start":255,"line_end":255,"column_start":13,"column_end":23,"is_primary":false,"text":[{"text":"            claims.sub,","highlight_start":13,"highlight_end":23}],"label":"unexpected argument #1 of type `std::string::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8754,"byte_end":8773,"line_start":256,"line_end":256,"column_start":13,"column_end":32,"is_primary":false,"text":[{"text":"            add_request.tmdb_id,","highlight_start":13,"highlight_end":32}],"label":"unexpected argument #2 of type `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8866,"byte_end":8900,"line_start":259,"line_end":259,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            add_request.poster_path.as_deref(),","highlight_start":13,"highlight_end":47}],"label":"unexpected argument #5 of type `std::option::Option<&str>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8700,"byte_end":8716,"line_start":254,"line_end":254,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"        .add_to_watchlist(","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":6834,"byte_end":6854,"line_start":199,"line_end":199,"column_start":57,"column_end":77,"is_primary":false,"text":[{"text":"    pub async fn add_to_watchlist(&self, user_id: &str, item: &WatchlistItem) -> Result<()> {","highlight_start":57,"highlight_end":77}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":6795,"byte_end":6811,"line_start":199,"line_end":199,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    pub async fn add_to_watchlist(&self, user_id: &str, item: &WatchlistItem) -> Result<()> {","highlight_start":18,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":8824,"byte_end":8824,"line_start":258,"line_end":258,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            add_request.title.as_deref(),","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"remove the extra arguments","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":8730,"byte_end":8740,"line_start":255,"line_end":255,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"            claims.sub,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8740,"byte_end":8773,"line_start":255,"line_end":256,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"            claims.sub,","highlight_start":23,"highlight_end":24},{"text":"            add_request.tmdb_id,","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8852,"byte_end":8900,"line_start":258,"line_end":259,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"            add_request.title.as_deref(),","highlight_start":41,"highlight_end":42},{"text":"            add_request.poster_path.as_deref(),","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/handlers/user.rs","byte_start":8824,"byte_end":8852,"line_start":258,"line_end":258,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            add_request.title.as_deref(),","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":"/* &WatchlistItem */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:254:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 2 arguments but 5 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":9126,"byte_end":9130,"line_start":268,"line_end":268,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:268:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"arguments to this method are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":10334,"byte_end":10344,"line_start":304,"line_end":304,"column_start":32,"column_end":42,"is_primary":false,"text":[{"text":"        .remove_from_watchlist(claims.sub, tmdb_id, &media_type)","highlight_start":32,"highlight_end":42}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":10346,"byte_end":10353,"line_start":304,"line_end":304,"column_start":44,"column_end":51,"is_primary":false,"text":[{"text":"        .remove_from_watchlist(claims.sub, tmdb_id, &media_type)","highlight_start":44,"highlight_end":51}],"label":"expected `i32`, found `u32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":10312,"byte_end":10333,"line_start":304,"line_end":304,"column_start":10,"column_end":31,"is_primary":true,"text":[{"text":"        .remove_from_watchlist(claims.sub, tmdb_id, &media_type)","highlight_start":10,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":9031,"byte_end":9044,"line_start":265,"line_end":265,"column_start":47,"column_end":60,"is_primary":false,"text":[{"text":"    pub async fn remove_from_watchlist(&self, user_id: &str, tmdb_id: i32, media_type: &str) -> Result<()> {","highlight_start":47,"highlight_end":60}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9046,"byte_end":9058,"line_start":265,"line_end":265,"column_start":62,"column_end":74,"is_primary":false,"text":[{"text":"    pub async fn remove_from_watchlist(&self, user_id: &str, tmdb_id: i32, media_type: &str) -> Result<()> {","highlight_start":62,"highlight_end":74}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9002,"byte_end":9023,"line_start":265,"line_end":265,"column_start":18,"column_end":39,"is_primary":true,"text":[{"text":"    pub async fn remove_from_watchlist(&self, user_id: &str, tmdb_id: i32, media_type: &str) -> Result<()> {","highlight_start":18,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":10334,"byte_end":10334,"line_start":304,"line_end":304,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        .remove_from_watchlist(claims.sub, tmdb_id, &media_type)","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"you can convert a `u32` to an `i32` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":10353,"byte_end":10353,"line_start":304,"line_end":304,"column_start":51,"column_end":51,"is_primary":true,"text":[{"text":"        .remove_from_watchlist(claims.sub, tmdb_id, &media_type)","highlight_start":51,"highlight_end":51}],"label":null,"suggested_replacement":".try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:304:10: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: arguments to this method are incorrect\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":10429,"byte_end":10436,"line_start":308,"line_end":308,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"            if removed {","highlight_start":16,"highlight_end":23}],"label":"expected `bool`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/user.rs","byte_start":10429,"byte_end":10436,"line_start":308,"line_end":308,"column_start":16,"column_end":23,"is_primary":false,"text":[{"text":"            if removed {","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `if` or `while` condition","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0msrc/handlers/user.rs:308:16: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `bool`, found `()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<JsonValue>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":10795,"byte_end":10799,"line_start":317,"line_end":317,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                    meta: Some(json!({","highlight_start":21,"highlight_end":25}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:317:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<JsonValue>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":11090,"byte_end":11098,"line_start":323,"line_end":323,"column_start":39,"column_end":47,"is_primary":true,"text":[{"text":"                (StatusCode::OK, Json(response))","highlight_start":39,"highlight_end":47}],"label":"expected `ApiResponse<()>`, found `ApiResponse<Value>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":11085,"byte_end":11089,"line_start":323,"line_end":323,"column_start":34,"column_end":38,"is_primary":false,"text":[{"text":"                (StatusCode::OK, Json(response))","highlight_start":34,"highlight_end":38}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<JsonValue>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<JsonValue>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":11090,"byte_end":11098,"line_start":323,"line_end":323,"column_start":39,"column_end":47,"is_primary":false,"text":[{"text":"                (StatusCode::OK, Json(response))","highlight_start":39,"highlight_end":47}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":11085,"byte_end":11099,"line_start":323,"line_end":323,"column_start":34,"column_end":48,"is_primary":true,"text":[{"text":"                (StatusCode::OK, Json(response))","highlight_start":34,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:323:39: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<Value>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `code`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":11267,"byte_end":11271,"line_start":327,"line_end":327,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                    code: \"ITEM_NOT_FOUND\".to_string(),","highlight_start":21,"highlight_end":25}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:327:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `code`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `details`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":11323,"byte_end":11330,"line_start":328,"line_end":328,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"                    details: Some(json!({","highlight_start":21,"highlight_end":28}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:328:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `details`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":11633,"byte_end":11647,"line_start":336,"line_end":336,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"                    error: Some(error_response),","highlight_start":33,"highlight_end":47}],"label":"expected `String`, found `ErrorResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":11628,"byte_end":11632,"line_start":336,"line_end":336,"column_start":28,"column_end":32,"is_primary":false,"text":[{"text":"                    error: Some(error_response),","highlight_start":28,"highlight_end":32}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `models::ErrorResponse` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":11633,"byte_end":11647,"line_start":336,"line_end":336,"column_start":33,"column_end":47,"is_primary":false,"text":[{"text":"                    error: Some(error_response),","highlight_start":33,"highlight_end":47}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":11628,"byte_end":11648,"line_start":336,"line_end":336,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"                    error: Some(error_response),","highlight_start":28,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:336:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `ErrorResponse`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<()>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":11670,"byte_end":11674,"line_start":337,"line_end":337,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                    meta: Some(json!({","highlight_start":21,"highlight_end":25}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:337:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<()>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":12827,"byte_end":12845,"line_start":371,"line_end":371,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_watchlist` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":12827,"byte_end":12845,"line_start":371,"line_end":371,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    match state.database.get_user_watchlist(claims.sub).await {","highlight_start":26,"highlight_end":44}],"label":null,"suggested_replacement":"get_watchlist","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:371:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_user_watchlist` found for struct `Arc<database::Database>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<JsonValue>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":13358,"byte_end":13362,"line_start":385,"line_end":385,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                meta: Some(json!({","highlight_start":17,"highlight_end":21}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:385:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<JsonValue>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":13573,"byte_end":13581,"line_start":390,"line_end":390,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"expected `ApiResponse<()>`, found `ApiResponse<Value>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":13568,"byte_end":13572,"line_start":390,"line_end":390,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":34}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<JsonValue>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<JsonValue>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":13573,"byte_end":13581,"line_start":390,"line_end":390,"column_start":35,"column_end":43,"is_primary":false,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":35,"highlight_end":43}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":13568,"byte_end":13582,"line_start":390,"line_end":390,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"            (StatusCode::OK, Json(response))","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:390:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<Value>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":14078,"byte_end":14088,"line_start":407,"line_end":407,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":41,"highlight_end":51}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":14063,"byte_end":14077,"line_start":407,"line_end":407,"column_start":26,"column_end":40,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":26,"highlight_end":40}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":14078,"byte_end":14078,"line_start":407,"line_end":407,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:407:41: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":14109,"byte_end":14119,"line_start":408,"line_end":408,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        Ok(Some(user)) => {","highlight_start":12,"highlight_end":22}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":14048,"byte_end":14095,"line_start":407,"line_end":407,"column_start":11,"column_end":58,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":11,"highlight_end":58}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:408:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":14737,"byte_end":14741,"line_start":426,"line_end":426,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(None) => handle_user_error(AuthError::UserNotFound),","highlight_start":12,"highlight_end":16}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":14048,"byte_end":14095,"line_start":407,"line_end":407,"column_start":11,"column_end":58,"is_primary":false,"text":[{"text":"    match state.database.get_user_by_id(claims.sub).await {","highlight_start":11,"highlight_end":58}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:426:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":15367,"byte_end":15377,"line_start":444,"line_end":444,"column_start":56,"column_end":66,"is_primary":true,"text":[{"text":"    let mut user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":56,"highlight_end":66}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":15352,"byte_end":15366,"line_start":444,"line_end":444,"column_start":41,"column_end":55,"is_primary":false,"text":[{"text":"    let mut user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":41,"highlight_end":55}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":15367,"byte_end":15367,"line_start":444,"line_end":444,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"    let mut user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:444:56: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":15398,"byte_end":15408,"line_start":445,"line_end":445,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        Ok(Some(user)) => user,","highlight_start":12,"highlight_end":22}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":15337,"byte_end":15384,"line_start":444,"line_end":444,"column_start":26,"column_end":73,"is_primary":false,"text":[{"text":"    let mut user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":26,"highlight_end":73}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:445:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":15430,"byte_end":15434,"line_start":446,"line_end":446,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(None) => return handle_user_error(AuthError::UserNotFound),","highlight_start":12,"highlight_end":16}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":15337,"byte_end":15384,"line_start":444,"line_end":444,"column_start":26,"column_end":73,"is_primary":false,"text":[{"text":"    let mut user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":26,"highlight_end":73}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:446:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<models::user::UserPreferences>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":15980,"byte_end":15984,"line_start":462,"line_end":462,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:462:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<models::user::UserPreferences>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":16236,"byte_end":16244,"line_start":469,"line_end":469,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"expected `ApiResponse<()>`, found `ApiResponse<UserPreferences>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":16231,"byte_end":16235,"line_start":469,"line_end":469,"column_start":22,"column_end":26,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":26}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<models::user::UserPreferences>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<models::user::UserPreferences>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":16236,"byte_end":16244,"line_start":469,"line_end":469,"column_start":27,"column_end":35,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":16231,"byte_end":16245,"line_start":469,"line_end":469,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:469:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<UserPreferences>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":16663,"byte_end":16673,"line_start":482,"line_end":482,"column_start":52,"column_end":62,"is_primary":true,"text":[{"text":"    let user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":52,"highlight_end":62}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":16648,"byte_end":16662,"line_start":482,"line_end":482,"column_start":37,"column_end":51,"is_primary":false,"text":[{"text":"    let user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":37,"highlight_end":51}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":16663,"byte_end":16663,"line_start":482,"line_end":482,"column_start":52,"column_end":52,"is_primary":true,"text":[{"text":"    let user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":52,"highlight_end":52}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:482:52: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":16694,"byte_end":16704,"line_start":483,"line_end":483,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        Ok(Some(user)) => user,","highlight_start":12,"highlight_end":22}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":16633,"byte_end":16680,"line_start":482,"line_end":482,"column_start":22,"column_end":69,"is_primary":false,"text":[{"text":"    let user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":22,"highlight_end":69}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:483:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":16726,"byte_end":16730,"line_start":484,"line_end":484,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"        Ok(None) => return handle_user_error(AuthError::UserNotFound),","highlight_start":12,"highlight_end":16}],"label":"expected `User`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":16633,"byte_end":16680,"line_start":482,"line_end":482,"column_start":22,"column_end":69,"is_primary":false,"text":[{"text":"    let user = match state.database.get_user_by_id(claims.sub).await {","highlight_start":22,"highlight_end":69}],"label":"this expression has type `Result<User, anyhow::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:484:12: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<JsonValue>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":17544,"byte_end":17548,"line_start":511,"line_end":511,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:511:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<JsonValue>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":17755,"byte_end":17763,"line_start":518,"line_end":518,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"expected `ApiResponse<()>`, found `ApiResponse<Value>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":17750,"byte_end":17754,"line_start":518,"line_end":518,"column_start":22,"column_end":26,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":26}],"label":"arguments to this struct are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `models::ApiResponse<()>`\n   found struct `models::ApiResponse<JsonValue>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type constructed contains `models::ApiResponse<JsonValue>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":17755,"byte_end":17763,"line_start":518,"line_end":518,"column_start":27,"column_end":35,"is_primary":false,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":27,"highlight_end":35}],"label":"this argument influences the type of `Json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":17750,"byte_end":17764,"line_start":518,"line_end":518,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    (StatusCode::OK, Json(response))","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple struct defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/json.rs","byte_start":2786,"byte_end":2790,"line_start":97,"line_end":97,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Json<T>(pub T);","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:518:27: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `ApiResponse<()>`, found `ApiResponse<Value>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `SessionExpired` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5066,"byte_end":5080,"line_start":163,"line_end":163,"column_start":46,"column_end":60,"is_primary":true,"text":[{"text":"        return Err(AppError::Auth(AuthError::SessionExpired));","highlight_start":46,"highlight_end":60}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `SessionExpired` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/middleware/auth.rs:163:46: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `SessionExpired` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `user_id`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5246,"byte_end":5253,"line_start":169,"line_end":169,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        user_id: validation.user_id.unwrap(),","highlight_start":9,"highlight_end":16}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:169:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `user_id`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `iss`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5457,"byte_end":5460,"line_start":174,"line_end":174,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        iss: String::new(),","highlight_start":9,"highlight_end":12}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:174:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `iss`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `aud`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5485,"byte_end":5488,"line_start":175,"line_end":175,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        aud: String::new(),","highlight_start":9,"highlight_end":12}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:175:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `aud`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5824,"byte_end":5829,"line_start":191,"line_end":191,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5824,"byte_end":5829,"line_start":191,"line_end":191,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    State(state): State<AppState>,","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:191:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `state`: help: if this is intentional, prefix it with an underscore: `_state`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5929,"byte_end":5941,"line_start":195,"line_end":195,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let mut response = next.run(request).await;","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/middleware/auth.rs","byte_start":5929,"byte_end":5933,"line_start":195,"line_end":195,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut response = next.run(request).await;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:195:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `user_id`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":7413,"byte_end":7420,"line_start":241,"line_end":241,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        user_id: validation.user_id.unwrap(),","highlight_start":9,"highlight_end":16}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:241:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `user_id`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":7613,"byte_end":7797,"line_start":245,"line_end":249,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"        exp: validation.expires_at","highlight_start":14,"highlight_end":35},{"text":"            .unwrap_or_else(std::time::SystemTime::now)","highlight_start":1,"highlight_end":56},{"text":"            .duration_since(std::time::UNIX_EPOCH)","highlight_start":1,"highlight_end":51},{"text":"            .unwrap_or_default()","highlight_start":1,"highlight_end":33},{"text":"            .as_secs(),","highlight_start":1,"highlight_end":23}],"label":"expected `i64`, found `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/middleware/auth.rs:245:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `u64`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `iss`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":7807,"byte_end":7810,"line_start":250,"line_end":250,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        iss: String::new(),","highlight_start":9,"highlight_end":12}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:250:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `iss`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `aud`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":7835,"byte_end":7838,"line_start":251,"line_end":251,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        aud: String::new(),","highlight_start":9,"highlight_end":12}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:251:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `aud`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot move out of `request` because it is borrowed","code":{"code":"E0505","explanation":"A value was moved out while it was still borrowed.\n\nErroneous code example:\n\n```compile_fail,E0505\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n    let _ref_to_val: &Value = &x;\n    eat(x);\n    borrow(_ref_to_val);\n}\n```\n\nHere, the function `eat` takes ownership of `x`. However,\n`x` cannot be moved because the borrow to `_ref_to_val`\nneeds to last till the function `borrow`.\nTo fix that you can do a few different things:\n\n* Try to avoid moving the variable.\n* Release borrow before move.\n* Implement the `Copy` trait on the type.\n\nExamples:\n\n```\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: &Value) {}\n\nfn main() {\n    let x = Value{};\n\n    let ref_to_val: &Value = &x;\n    eat(&x); // pass by reference, if it's possible\n    borrow(ref_to_val);\n}\n```\n\nOr:\n\n```\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n\n    let ref_to_val: &Value = &x;\n    borrow(ref_to_val);\n    // ref_to_val is no longer used.\n    eat(x);\n}\n```\n\nOr:\n\n```\n#[derive(Clone, Copy)] // implement Copy trait\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n    let ref_to_val: &Value = &x;\n    eat(x); // it will be copied here.\n    borrow(ref_to_val);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","spans":[{"file_name":"src/middleware/cors.rs","byte_start":5543,"byte_end":5550,"line_start":183,"line_end":183,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"    let mut response = next.run(request).await;","highlight_start":33,"highlight_end":40}],"label":"move out of `request` occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":5142,"byte_end":5149,"line_start":169,"line_end":169,"column_start":18,"column_end":25,"is_primary":false,"text":[{"text":"    let origin = request","highlight_start":18,"highlight_end":25}],"label":"borrow of `request` occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":5075,"byte_end":5082,"line_start":166,"line_end":166,"column_start":5,"column_end":12,"is_primary":false,"text":[{"text":"    request: Request,","highlight_start":5,"highlight_end":12}],"label":"binding `request` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":5636,"byte_end":5642,"line_start":186,"line_end":186,"column_start":37,"column_end":43,"is_primary":false,"text":[{"text":"    add_cors_headers(&mut response, origin, &config.cors_origins);","highlight_start":37,"highlight_end":43}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/middleware/cors.rs:183:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0505]\u001b[0m\u001b[0m: cannot move out of `request` because it is borrowed: move out of `request` occurs here\u001b[0m\n"}
{"$message_type":"diagnostic","message":"cannot move out of `request` because it is borrowed","code":{"code":"E0505","explanation":"A value was moved out while it was still borrowed.\n\nErroneous code example:\n\n```compile_fail,E0505\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n    let _ref_to_val: &Value = &x;\n    eat(x);\n    borrow(_ref_to_val);\n}\n```\n\nHere, the function `eat` takes ownership of `x`. However,\n`x` cannot be moved because the borrow to `_ref_to_val`\nneeds to last till the function `borrow`.\nTo fix that you can do a few different things:\n\n* Try to avoid moving the variable.\n* Release borrow before move.\n* Implement the `Copy` trait on the type.\n\nExamples:\n\n```\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: &Value) {}\n\nfn main() {\n    let x = Value{};\n\n    let ref_to_val: &Value = &x;\n    eat(&x); // pass by reference, if it's possible\n    borrow(ref_to_val);\n}\n```\n\nOr:\n\n```\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n\n    let ref_to_val: &Value = &x;\n    borrow(ref_to_val);\n    // ref_to_val is no longer used.\n    eat(x);\n}\n```\n\nOr:\n\n```\n#[derive(Clone, Copy)] // implement Copy trait\nstruct Value {}\n\nfn borrow(val: &Value) {}\n\nfn eat(val: Value) {}\n\nfn main() {\n    let x = Value{};\n    let ref_to_val: &Value = &x;\n    eat(x); // it will be copied here.\n    borrow(ref_to_val);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","spans":[{"file_name":"src/middleware/cors.rs","byte_start":10893,"byte_end":10900,"line_start":358,"line_end":358,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"    let mut response = next.run(request).await;","highlight_start":33,"highlight_end":40}],"label":"move out of `request` occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":10248,"byte_end":10255,"line_start":336,"line_end":336,"column_start":18,"column_end":25,"is_primary":false,"text":[{"text":"    let origin = request","highlight_start":18,"highlight_end":25}],"label":"borrow of `request` occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":10181,"byte_end":10188,"line_start":333,"line_end":333,"column_start":5,"column_end":12,"is_primary":false,"text":[{"text":"    request: Request,","highlight_start":5,"highlight_end":12}],"label":"binding `request` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":11030,"byte_end":11036,"line_start":362,"line_end":362,"column_start":45,"column_end":51,"is_primary":false,"text":[{"text":"        add_api_cors_headers(&mut response, origin);","highlight_start":45,"highlight_end":51}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/middleware/cors.rs:358:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0505]\u001b[0m\u001b[0m: cannot move out of `request` because it is borrowed: move out of `request` occurs here\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/middleware/logging.rs","byte_start":3719,"byte_end":3726,"line_start":121,"line_end":121,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        user_id,","highlight_start":9,"highlight_end":16}],"label":"expected `Option<u32>`, found `Option<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `std::option::Option<u32>`\n   found enum `std::option::Option<std::string::String>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/logging.rs:121:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `Option<u32>`, found `Option<String>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"borrow of moved value: `request`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"src/middleware/logging.rs","byte_start":7695,"byte_end":7702,"line_start":252,"line_end":252,"column_start":29,"column_end":36,"is_primary":false,"text":[{"text":"    let response = next.run(request).await;","highlight_start":29,"highlight_end":36}],"label":"value moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/logging.rs","byte_start":7792,"byte_end":7800,"line_start":255,"line_end":255,"column_start":50,"column_end":58,"is_primary":true,"text":[{"text":"    if let Some(user_context) = get_user_context(&request) {","highlight_start":50,"highlight_end":58}],"label":"value borrowed here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/logging.rs","byte_start":7499,"byte_end":7506,"line_start":247,"line_end":247,"column_start":36,"column_end":43,"is_primary":false,"text":[{"text":"pub async fn user_activity_logging(request: Request, next: Next) -> Response {","highlight_start":36,"highlight_end":43}],"label":"move occurs because `request` has type `axum::http::Request<axum::body::Body>`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/middleware/logging.rs:255:50: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m: borrow of moved value: `request`: value borrowed here after move\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":8180,"byte_end":8192,"line_start":280,"line_end":280,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":8180,"byte_end":8184,"line_start":280,"line_end":280,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:280:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":9773,"byte_end":9785,"line_start":324,"line_end":324,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":9773,"byte_end":9777,"line_start":324,"line_end":324,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:324:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":9354,"byte_end":9591,"line_start":313,"line_end":318,"column_start":25,"column_end":14,"is_primary":true,"text":[{"text":"            .unwrap_or(&RateLimitConfig {","highlight_start":25,"highlight_end":42},{"text":"                max_requests: 10,","highlight_start":1,"highlight_end":34},{"text":"                time_window: Duration::from_secs(300), // 5 minutes","highlight_start":1,"highlight_end":68},{"text":"                min_interval: Some(Duration::from_millis(500)),","highlight_start":1,"highlight_end":64},{"text":"                burst_protection: true,","highlight_start":1,"highlight_end":40},{"text":"            });","highlight_start":1,"highlight_end":14}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":9592,"byte_end":9593,"line_start":318,"line_end":318,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"            });","highlight_start":15,"highlight_end":16}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":9670,"byte_end":9676,"line_start":320,"line_end":320,"column_start":68,"column_end":74,"is_primary":false,"text":[{"text":"        let result = rate_limit_state.store.check_rate_limit(&key, config);","highlight_start":68,"highlight_end":74}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:313:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0716]\u001b[0m\u001b[0m: temporary value dropped while borrowed: creates a temporary value which is freed while still in use\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":11364,"byte_end":11376,"line_start":367,"line_end":367,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":11364,"byte_end":11368,"line_start":367,"line_end":367,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut response = next.run(request).await;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:367:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":10877,"byte_end":11113,"line_start":355,"line_end":360,"column_start":25,"column_end":14,"is_primary":true,"text":[{"text":"            .unwrap_or(&RateLimitConfig {","highlight_start":25,"highlight_end":42},{"text":"                max_requests: 200,","highlight_start":1,"highlight_end":35},{"text":"                time_window: Duration::from_secs(3600), // 1 hour","highlight_start":1,"highlight_end":66},{"text":"                min_interval: Some(Duration::from_millis(100)),","highlight_start":1,"highlight_end":64},{"text":"                burst_protection: true,","highlight_start":1,"highlight_end":40},{"text":"            });","highlight_start":1,"highlight_end":14}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":11114,"byte_end":11115,"line_start":360,"line_end":360,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"            });","highlight_start":15,"highlight_end":16}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/rate_limit.rs","byte_start":11261,"byte_end":11267,"line_start":363,"line_end":363,"column_start":68,"column_end":74,"is_primary":false,"text":[{"text":"        let result = rate_limit_state.store.check_rate_limit(&key, config);","highlight_start":68,"highlight_end":74}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:355:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0716]\u001b[0m\u001b[0m: temporary value dropped while borrowed: creates a temporary value which is freed while still in use\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `correlation_id` on type `&mut RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":4444,"byte_end":4458,"line_start":146,"line_end":146,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        context.correlation_id = tracking.correlation_id.clone();","highlight_start":17,"highlight_end":31}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:146:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `correlation_id` on type `&mut RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `trace_id` on type `&mut RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":4510,"byte_end":4518,"line_start":147,"line_end":147,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        context.trace_id = tracking.trace_id.clone();","highlight_start":17,"highlight_end":25}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:147:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `trace_id` on type `&mut RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `correlation_id` on type `RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":4675,"byte_end":4689,"line_start":151,"line_end":151,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        context.correlation_id = tracking.correlation_id.clone();","highlight_start":17,"highlight_end":31}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:151:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `correlation_id` on type `RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `trace_id` on type `RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":4741,"byte_end":4749,"line_start":152,"line_end":152,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        context.trace_id = tracking.trace_id.clone();","highlight_start":17,"highlight_end":25}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:152:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `trace_id` on type `RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `correlation_id` on type `&mut RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":9514,"byte_end":9528,"line_start":296,"line_end":296,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        context.correlation_id = Some(correlation_id.clone());","highlight_start":17,"highlight_end":31}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:296:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `correlation_id` on type `&mut RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `trace_id` on type `&mut RequestContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":10532,"byte_end":10540,"line_start":327,"line_end":327,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        context.trace_id = Some(trace_id.clone());","highlight_start":17,"highlight_end":25}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `request_id`, `start_time`, `user_id`, `ip_address`, `user_agent`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:327:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `trace_id` on type `&mut RequestContext`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":12829,"byte_end":12841,"line_start":400,"line_end":400,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    if let Some(mut tracking) = request.extensions_mut().get_mut::<RequestTracking>() {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/middleware/request_id.rs","byte_start":12829,"byte_end":12833,"line_start":400,"line_end":400,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"    if let Some(mut tracking) = request.extensions_mut().get_mut::<RequestTracking>() {","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/request_id.rs:400:17: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":3487,"byte_end":3493,"line_start":99,"line_end":99,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    State(config): State<Arc<crate::config::AppConfig>>,","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":3487,"byte_end":3493,"line_start":99,"line_end":99,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    State(config): State<Arc<crate::config::AppConfig>>,","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:99:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `config`: help: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/security.rs","byte_start":5781,"byte_end":5787,"line_start":167,"line_end":167,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    State(config): State<Arc<crate::config::AppConfig>>,","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/middleware/security.rs","byte_start":5781,"byte_end":5787,"line_start":167,"line_end":167,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    State(config): State<Arc<crate::config::AppConfig>>,","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/security.rs:167:11: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `config`: help: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","spans":[{"file_name":"src/services/tmdb.rs","byte_start":10224,"byte_end":10227,"line_start":304,"line_end":304,"column_start":48,"column_end":51,"is_primary":true,"text":[{"text":"        let response = self.make_request(&url, &[]).await?;","highlight_start":48,"highlight_end":51}],"label":"cannot infer type for type parameter `impl AsRef<str>` declared on the method `make_request`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":10205,"byte_end":10217,"line_start":304,"line_end":304,"column_start":29,"column_end":41,"is_primary":false,"text":[{"text":"        let response = self.make_request(&url, &[]).await?;","highlight_start":29,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"cannot satisfy `_: AsRef<str>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `TmdbService::make_request`","code":null,"level":"note","spans":[{"file_name":"src/services/tmdb.rs","byte_start":14796,"byte_end":14806,"line_start":429,"line_end":429,"column_start":61,"column_end":71,"is_primary":true,"text":[{"text":"    async fn make_request(&self, url: &str, params: &[(impl AsRef<str>, impl AsRef<str>)]) -> TmdbResult<Response> {","highlight_start":61,"highlight_end":71}],"label":"required by this bound in `TmdbService::make_request`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/tmdb.rs:304:48: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m: type annotations needed: cannot infer type for type parameter `impl AsRef<str>` declared on the method `make_request`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","spans":[{"file_name":"src/services/tmdb.rs","byte_start":14581,"byte_end":14584,"line_start":422,"line_end":422,"column_start":48,"column_end":51,"is_primary":true,"text":[{"text":"        let response = self.make_request(&url, &[]).await?;","highlight_start":48,"highlight_end":51}],"label":"cannot infer type for type parameter `impl AsRef<str>` declared on the method `make_request`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":14562,"byte_end":14574,"line_start":422,"line_end":422,"column_start":29,"column_end":41,"is_primary":false,"text":[{"text":"        let response = self.make_request(&url, &[]).await?;","highlight_start":29,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"cannot satisfy `_: AsRef<str>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `TmdbService::make_request`","code":null,"level":"note","spans":[{"file_name":"src/services/tmdb.rs","byte_start":14796,"byte_end":14806,"line_start":429,"line_end":429,"column_start":61,"column_end":71,"is_primary":true,"text":[{"text":"    async fn make_request(&self, url: &str, params: &[(impl AsRef<str>, impl AsRef<str>)]) -> TmdbResult<Response> {","highlight_start":61,"highlight_end":71}],"label":"required by this bound in `TmdbService::make_request`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/tmdb.rs:422:48: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m: type annotations needed: cannot infer type for type parameter `impl AsRef<str>` declared on the method `make_request`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `check_and_acquire` found for struct `tokio::sync::RwLockWriteGuard<'_, RateLimiter>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/tmdb.rs","byte_start":15087,"byte_end":15104,"line_start":435,"line_end":435,"column_start":32,"column_end":49,"is_primary":true,"text":[{"text":"            match rate_limiter.check_and_acquire(\"tmdb\").await {","highlight_start":32,"highlight_end":49}],"label":"method not found in `RwLockWriteGuard<'_, RateLimiter>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/tmdb.rs:435:32: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `check_and_acquire` found for struct `tokio::sync::RwLockWriteGuard<'_, RateLimiter>` in the current scope: method not found in `RwLockWriteGuard<'_, RateLimiter>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant named `RateLimited` found for enum `RateLimitResult`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/tmdb.rs","byte_start":15202,"byte_end":15213,"line_start":437,"line_end":437,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"                RateLimitResult::RateLimited { retry_after } => {","highlight_start":34,"highlight_end":45}],"label":"variant not found in `RateLimitResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/rate_limiter.rs","byte_start":1389,"byte_end":1413,"line_start":48,"line_end":48,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub enum RateLimitResult {","highlight_start":1,"highlight_end":25}],"label":"variant `RateLimited` not found here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/tmdb.rs:437:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant named `RateLimited` found for enum `RateLimitResult`: variant not found in `RateLimitResult`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Error` found for enum `RateLimitResult` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/tmdb.rs","byte_start":15525,"byte_end":15530,"line_start":442,"line_end":442,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"                RateLimitResult::Error(e) => {","highlight_start":34,"highlight_end":39}],"label":"variant or associated item not found in `RateLimitResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/rate_limiter.rs","byte_start":1389,"byte_end":1413,"line_start":48,"line_end":48,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub enum RateLimitResult {","highlight_start":1,"highlight_end":25}],"label":"variant or associated item `Error` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/tmdb.rs:442:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `Error` found for enum `RateLimitResult` in the current scope: variant or associated item not found in `RateLimitResult`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `media_type` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12058,"byte_end":12068,"line_start":347,"line_end":347,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                        if item.media_type == Some(\"movie\".to_string()) {","highlight_start":33,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:347:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `media_type` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `id` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12182,"byte_end":12184,"line_start":349,"line_end":349,"column_start":42,"column_end":44,"is_primary":true,"text":[{"text":"                                id: item.id,","highlight_start":42,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:349:42: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `id` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `title` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12230,"byte_end":12235,"line_start":350,"line_end":350,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"                                title: item.title.unwrap_or_default(),","highlight_start":45,"highlight_end":50}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:350:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `title` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `original_title` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12310,"byte_end":12324,"line_start":351,"line_end":351,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"                                original_title: item.original_title,","highlight_start":54,"highlight_end":68}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:351:54: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `original_title` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `overview` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12373,"byte_end":12381,"line_start":352,"line_end":352,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"                                overview: item.overview,","highlight_start":48,"highlight_end":56}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:352:48: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `overview` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `poster_path` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12433,"byte_end":12444,"line_start":353,"line_end":353,"column_start":51,"column_end":62,"is_primary":true,"text":[{"text":"                                poster_path: item.poster_path,","highlight_start":51,"highlight_end":62}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:353:51: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `poster_path` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `backdrop_path` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12498,"byte_end":12511,"line_start":354,"line_end":354,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"                                backdrop_path: item.backdrop_path,","highlight_start":53,"highlight_end":66}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:354:53: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `backdrop_path` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `release_date` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12564,"byte_end":12576,"line_start":355,"line_end":355,"column_start":52,"column_end":64,"is_primary":true,"text":[{"text":"                                release_date: item.release_date,","highlight_start":52,"highlight_end":64}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:355:52: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `release_date` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `genre_ids` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12626,"byte_end":12635,"line_start":356,"line_end":356,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"                                genre_ids: item.genre_ids,","highlight_start":49,"highlight_end":58}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:356:49: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `genre_ids` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `adult` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12681,"byte_end":12686,"line_start":357,"line_end":357,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"                                adult: item.adult.unwrap_or(false),","highlight_start":45,"highlight_end":50}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:357:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `adult` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `original_language` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12761,"byte_end":12778,"line_start":358,"line_end":358,"column_start":57,"column_end":74,"is_primary":true,"text":[{"text":"                                original_language: item.original_language,","highlight_start":57,"highlight_end":74}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:358:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `original_language` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `popularity` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12829,"byte_end":12839,"line_start":359,"line_end":359,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                                popularity: item.popularity,","highlight_start":50,"highlight_end":60}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:359:50: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `popularity` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `vote_average` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12892,"byte_end":12904,"line_start":360,"line_end":360,"column_start":52,"column_end":64,"is_primary":true,"text":[{"text":"                                vote_average: item.vote_average,","highlight_start":52,"highlight_end":64}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:360:52: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `vote_average` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `vote_count` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":12955,"byte_end":12965,"line_start":361,"line_end":361,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                                vote_count: item.vote_count,","highlight_start":50,"highlight_end":60}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:361:50: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `vote_count` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `media_type` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":14778,"byte_end":14788,"line_start":409,"line_end":409,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                        if item.media_type == Some(\"tv\".to_string()) {","highlight_start":33,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:409:33: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `media_type` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `id` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":14900,"byte_end":14902,"line_start":411,"line_end":411,"column_start":42,"column_end":44,"is_primary":true,"text":[{"text":"                                id: item.id,","highlight_start":42,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:411:42: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `id` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `name` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":14947,"byte_end":14951,"line_start":412,"line_end":412,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"                                name: item.name.unwrap_or_default(),","highlight_start":44,"highlight_end":48}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:412:44: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `name` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `original_name` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15025,"byte_end":15038,"line_start":413,"line_end":413,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"                                original_name: item.original_name,","highlight_start":53,"highlight_end":66}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:413:53: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `original_name` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `overview` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15087,"byte_end":15095,"line_start":414,"line_end":414,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"                                overview: item.overview,","highlight_start":48,"highlight_end":56}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:414:48: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `overview` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `poster_path` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15147,"byte_end":15158,"line_start":415,"line_end":415,"column_start":51,"column_end":62,"is_primary":true,"text":[{"text":"                                poster_path: item.poster_path,","highlight_start":51,"highlight_end":62}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:415:51: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `poster_path` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `backdrop_path` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15212,"byte_end":15225,"line_start":416,"line_end":416,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"                                backdrop_path: item.backdrop_path,","highlight_start":53,"highlight_end":66}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:416:53: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `backdrop_path` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `first_air_date` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15280,"byte_end":15294,"line_start":417,"line_end":417,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"                                first_air_date: item.first_air_date,","highlight_start":54,"highlight_end":68}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:417:54: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `first_air_date` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `genre_ids` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15344,"byte_end":15353,"line_start":418,"line_end":418,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"                                genre_ids: item.genre_ids,","highlight_start":49,"highlight_end":58}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:418:49: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `genre_ids` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `original_language` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15411,"byte_end":15428,"line_start":419,"line_end":419,"column_start":57,"column_end":74,"is_primary":true,"text":[{"text":"                                original_language: item.original_language,","highlight_start":57,"highlight_end":74}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:419:57: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `original_language` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `popularity` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15479,"byte_end":15489,"line_start":420,"line_end":420,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                                popularity: item.popularity,","highlight_start":50,"highlight_end":60}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:420:50: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `popularity` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `vote_average` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15542,"byte_end":15554,"line_start":421,"line_end":421,"column_start":52,"column_end":64,"is_primary":true,"text":[{"text":"                                vote_average: item.vote_average,","highlight_start":52,"highlight_end":64}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:421:52: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `vote_average` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `vote_count` on type `models::tmdb::TrendingItem`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":15605,"byte_end":15615,"line_start":422,"line_end":422,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                                vote_count: item.vote_count,","highlight_start":50,"highlight_end":60}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/stremio.rs:422:50: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `vote_count` on type `models::tmdb::TrendingItem`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `urlencoding`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":19743,"byte_end":19754,"line_start":544,"line_end":544,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    urlencoding::encode(&title))),","highlight_start":21,"highlight_end":32}],"label":"use of unresolved module or unlinked crate `urlencoding`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you wanted to use a crate named `urlencoding`, use `cargo add urlencoding` to add it to your `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:544:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of unresolved module or unlinked crate `urlencoding`: use of unresolved module or unlinked crate `urlencoding`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::stremio::Stream` has no field named `subtitle_tracks`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":19849,"byte_end":19864,"line_start":546,"line_end":546,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                subtitle_tracks: None,","highlight_start":17,"highlight_end":32}],"label":"`models::stremio::Stream` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `yt_id`, `info_hash`, `file_idx`, `name`, `description` ... and 4 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:546:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::stremio::Stream` has no field named `subtitle_tracks`: `models::stremio::Stream` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of unresolved module or unlinked crate `urlencoding`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":20043,"byte_end":20054,"line_start":551,"line_end":551,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    urlencoding::encode(&title))),","highlight_start":21,"highlight_end":32}],"label":"use of unresolved module or unlinked crate `urlencoding`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you wanted to use a crate named `urlencoding`, use `cargo add urlencoding` to add it to your `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:551:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m: failed to resolve: use of unresolved module or unlinked crate `urlencoding`: use of unresolved module or unlinked crate `urlencoding`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::stremio::Stream` has no field named `subtitle_tracks`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/stremio.rs","byte_start":20148,"byte_end":20163,"line_start":553,"line_end":553,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                subtitle_tracks: None,","highlight_start":17,"highlight_end":32}],"label":"`models::stremio::Stream` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `yt_id`, `info_hash`, `file_idx`, `name`, `description` ... and 4 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/stremio.rs:553:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::stremio::Stream` has no field named `subtitle_tracks`: `models::stremio::Stream` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"this method takes 1 argument but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":4344,"byte_end":4361,"line_start":147,"line_end":147,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            &request.username,","highlight_start":13,"highlight_end":30}],"label":"expected `&UserCreate`, found `&String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":4375,"byte_end":4389,"line_start":148,"line_end":148,"column_start":13,"column_end":27,"is_primary":false,"text":[{"text":"            &request.email,","highlight_start":13,"highlight_end":27}],"label":"unexpected argument #2 of type `&std::string::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":4403,"byte_end":4417,"line_start":149,"line_end":149,"column_start":13,"column_end":27,"is_primary":false,"text":[{"text":"            &password_hash,","highlight_start":13,"highlight_end":27}],"label":"unexpected argument #3 of type `&std::string::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":4319,"byte_end":4330,"line_start":146,"line_end":146,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"        let user = self.database.create_user(","highlight_start":34,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&UserCreate`\n   found reference `&std::string::String`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":3471,"byte_end":3495,"line_start":107,"line_end":107,"column_start":37,"column_end":61,"is_primary":false,"text":[{"text":"    pub async fn create_user(&self, user_create: &UserCreate) -> Result<User> {","highlight_start":37,"highlight_end":61}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":3452,"byte_end":3463,"line_start":107,"line_end":107,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    pub async fn create_user(&self, user_create: &UserCreate) -> Result<User> {","highlight_start":18,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra arguments","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":4361,"byte_end":4389,"line_start":147,"line_end":148,"column_start":30,"column_end":27,"is_primary":true,"text":[{"text":"            &request.username,","highlight_start":30,"highlight_end":31},{"text":"            &request.email,","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/services/auth.rs","byte_start":4389,"byte_end":4417,"line_start":148,"line_end":149,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"            &request.email,","highlight_start":27,"highlight_end":28},{"text":"            &password_hash,","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/services/auth.rs","byte_start":4344,"byte_end":4361,"line_start":147,"line_end":147,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            &request.username,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"/* &UserCreate */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:146:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m: this method takes 1 argument but 3 arguments were supplied\u001b[0m\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":4443,"byte_end":4467,"line_start":150,"line_end":150,"column_start":25,"column_end":49,"is_primary":true,"text":[{"text":"        ).await.map_err(AuthError::DatabaseError)?;","highlight_start":25,"highlight_end":49}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":4186,"byte_end":4199,"line_start":149,"line_end":149,"column_start":5,"column_end":18,"is_primary":false,"text":[{"text":"    DatabaseError(String),","highlight_start":5,"highlight_end":18}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":4435,"byte_end":4442,"line_start":150,"line_end":150,"column_start":17,"column_end":24,"is_primary":false,"text":[{"text":"        ).await.map_err(AuthError::DatabaseError)?;","highlight_start":17,"highlight_end":24}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(anyhow::Error) -> _`\n   found function signature `fn(std::string::String) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Result::<T, E>::map_err`","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","byte_start":31479,"byte_end":31493,"line_start":881,"line_end":881,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn map_err<F, O: FnOnce(E) -> F>(self, op: O) -> Result<T, F> {","highlight_start":26,"highlight_end":40}],"label":"required by this bound in `Result::<T, E>::map_err`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider wrapping the function in a closure","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":4443,"byte_end":4443,"line_start":150,"line_end":150,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"        ).await.map_err(AuthError::DatabaseError)?;","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"|arg0: anyhow::Error| ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/auth.rs","byte_start":4467,"byte_end":4467,"line_start":150,"line_end":150,"column_start":49,"column_end":49,"is_primary":true,"text":[{"text":"        ).await.map_err(AuthError::DatabaseError)?;","highlight_start":49,"highlight_end":49}],"label":null,"suggested_replacement":"(/* std::string::String */)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:150:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m: type mismatch in function arguments: expected due to this\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `password_hash` on type `std::option::Option<User>`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":5573,"byte_end":5586,"line_start":183,"line_end":183,"column_start":59,"column_end":72,"is_primary":true,"text":[{"text":"        if !self.verify_password(&request.password, &user.password_hash)? {","highlight_start":59,"highlight_end":72}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":5573,"byte_end":5573,"line_start":183,"line_end":183,"column_start":59,"column_end":59,"is_primary":true,"text":[{"text":"        if !self.verify_password(&request.password, &user.password_hash)? {","highlight_start":59,"highlight_end":59}],"label":null,"suggested_replacement":"unwrap().","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:183:59: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `password_hash` on type `std::option::Option<User>`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":5814,"byte_end":5819,"line_start":189,"line_end":189,"column_start":66,"column_end":71,"is_primary":true,"text":[{"text":"        let (access_token, refresh_token) = self.generate_tokens(&user).await?;","highlight_start":66,"highlight_end":71}],"label":"expected `&User`, found `&Option<User>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":5798,"byte_end":5813,"line_start":189,"line_end":189,"column_start":50,"column_end":65,"is_primary":false,"text":[{"text":"        let (access_token, refresh_token) = self.generate_tokens(&user).await?;","highlight_start":50,"highlight_end":65}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&User`\n   found reference `&std::option::Option<User>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/auth.rs","byte_start":11905,"byte_end":11916,"line_start":364,"line_end":364,"column_start":37,"column_end":48,"is_primary":false,"text":[{"text":"    async fn generate_tokens(&self, user: &User) -> Result<(String, String), AuthError> {","highlight_start":37,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":11882,"byte_end":11897,"line_start":364,"line_end":364,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_tokens(&self, user: &User) -> Result<(String, String), AuthError> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:189:66: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&User`, found `&Option<User>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `ip_address` on type `models::auth::LoginRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":5899,"byte_end":5909,"line_start":192,"line_end":192,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"        self.create_session(&user, request.ip_address, request.user_agent).await?;","highlight_start":44,"highlight_end":54}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `email_or_username`, `password`, `remember_me`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:192:44: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `ip_address` on type `models::auth::LoginRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_agent` on type `models::auth::LoginRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":5919,"byte_end":5929,"line_start":192,"line_end":192,"column_start":64,"column_end":74,"is_primary":true,"text":[{"text":"        self.create_session(&user, request.ip_address, request.user_agent).await?;","highlight_start":64,"highlight_end":74}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `email_or_username`, `password`, `remember_me`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:192:64: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_agent` on type `models::auth::LoginRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":5884,"byte_end":5889,"line_start":192,"line_end":192,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"        self.create_session(&user, request.ip_address, request.user_agent).await?;","highlight_start":29,"highlight_end":34}],"label":"expected `&User`, found `&Option<User>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":5869,"byte_end":5883,"line_start":192,"line_end":192,"column_start":14,"column_end":28,"is_primary":false,"text":[{"text":"        self.create_session(&user, request.ip_address, request.user_agent).await?;","highlight_start":14,"highlight_end":28}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&User`\n   found reference `&std::option::Option<User>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/auth.rs","byte_start":18111,"byte_end":18122,"line_start":528,"line_end":528,"column_start":9,"column_end":20,"is_primary":false,"text":[{"text":"        user: &User,","highlight_start":9,"highlight_end":20}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":18072,"byte_end":18086,"line_start":526,"line_end":526,"column_start":14,"column_end":28,"is_primary":true,"text":[{"text":"    async fn create_session(","highlight_start":14,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:192:29: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&User`, found `&Option<User>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":6042,"byte_end":6046,"line_start":197,"line_end":197,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            user,","highlight_start":13,"highlight_end":17}],"label":"expected `User`, found `Option<User>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `User`\n     found enum `std::option::Option<User>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `std::option::Option<User>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":6046,"byte_end":6046,"line_start":197,"line_end":197,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"            user,","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":": user.expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:197:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `User`, found `Option<User>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::RefreshTokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":6581,"byte_end":6588,"line_start":212,"line_end":212,"column_start":56,"column_end":63,"is_primary":true,"text":[{"text":"        let user = self.database.get_user_by_id(claims.user_id).await","highlight_start":56,"highlight_end":63}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `exp`, `iat`, `jti`, `token_type`, `iss`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:212:56: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::RefreshTokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":6880,"byte_end":6925,"line_start":221,"line_end":221,"column_start":25,"column_end":70,"is_primary":true,"text":[{"text":"            expires_in: self.jwt_config.access_token_expiry.as_secs(),","highlight_start":25,"highlight_end":70}],"label":"expected `i64`, found `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/auth.rs:221:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `u64`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `token` on type `models::auth::LogoutRequest`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":7156,"byte_end":7161,"line_start":228,"line_end":228,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"        let validation = self.validate_token(&request.token).await;","highlight_start":55,"highlight_end":60}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available field is: `refresh_token`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:228:55: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `token` on type `models::auth::LogoutRequest`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `invalidate_user_sessions` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":7512,"byte_end":7536,"line_start":236,"line_end":236,"column_start":35,"column_end":59,"is_primary":true,"text":[{"text":"            let _ = self.database.invalidate_user_sessions(user_id).await;","highlight_start":35,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `invalidate_session` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":7512,"byte_end":7536,"line_start":236,"line_end":236,"column_start":35,"column_end":59,"is_primary":true,"text":[{"text":"            let _ = self.database.invalidate_user_sessions(user_id).await;","highlight_start":35,"highlight_end":59}],"label":null,"suggested_replacement":"invalidate_session","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:236:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `invalidate_user_sessions` found for struct `Arc<database::Database>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::TokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":8248,"byte_end":8255,"line_start":255,"line_end":255,"column_start":62,"column_end":69,"is_primary":true,"text":[{"text":"                    .any(|session| session.user_id == claims.user_id);","highlight_start":62,"highlight_end":69}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `username`, `email`, `exp`, `iat`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:255:62: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::TokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::TokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":8415,"byte_end":8422,"line_start":260,"line_end":260,"column_start":46,"column_end":53,"is_primary":true,"text":[{"text":"                        user_id: Some(claims.user_id),","highlight_start":46,"highlight_end":53}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `username`, `email`, `exp`, `iat`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:260:46: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::TokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":8556,"byte_end":8566,"line_start":262,"line_end":262,"column_start":75,"column_end":85,"is_primary":true,"text":[{"text":"                        expires_at: Some(UNIX_EPOCH + Duration::from_secs(claims.exp)),","highlight_start":75,"highlight_end":85}],"label":"expected `u64`, found `i64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":8536,"byte_end":8555,"line_start":262,"line_end":262,"column_start":55,"column_end":74,"is_primary":false,"text":[{"text":"                        expires_at: Some(UNIX_EPOCH + Duration::from_secs(claims.exp)),","highlight_start":55,"highlight_end":74}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/time.rs","byte_start":7642,"byte_end":7651,"line_start":224,"line_end":224,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    pub const fn from_secs(secs: u64) -> Duration {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can convert an `i64` to a `u64` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":8566,"byte_end":8566,"line_start":262,"line_end":262,"column_start":85,"column_end":85,"is_primary":true,"text":[{"text":"                        expires_at: Some(UNIX_EPOCH + Duration::from_secs(claims.exp)),","highlight_start":85,"highlight_end":85}],"label":null,"suggested_replacement":".try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:262:75: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `u64`, found `i64`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `user_id` on type `models::auth::TokenClaims`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":9432,"byte_end":9439,"line_start":288,"line_end":288,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"        self.database.get_user_by_id(claims.user_id).await","highlight_start":45,"highlight_end":52}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `username`, `email`, `exp`, `iat`, `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:288:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `user_id` on type `models::auth::TokenClaims`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":9468,"byte_end":9492,"line_start":289,"line_end":289,"column_start":22,"column_end":46,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)","highlight_start":22,"highlight_end":46}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":4186,"byte_end":4199,"line_start":149,"line_end":149,"column_start":5,"column_end":18,"is_primary":false,"text":[{"text":"    DatabaseError(String),","highlight_start":5,"highlight_end":18}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":9460,"byte_end":9467,"line_start":289,"line_end":289,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"            .map_err(AuthError::DatabaseError)","highlight_start":14,"highlight_end":21}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(anyhow::Error) -> _`\n   found function signature `fn(std::string::String) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Result::<T, E>::map_err`","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","byte_start":31479,"byte_end":31493,"line_start":881,"line_end":881,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn map_err<F, O: FnOnce(E) -> F>(self, op: O) -> Result<T, F> {","highlight_start":26,"highlight_end":40}],"label":"required by this bound in `Result::<T, E>::map_err`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider wrapping the function in a closure","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":9468,"byte_end":9468,"line_start":289,"line_end":289,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"|arg0: anyhow::Error| ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/auth.rs","byte_start":9492,"byte_end":9492,"line_start":289,"line_end":289,"column_start":46,"column_end":46,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)","highlight_start":46,"highlight_end":46}],"label":null,"suggested_replacement":"(/* std::string::String */)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:289:22: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m: type mismatch in function arguments: expected due to this\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":9762,"byte_end":9769,"line_start":300,"line_end":300,"column_start":49,"column_end":56,"is_primary":true,"text":[{"text":"        let user = self.database.get_user_by_id(user_id).await","highlight_start":49,"highlight_end":56}],"label":"expected `&str`, found `u32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":9747,"byte_end":9761,"line_start":300,"line_end":300,"column_start":34,"column_end":48,"is_primary":false,"text":[{"text":"        let user = self.database.get_user_by_id(user_id).await","highlight_start":34,"highlight_end":48}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":4100,"byte_end":4108,"line_start":129,"line_end":129,"column_start":40,"column_end":48,"is_primary":false,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":40,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":4078,"byte_end":4092,"line_start":129,"line_end":129,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn get_user_by_id(&self, id: &str) -> Result<User> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:300:49: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `&str`, found `u32`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":9798,"byte_end":9822,"line_start":301,"line_end":301,"column_start":22,"column_end":46,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)?;","highlight_start":22,"highlight_end":46}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":4186,"byte_end":4199,"line_start":149,"line_end":149,"column_start":5,"column_end":18,"is_primary":false,"text":[{"text":"    DatabaseError(String),","highlight_start":5,"highlight_end":18}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":9790,"byte_end":9797,"line_start":301,"line_end":301,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"            .map_err(AuthError::DatabaseError)?;","highlight_start":14,"highlight_end":21}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(anyhow::Error) -> _`\n   found function signature `fn(std::string::String) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Result::<T, E>::map_err`","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","byte_start":31479,"byte_end":31493,"line_start":881,"line_end":881,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn map_err<F, O: FnOnce(E) -> F>(self, op: O) -> Result<T, F> {","highlight_start":26,"highlight_end":40}],"label":"required by this bound in `Result::<T, E>::map_err`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider wrapping the function in a closure","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":9798,"byte_end":9798,"line_start":301,"line_end":301,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)?;","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"|arg0: anyhow::Error| ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/auth.rs","byte_start":9822,"byte_end":9822,"line_start":301,"line_end":301,"column_start":46,"column_end":46,"is_primary":true,"text":[{"text":"            .map_err(AuthError::DatabaseError)?;","highlight_start":46,"highlight_end":46}],"label":null,"suggested_replacement":"(/* std::string::String */)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:301:22: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m: type mismatch in function arguments: expected due to this\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `invalidate_user_sessions` found for struct `Arc<database::Database>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":10484,"byte_end":10508,"line_start":320,"line_end":320,"column_start":31,"column_end":55,"is_primary":true,"text":[{"text":"        let _ = self.database.invalidate_user_sessions(user_id).await;","highlight_start":31,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `invalidate_session` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":10484,"byte_end":10508,"line_start":320,"line_end":320,"column_start":31,"column_end":55,"is_primary":true,"text":[{"text":"        let _ = self.database.invalidate_user_sessions(user_id).await;","highlight_start":31,"highlight_end":55}],"label":null,"suggested_replacement":"invalidate_session","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:320:31: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `invalidate_user_sessions` found for struct `Arc<database::Database>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `InvalidEmail` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":15735,"byte_end":15747,"line_start":455,"line_end":455,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"            return Err(AuthError::InvalidEmail);","highlight_start":35,"highlight_end":47}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `InvalidEmail` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/auth.rs:455:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `InvalidEmail` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `InvalidUsername` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":15880,"byte_end":15895,"line_start":460,"line_end":460,"column_start":35,"column_end":50,"is_primary":true,"text":[{"text":"            return Err(AuthError::InvalidUsername);","highlight_start":35,"highlight_end":50}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `InvalidUsername` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/auth.rs:460:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `InvalidUsername` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":18390,"byte_end":18397,"line_start":536,"line_end":536,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"            user_id: user.id,","highlight_start":22,"highlight_end":29}],"label":"expected `u32`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/auth.rs:536:22: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `u32`, found `String`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"arguments to this method are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/auth.rs","byte_start":18810,"byte_end":18817,"line_start":550,"line_end":550,"column_start":13,"column_end":20,"is_primary":false,"text":[{"text":"            user.id,","highlight_start":13,"highlight_end":20}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/auth.rs","byte_start":18782,"byte_end":18796,"line_start":549,"line_end":549,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"        let _ = self.database.create_session(","highlight_start":31,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `DateTime<Utc>`, found `i64`","code":null,"level":"note","spans":[{"file_name":"src/services/auth.rs","byte_start":18856,"byte_end":18980,"line_start":552,"line_end":553,"column_start":13,"column_end":65,"is_primary":true,"text":[{"text":"            now.duration_since(UNIX_EPOCH).unwrap().as_secs() as i64 + ","highlight_start":13,"highlight_end":72},{"text":"            self.jwt_config.access_token_expiry.as_secs() as i64,","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `DateTime<Utc>`\n     found type `i64`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/database.rs","byte_start":9420,"byte_end":9433,"line_start":279,"line_end":279,"column_start":40,"column_end":53,"is_primary":false,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":40,"highlight_end":53}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9453,"byte_end":9478,"line_start":279,"line_end":279,"column_start":73,"column_end":98,"is_primary":false,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":73,"highlight_end":98}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/database.rs","byte_start":9398,"byte_end":9412,"line_start":279,"line_end":279,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    pub async fn create_session(&self, user_id: &str, token_hash: &str, expires_at: DateTime<Utc>) -> Result<String> {","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"src/services/auth.rs","byte_start":18810,"byte_end":18810,"line_start":550,"line_end":550,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            user.id,","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/auth.rs:549:31: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: arguments to this method are incorrect\u001b[0m\n"}
{"$message_type":"diagnostic","message":"lifetime parameters or bounds on method `health_check` do not match the trait declaration","code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/services/mdblist.rs","byte_start":11507,"byte_end":11507,"line_start":329,"line_end":329,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    async fn health_check(&self) -> crate::services::ServiceHealth {","highlight_start":26,"highlight_end":26}],"label":"lifetimes do not match method in trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mod.rs","byte_start":3728,"byte_end":3747,"line_start":132,"line_end":132,"column_start":14,"column_end":33,"is_primary":false,"text":[{"text":"    async fn health_check(&self) -> ServiceHealth;","highlight_start":14,"highlight_end":33}],"label":"lifetimes in impl do not match this method in trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mod.rs","byte_start":3741,"byte_end":3742,"line_start":132,"line_end":132,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"    async fn health_check(&self) -> ServiceHealth;","highlight_start":27,"highlight_end":28}],"label":"this bound might be missing in the impl","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mod.rs","byte_start":3663,"byte_end":3690,"line_start":130,"line_end":130,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"#[async_trait::async_trait]","highlight_start":1,"highlight_end":28}],"label":"this bound might be missing in the impl","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/services/mod.rs","byte_start":3663,"byte_end":3690,"line_start":130,"line_end":130,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"#[async_trait::async_trait]","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[async_trait::async_trait]","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","byte_start":7473,"byte_end":7545,"line_start":252,"line_end":252,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0msrc/services/mdblist.rs:329:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0195]\u001b[0m\u001b[0m: lifetime parameters or bounds on method `health_check` do not match the trait declaration: lifetimes do not match method in trait\u001b[0m\n"}
{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"src/services/mdblist.rs","byte_start":4127,"byte_end":4143,"line_start":127,"line_end":127,"column_start":37,"column_end":53,"is_primary":true,"text":[{"text":"            query_params.push((\"y\", year.to_string().as_str()));","highlight_start":37,"highlight_end":53}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mdblist.rs","byte_start":4154,"byte_end":4155,"line_start":127,"line_end":127,"column_start":64,"column_end":65,"is_primary":false,"text":[{"text":"            query_params.push((\"y\", year.to_string().as_str()));","highlight_start":64,"highlight_end":65}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mdblist.rs","byte_start":4396,"byte_end":4408,"line_start":135,"line_end":135,"column_start":13,"column_end":25,"is_primary":false,"text":[{"text":"            query_params.push((\"type\", type_str));","highlight_start":13,"highlight_end":25}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/mdblist.rs:127:37: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0716]\u001b[0m\u001b[0m: temporary value dropped while borrowed: creates a temporary value which is freed while still in use\u001b[0m\n"}
{"$message_type":"diagnostic","message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let p`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"src/services/mdblist.rs","byte_start":6350,"byte_end":6369,"line_start":189,"line_end":189,"column_start":22,"column_end":41,"is_primary":true,"text":[{"text":"            (\"tmdb\", tmdb_id.to_string().as_str()),","highlight_start":22,"highlight_end":41}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mdblist.rs","byte_start":6422,"byte_end":6423,"line_start":191,"line_end":191,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"        ];","highlight_start":10,"highlight_end":11}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/mdblist.rs","byte_start":6472,"byte_end":6485,"line_start":193,"line_end":193,"column_start":48,"column_end":61,"is_primary":false,"text":[{"text":"        let response = self.make_request(&url, &query_params).await?;","highlight_start":48,"highlight_end":61}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a `let` binding to create a longer lived value","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/mdblist.rs:189:22: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0716]\u001b[0m\u001b[0m: temporary value dropped while borrowed: creates a temporary value which is freed while still in use\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Exceeded` found for enum `RateLimitResult` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/mdblist.rs","byte_start":10095,"byte_end":10103,"line_start":290,"line_end":290,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"                RateLimitResult::Exceeded => {","highlight_start":34,"highlight_end":42}],"label":"variant or associated item not found in `RateLimitResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/rate_limiter.rs","byte_start":1389,"byte_end":1413,"line_start":48,"line_end":48,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub enum RateLimitResult {","highlight_start":1,"highlight_end":25}],"label":"variant or associated item `Exceeded` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/mdblist.rs:290:34: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `Exceeded` found for enum `RateLimitResult` in the current scope: variant or associated item not found in `RateLimitResult`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":4634,"byte_end":4646,"line_start":172,"line_end":172,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(cached) = self.cache.get::<Vec<EnhancedMediaItem>>(&cache_key).await {","highlight_start":16,"highlight_end":28}],"label":"expected `CacheResult<Vec<EnhancedMediaItem>>`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":4649,"byte_end":4707,"line_start":172,"line_end":172,"column_start":31,"column_end":89,"is_primary":false,"text":[{"text":"        if let Some(cached) = self.cache.get::<Vec<EnhancedMediaItem>>(&cache_key).await {","highlight_start":31,"highlight_end":89}],"label":"this expression has type `CacheResult<Vec<EnhancedMediaItem>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `CacheResult<Vec<EnhancedMediaItem>>`\n   found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:172:16: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `CacheResult<Vec<EnhancedMediaItem>>`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":5237,"byte_end":5305,"line_start":186,"line_end":186,"column_start":17,"column_end":85,"is_primary":true,"text":[{"text":"                self.search_mdblist_fallback(query, year, media_type.clone()).await?","highlight_start":17,"highlight_end":85}],"label":"expected `Result<Vec<EnhancedMediaItem>, ...>`, found `Vec<EnhancedMediaItem>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":5055,"byte_end":5104,"line_start":182,"line_end":182,"column_start":17,"column_end":66,"is_primary":false,"text":[{"text":"                self.enhance_tmdb_results(results, user_id).await","highlight_start":17,"highlight_end":66}],"label":"this is found to be of type `Result<Vec<EnhancedMediaItem>, EnhancedMetadataError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":4989,"byte_end":5329,"line_start":180,"line_end":188,"column_start":30,"column_end":10,"is_primary":false,"text":[{"text":"        let enhanced_items = match tmdb_results {","highlight_start":30,"highlight_end":50},{"text":"            Ok(results) => {","highlight_start":1,"highlight_end":29},{"text":"                self.enhance_tmdb_results(results, user_id).await","highlight_start":1,"highlight_end":66},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            Err(e) => {","highlight_start":1,"highlight_end":24},{"text":"                warn!(\"TMDB search failed, trying MDBList fallback: {}\", e);","highlight_start":1,"highlight_end":77},{"text":"                self.search_mdblist_fallback(query, year, media_type.clone()).await?","highlight_start":1,"highlight_end":85},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        };","highlight_start":1,"highlight_end":10}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Result<Vec<_>, EnhancedMetadataError>`\n found struct `Vec<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try wrapping the expression in `Ok`","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":5237,"byte_end":5237,"line_start":186,"line_end":186,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"                self.search_mdblist_fallback(query, year, media_type.clone()).await?","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"Ok(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":5305,"byte_end":5305,"line_start":186,"line_end":186,"column_start":85,"column_end":85,"is_primary":true,"text":[{"text":"                self.search_mdblist_fallback(query, year, media_type.clone()).await?","highlight_start":85,"highlight_end":85}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:186:17: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: `match` arms have incompatible types: expected `Result<Vec<EnhancedMediaItem>, ...>`, found `Vec<EnhancedMediaItem>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":5938,"byte_end":5950,"line_start":207,"line_end":207,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(cached) = self.cache.get::<EnhancedMediaItem>(&cache_key).await {","highlight_start":16,"highlight_end":28}],"label":"expected `CacheResult<EnhancedMediaItem>`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":5953,"byte_end":6006,"line_start":207,"line_end":207,"column_start":31,"column_end":84,"is_primary":false,"text":[{"text":"        if let Some(cached) = self.cache.get::<EnhancedMediaItem>(&cache_key).await {","highlight_start":31,"highlight_end":84}],"label":"this expression has type `CacheResult<EnhancedMediaItem>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `CacheResult<EnhancedMediaItem>`\n   found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:207:16: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `CacheResult<EnhancedMediaItem>`, found `Option<_>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_movie` found for struct `Arc<TmdbService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":6237,"byte_end":6246,"line_start":214,"line_end":214,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"                self.tmdb_service.get_movie(tmdb_id).await","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_movie_details` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":6237,"byte_end":6246,"line_start":214,"line_end":214,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"                self.tmdb_service.get_movie(tmdb_id).await","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"get_movie_details","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:214:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_movie` found for struct `Arc<TmdbService>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `get_tv_show` found for struct `Arc<TmdbService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":6342,"byte_end":6353,"line_start":217,"line_end":217,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"                self.tmdb_service.get_tv_show(tmdb_id).await","highlight_start":35,"highlight_end":46}],"label":"method not found in `Arc<TmdbService>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:217:35: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `get_tv_show` found for struct `Arc<TmdbService>` in the current scope: method not found in `Arc<TmdbService>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no method named `search` found for struct `Arc<TmdbService>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":7547,"byte_end":7578,"line_start":254,"line_end":255,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        self.tmdb_service","highlight_start":9,"highlight_end":26},{"text":"            .search(query, year, tmdb_type)","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":7578,"byte_end":7584,"line_start":255,"line_end":255,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"            .search(query, year, tmdb_type)","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `search_tv` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"src/services/tmdb.rs","byte_start":6677,"byte_end":6764,"line_start":211,"line_end":211,"column_start":5,"column_end":92,"is_primary":true,"text":[{"text":"    pub async fn search_tv(&self, params: SearchParams) -> TmdbResult<TmdbResponse<TvShow>> {","highlight_start":5,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:255:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no method named `search` found for struct `Arc<TmdbService>` in the current scope\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":11175,"byte_end":11179,"line_start":357,"line_end":357,"column_start":66,"column_end":70,"is_primary":true,"text":[{"text":"            enhanced_items.push(self.convert_mdblist_to_enhanced(item));","highlight_start":66,"highlight_end":70}],"label":"expected `MdbListItem`, found `MdbListSearchItem`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":11147,"byte_end":11174,"line_start":357,"line_end":357,"column_start":38,"column_end":65,"is_primary":false,"text":[{"text":"            enhanced_items.push(self.convert_mdblist_to_enhanced(item));","highlight_start":38,"highlight_end":65}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":11684,"byte_end":11701,"line_start":375,"line_end":375,"column_start":43,"column_end":60,"is_primary":false,"text":[{"text":"    fn convert_mdblist_to_enhanced(&self, item: MdbListItem) -> EnhancedMediaItem {","highlight_start":43,"highlight_end":60}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/enhanced_metadata.rs","byte_start":11649,"byte_end":11676,"line_start":375,"line_end":375,"column_start":8,"column_end":35,"is_primary":true,"text":[{"text":"    fn convert_mdblist_to_enhanced(&self, item: MdbListItem) -> EnhancedMediaItem {","highlight_start":8,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:357:66: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `MdbListItem`, found `MdbListSearchItem`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `user_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19165,"byte_end":19172,"line_start":546,"line_end":546,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(user_id) = user_id {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19165,"byte_end":19172,"line_start":546,"line_end":546,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(user_id) = user_id {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":"_user_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:546:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `user_id`: help: if this is intentional, prefix it with an underscore: `_user_id`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `user_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19560,"byte_end":19567,"line_start":559,"line_end":559,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(user_id) = user_id {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19560,"byte_end":19567,"line_start":559,"line_end":559,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(user_id) = user_id {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":"_user_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:559:21: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `user_id`: help: if this is intentional, prefix it with an underscore: `_user_id`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19451,"byte_end":19459,"line_start":556,"line_end":556,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        mut item: EnhancedMediaItem,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/services/enhanced_metadata.rs","byte_start":19451,"byte_end":19455,"line_start":556,"line_end":556,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        mut item: EnhancedMediaItem,","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/services/enhanced_metadata.rs:556:9: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: variable does not need to be mutable\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `InvalidEmail` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":12098,"byte_end":12110,"line_start":368,"line_end":368,"column_start":45,"column_end":57,"is_primary":true,"text":[{"text":"            crate::models::auth::AuthError::InvalidEmail => StatusCode::BAD_REQUEST,","highlight_start":45,"highlight_end":57}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `InvalidEmail` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/error.rs:368:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `InvalidEmail` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `InvalidUsername` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":12183,"byte_end":12198,"line_start":369,"line_end":369,"column_start":45,"column_end":60,"is_primary":true,"text":[{"text":"            crate::models::auth::AuthError::InvalidUsername => StatusCode::BAD_REQUEST,","highlight_start":45,"highlight_end":60}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `InvalidUsername` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/error.rs:369:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `InvalidUsername` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `SessionExpired` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":12671,"byte_end":12685,"line_start":374,"line_end":374,"column_start":45,"column_end":59,"is_primary":true,"text":[{"text":"            crate::models::auth::AuthError::SessionExpired => StatusCode::UNAUTHORIZED,","highlight_start":45,"highlight_end":59}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `SessionExpired` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/error.rs:374:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `SessionExpired` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `SessionNotFound` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":12759,"byte_end":12774,"line_start":375,"line_end":375,"column_start":45,"column_end":60,"is_primary":true,"text":[{"text":"            crate::models::auth::AuthError::SessionNotFound => StatusCode::UNAUTHORIZED,","highlight_start":45,"highlight_end":60}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `SessionNotFound` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/error.rs:375:45: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `SessionNotFound` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":16094,"byte_end":16123,"line_start":473,"line_end":473,"column_start":13,"column_end":42,"is_primary":true,"text":[{"text":"            StatusCode::TOO_MANY_REQUESTS => {","highlight_start":13,"highlight_end":42}],"label":"expected `reqwest::StatusCode`, found `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"two different versions of crate `http` are being used; two types coming from two different versions of the same crate are different types even if they look the same","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the expected type `reqwest::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the found type `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":366,"byte_end":373,"line_start":12,"line_end":12,"column_start":5,"column_end":12,"is_primary":false,"text":[{"text":"use reqwest::{Client, Response};","highlight_start":5,"highlight_end":12}],"label":"one version of crate `http` used here, as a dependency of crate `reqwest`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":394,"byte_end":398,"line_start":12,"line_end":12,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"use axum::{","highlight_start":5,"highlight_end":9}],"label":"one version of crate `http` used here, as a dependency of crate `axum_core`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/error.rs:473:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `reqwest::StatusCode`, found `axum::http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":16235,"byte_end":16259,"line_start":476,"line_end":476,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"            StatusCode::UNAUTHORIZED => {","highlight_start":13,"highlight_end":37}],"label":"expected `reqwest::StatusCode`, found `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"two different versions of crate `http` are being used; two types coming from two different versions of the same crate are different types even if they look the same","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the expected type `reqwest::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the found type `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":366,"byte_end":373,"line_start":12,"line_end":12,"column_start":5,"column_end":12,"is_primary":false,"text":[{"text":"use reqwest::{Client, Response};","highlight_start":5,"highlight_end":12}],"label":"one version of crate `http` used here, as a dependency of crate `reqwest`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":394,"byte_end":398,"line_start":12,"line_end":12,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"use axum::{","highlight_start":5,"highlight_end":9}],"label":"one version of crate `http` used here, as a dependency of crate `axum_core`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/error.rs:476:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `reqwest::StatusCode`, found `axum::http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/error.rs","byte_start":16492,"byte_end":16513,"line_start":482,"line_end":482,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            StatusCode::NOT_FOUND => {","highlight_start":13,"highlight_end":34}],"label":"expected `reqwest::StatusCode`, found `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"two different versions of crate `http` are being used; two types coming from two different versions of the same crate are different types even if they look the same","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the expected type `reqwest::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/src/status.rs","byte_start":1521,"byte_end":1542,"line_start":45,"line_end":45,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub struct StatusCode(NonZeroU16);","highlight_start":1,"highlight_end":22}],"label":"this is the found type `axum::http::StatusCode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/services/tmdb.rs","byte_start":366,"byte_end":373,"line_start":12,"line_end":12,"column_start":5,"column_end":12,"is_primary":false,"text":[{"text":"use reqwest::{Client, Response};","highlight_start":5,"highlight_end":12}],"label":"one version of crate `http` used here, as a dependency of crate `reqwest`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":394,"byte_end":398,"line_start":12,"line_end":12,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"use axum::{","highlight_start":5,"highlight_end":9}],"label":"one version of crate `http` used here, as a dependency of crate `axum_core`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can use `cargo tree` to explore your dependency tree","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/error.rs:482:13: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `reqwest::StatusCode`, found `axum::http::StatusCode`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":18746,"byte_end":18801,"line_start":555,"line_end":555,"column_start":14,"column_end":69,"is_primary":true,"text":[{"text":"        exp: (now + chrono::Duration::hours(1)).timestamp() as usize,","highlight_start":14,"highlight_end":69}],"label":"expected `i64`, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/auth.rs:555:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `usize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":18816,"byte_end":18840,"line_start":556,"line_end":556,"column_start":14,"column_end":38,"is_primary":true,"text":[{"text":"        iat: now.timestamp() as usize,","highlight_start":14,"highlight_end":38}],"label":"expected `i64`, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/auth.rs:556:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `usize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::TokenClaims` has no field named `token_type`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":18850,"byte_end":18860,"line_start":557,"line_end":557,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        token_type: \"access\".to_string(),","highlight_start":9,"highlight_end":19}],"label":"`models::auth::TokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `jti`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:557:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::TokenClaims` has no field named `token_type`: `models::auth::TokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::auth::RefreshTokenClaims` has no field named `user_id`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":19211,"byte_end":19218,"line_start":573,"line_end":573,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        user_id: user.id.clone(),","highlight_start":9,"highlight_end":16}],"label":"`models::auth::RefreshTokenClaims` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `sub`, `jti`, `iss`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/auth.rs:573:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::auth::RefreshTokenClaims` has no field named `user_id`: `models::auth::RefreshTokenClaims` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":19250,"byte_end":19305,"line_start":574,"line_end":574,"column_start":14,"column_end":69,"is_primary":true,"text":[{"text":"        exp: (now + chrono::Duration::days(30)).timestamp() as usize,","highlight_start":14,"highlight_end":69}],"label":"expected `i64`, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/auth.rs:574:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `usize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/auth.rs","byte_start":19320,"byte_end":19344,"line_start":575,"line_end":575,"column_start":14,"column_end":38,"is_primary":true,"text":[{"text":"        iat: now.timestamp() as usize,","highlight_start":14,"highlight_end":38}],"label":"expected `i64`, found `usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/auth.rs:575:14: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `i64`, found `usize`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `credits` on type `&models::tmdb::MovieDetails`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":16776,"byte_end":16783,"line_start":502,"line_end":502,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        cast: movie.credits.as_ref().map(|credits| {","highlight_start":21,"highlight_end":28}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `title`, `original_title`, `overview`, `poster_path` ... and 20 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:502:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `credits` on type `&models::tmdb::MovieDetails`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `credits` on type `&models::tmdb::MovieDetails`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":16920,"byte_end":16927,"line_start":505,"line_end":505,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"        director: movie.credits.as_ref().map(|credits| {","highlight_start":25,"highlight_end":32}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `title`, `original_title`, `overview`, `poster_path` ... and 20 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:505:25: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `credits` on type `&models::tmdb::MovieDetails`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `credits` on type `&models::tmdb::MovieDetails`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":17136,"byte_end":17143,"line_start":511,"line_end":511,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"        writer: movie.credits.as_ref().map(|credits| {","highlight_start":23,"highlight_end":30}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `title`, `original_title`, `overview`, `poster_path` ... and 20 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:511:23: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `credits` on type `&models::tmdb::MovieDetails`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `credits` on type `&models::tmdb::TvShowDetails`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":18581,"byte_end":18588,"line_start":547,"line_end":547,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"        cast: tv.credits.as_ref().map(|credits| {","highlight_start":18,"highlight_end":25}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `name`, `original_name`, `overview`, `poster_path` ... and 25 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:547:18: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `credits` on type `&models::tmdb::TvShowDetails`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `credits` on type `&models::tmdb::TvShowDetails`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":18795,"byte_end":18802,"line_start":551,"line_end":551,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"        writer: tv.credits.as_ref().map(|credits| {","highlight_start":20,"highlight_end":27}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `name`, `original_name`, `overview`, `poster_path` ... and 25 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:551:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `credits` on type `&models::tmdb::TvShowDetails`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":21644,"byte_end":21725,"line_start":654,"line_end":657,"column_start":21,"column_end":11,"is_primary":true,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/stremio.rs","byte_start":21639,"byte_end":21643,"line_start":654,"line_end":654,"column_start":16,"column_end":20,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":16,"highlight_end":20}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":21644,"byte_end":21725,"line_start":654,"line_end":657,"column_start":21,"column_end":11,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/stremio.rs","byte_start":21639,"byte_end":21726,"line_start":654,"line_end":657,"column_start":16,"column_end":12,"is_primary":true,"text":[{"text":"        error: Some(json!({","highlight_start":16,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/stremio.rs","byte_start":21644,"byte_end":21725,"line_start":654,"line_end":657,"column_start":21,"column_end":11,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:654:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<_>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio.rs","byte_start":21736,"byte_end":21740,"line_start":658,"line_end":658,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio.rs:658:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<_>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `thumbnail` on type `services::enhanced_metadata::Video`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":10965,"byte_end":10974,"line_start":314,"line_end":314,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"            thumbnail: v.thumbnail,","highlight_start":26,"highlight_end":35}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `key`, `name`, `site`, `size`, `video_type`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:314:26: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `thumbnail` on type `services::enhanced_metadata::Video`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no field `url` on type `services::enhanced_metadata::Video`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/stremio_mdblist.rs","byte_start":10995,"byte_end":10998,"line_start":315,"line_end":315,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"            url: v.url,","highlight_start":20,"highlight_end":23}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `id`, `key`, `name`, `site`, `size`, `video_type`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/stremio_mdblist.rs:315:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m: no field `url` on type `services::enhanced_metadata::Video`: unknown field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Unauthorized` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":20531,"byte_end":20543,"line_start":624,"line_end":624,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"        TmdbError::Unauthorized => (","highlight_start":20,"highlight_end":32}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `Unauthorized` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:624:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `Unauthorized` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `RequestFailed` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21032,"byte_end":21045,"line_start":639,"line_end":639,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"        TmdbError::RequestFailed(msg) => (","highlight_start":20,"highlight_end":33}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `RequestFailed` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:639:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `RequestFailed` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21176,"byte_end":21197,"line_start":644,"line_end":644,"column_start":20,"column_end":41,"is_primary":true,"text":[{"text":"        TmdbError::ResponseParsingFailed(msg) => (","highlight_start":20,"highlight_end":41}],"label":"variant or associated item not found in `TmdbError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/tmdb.rs","byte_start":10907,"byte_end":10925,"line_start":410,"line_end":410,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum TmdbError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `ResponseParsingFailed` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0msrc/handlers/tmdb.rs:644:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `ResponseParsingFailed` found for enum `models::tmdb::TmdbError` in the current scope: variant or associated item not found in `TmdbError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"expected tuple struct or tuple variant, found struct variant `TmdbError::ApiError`","code":{"code":"E0164","explanation":"Something which is neither a tuple struct nor a tuple variant was used as a\npattern.\n\nErroneous code example:\n\n```compile_fail,E0164\nenum A {\n    B,\n    C,\n}\n\nimpl A {\n    fn new() {}\n}\n\nfn bar(foo: A) {\n    match foo {\n        A::new() => (), // error!\n        _ => {}\n    }\n}\n```\n\nThis error means that an attempt was made to match something which is neither a\ntuple struct nor a tuple variant. Only these two elements are allowed as a\npattern:\n\n```\nenum A {\n    B,\n    C,\n}\n\nimpl A {\n    fn new() {}\n}\n\nfn bar(foo: A) {\n    match foo {\n        A::B => (), // ok!\n        _ => {}\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21314,"byte_end":21338,"line_start":649,"line_end":649,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        TmdbError::ApiError(msg) => (","highlight_start":9,"highlight_end":33}],"label":"not a tuple struct or tuple variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct variant's fields are being ignored","code":null,"level":"help","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21333,"byte_end":21338,"line_start":649,"line_end":649,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"        TmdbError::ApiError(msg) => (","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":" { status_code: _, message: _ }","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:649:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0164]\u001b[0m\u001b[0m: expected tuple struct or tuple variant, found struct variant `TmdbError::ApiError`: not a tuple struct or tuple variant\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21615,"byte_end":21696,"line_start":661,"line_end":664,"column_start":21,"column_end":11,"is_primary":true,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":"expected `String`, found `Value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/tmdb.rs","byte_start":21610,"byte_end":21614,"line_start":661,"line_end":661,"column_start":16,"column_end":20,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":16,"highlight_end":20}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `JsonValue` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9540,"byte_end":9717,"line_start":269,"line_end":273,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::Value::Object({","highlight_start":9,"highlight_end":32},{"text":"            let mut object = $crate::Map::new();","highlight_start":1,"highlight_end":49},{"text":"            $crate::json_internal!(@object object () ($($tt)+) ($($tt)+));","highlight_start":1,"highlight_end":75},{"text":"            object","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":21615,"byte_end":21696,"line_start":661,"line_end":664,"column_start":21,"column_end":11,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/handlers/tmdb.rs","byte_start":21610,"byte_end":21697,"line_start":661,"line_end":664,"column_start":16,"column_end":12,"is_primary":true,"text":[{"text":"        error: Some(json!({","highlight_start":16,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":9717,"byte_end":9717,"line_start":273,"line_end":273,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"        })","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1429,"byte_end":1462,"line_start":57,"line_end":57,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::json_internal!($($json)+)","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers/tmdb.rs","byte_start":21615,"byte_end":21696,"line_start":661,"line_end":664,"column_start":21,"column_end":11,"is_primary":false,"text":[{"text":"        error: Some(json!({","highlight_start":21,"highlight_end":28},{"text":"            \"message\": message,","highlight_start":1,"highlight_end":32},{"text":"            \"code\": error_code","highlight_start":1,"highlight_end":31},{"text":"        })),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"json!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1302,"byte_end":1319,"line_start":54,"line_end":54,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! json {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::json_internal!","def_site_span":{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.142/src/macros.rs","byte_start":1954,"byte_end":1980,"line_start":70,"line_end":70,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! json_internal {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:661:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `Value`, help: try using a conversion method: `.to_string()`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<_>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/tmdb.rs","byte_start":21707,"byte_end":21711,"line_start":665,"line_end":665,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/tmdb.rs:665:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<_>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `EmailAlreadyExists` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":19353,"byte_end":19371,"line_start":566,"line_end":566,"column_start":20,"column_end":38,"is_primary":true,"text":[{"text":"        AuthError::EmailAlreadyExists => (","highlight_start":20,"highlight_end":38}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `EmailAlreadyExists` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":19353,"byte_end":19371,"line_start":566,"line_end":566,"column_start":20,"column_end":38,"is_primary":true,"text":[{"text":"        AuthError::EmailAlreadyExists => (","highlight_start":20,"highlight_end":38}],"label":null,"suggested_replacement":"UserAlreadyExists","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:566:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `EmailAlreadyExists` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `UsernameAlreadyExists` found for enum `models::auth::AuthError` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":19540,"byte_end":19561,"line_start":571,"line_end":571,"column_start":20,"column_end":41,"is_primary":true,"text":[{"text":"        AuthError::UsernameAlreadyExists => (","highlight_start":20,"highlight_end":41}],"label":"variant or associated item not found in `AuthError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/models/auth.rs","byte_start":3514,"byte_end":3532,"line_start":117,"line_end":117,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"pub enum AuthError {","highlight_start":1,"highlight_end":19}],"label":"variant or associated item `UsernameAlreadyExists` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":19540,"byte_end":19561,"line_start":571,"line_end":571,"column_start":20,"column_end":41,"is_primary":true,"text":[{"text":"        AuthError::UsernameAlreadyExists => (","highlight_start":20,"highlight_end":41}],"label":null,"suggested_replacement":"UserAlreadyExists","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:571:20: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m: no variant or associated item named `UsernameAlreadyExists` found for enum `models::auth::AuthError` in the current scope: variant or associated item not found in `AuthError`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `code`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":20333,"byte_end":20337,"line_start":597,"line_end":597,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        code: error_code.to_string(),","highlight_start":9,"highlight_end":13}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:597:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `code`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ErrorResponse` has no field named `details`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":20371,"byte_end":20378,"line_start":598,"line_end":598,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        details: None,","highlight_start":9,"highlight_end":16}],"label":"`models::ErrorResponse` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `error`, `status_code`, `timestamp`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:598:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ErrorResponse` has no field named `details`: `models::ErrorResponse` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":20491,"byte_end":20505,"line_start":604,"line_end":604,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"        error: Some(error_response),","highlight_start":21,"highlight_end":35}],"label":"expected `String`, found `ErrorResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":20486,"byte_end":20490,"line_start":604,"line_end":604,"column_start":16,"column_end":20,"is_primary":false,"text":[{"text":"        error: Some(error_response),","highlight_start":16,"highlight_end":20}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type constructed contains `models::ErrorResponse` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"src/handlers/user.rs","byte_start":20491,"byte_end":20505,"line_start":604,"line_end":604,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"        error: Some(error_response),","highlight_start":21,"highlight_end":35}],"label":"this argument influences the type of `Some`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/user.rs","byte_start":20486,"byte_end":20506,"line_start":604,"line_end":604,"column_start":16,"column_end":36,"is_primary":true,"text":[{"text":"        error: Some(error_response),","highlight_start":16,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs","byte_start":23792,"byte_end":23796,"line_start":597,"line_end":597,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:604:21: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `String`, found `ErrorResponse`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"struct `models::ApiResponse<_>` has no field named `meta`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/handlers/user.rs","byte_start":20516,"byte_end":20520,"line_start":605,"line_end":605,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        meta: Some(json!({","highlight_start":9,"highlight_end":13}],"label":"`models::ApiResponse<_>` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `message`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/handlers/user.rs:605:9: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m: struct `models::ApiResponse<_>` has no field named `meta`: `models::ApiResponse<_>` does not have this field\u001b[0m\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/middleware/auth.rs","byte_start":8634,"byte_end":8682,"line_start":280,"line_end":280,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"    get_user_context(request).map(|ctx| ctx.user.id)","highlight_start":5,"highlight_end":53}],"label":"expected `Option<u32>`, found `Option<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/auth.rs","byte_start":8616,"byte_end":8627,"line_start":279,"line_end":279,"column_start":42,"column_end":53,"is_primary":false,"text":[{"text":"pub fn get_user_id(request: &Request) -> Option<u32> {","highlight_start":42,"highlight_end":53}],"label":"expected `std::option::Option<u32>` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `std::option::Option<u32>`\n   found enum `std::option::Option<std::string::String>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/auth.rs:280:5: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m: mismatched types: expected `Option<u32>`, found `Option<String>`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"the trait bound `AllowHeaders: From<Vec<axum::http::HeaderValue>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/middleware/cors.rs","byte_start":4194,"byte_end":4201,"line_start":133,"line_end":133,"column_start":39,"column_end":46,"is_primary":true,"text":[{"text":"            cors = cors.allow_headers(headers);","highlight_start":39,"highlight_end":46}],"label":"the trait `From<Vec<axum::http::HeaderValue>>` is not implemented for `AllowHeaders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":4180,"byte_end":4193,"line_start":133,"line_end":133,"column_start":25,"column_end":38,"is_primary":false,"text":[{"text":"            cors = cors.allow_headers(headers);","highlight_start":25,"highlight_end":38}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  `AllowHeaders` implements `From<Vec<axum::http::HeaderName>>`\n  `AllowHeaders` implements `From<[axum::http::HeaderName; N]>`\n  `AllowHeaders` implements `From<tower_http::cors::Any>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Vec<axum::http::HeaderValue>` to implement `Into<AllowHeaders>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `CorsLayer::allow_headers`","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.5.2/src/cors/mod.rs","byte_start":5979,"byte_end":5992,"line_start":200,"line_end":200,"column_start":12,"column_end":25,"is_primary":false,"text":[{"text":"    pub fn allow_headers<T>(mut self, headers: T) -> Self","highlight_start":12,"highlight_end":25}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.5.2/src/cors/mod.rs","byte_start":6047,"byte_end":6065,"line_start":202,"line_end":202,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"        T: Into<AllowHeaders>,","highlight_start":12,"highlight_end":30}],"label":"required by this bound in `CorsLayer::allow_headers`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/cors.rs:133:39: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m: the trait bound `AllowHeaders: From<Vec<axum::http::HeaderValue>>` is not satisfied: the trait `From<Vec<axum::http::HeaderValue>>` is not implemented for `AllowHeaders`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"the trait bound `ExposeHeaders: From<Vec<axum::http::HeaderValue>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/middleware/cors.rs","byte_start":4648,"byte_end":4663,"line_start":149,"line_end":149,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"        cors = cors.expose_headers(exposed_headers);","highlight_start":36,"highlight_end":51}],"label":"the trait `From<Vec<axum::http::HeaderValue>>` is not implemented for `ExposeHeaders`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/middleware/cors.rs","byte_start":4633,"byte_end":4647,"line_start":149,"line_end":149,"column_start":21,"column_end":35,"is_primary":false,"text":[{"text":"        cors = cors.expose_headers(exposed_headers);","highlight_start":21,"highlight_end":35}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  `ExposeHeaders` implements `From<Vec<axum::http::HeaderName>>`\n  `ExposeHeaders` implements `From<[axum::http::HeaderName; N]>`\n  `ExposeHeaders` implements `From<tower_http::cors::Any>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Vec<axum::http::HeaderValue>` to implement `Into<ExposeHeaders>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `CorsLayer::expose_headers`","code":null,"level":"note","spans":[{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.5.2/src/cors/mod.rs","byte_start":11091,"byte_end":11105,"line_start":362,"line_end":362,"column_start":12,"column_end":26,"is_primary":false,"text":[{"text":"    pub fn expose_headers<T>(mut self, headers: T) -> Self","highlight_start":12,"highlight_end":26}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/luinog/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.5.2/src/cors/mod.rs","byte_start":11160,"byte_end":11179,"line_start":364,"line_end":364,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"        T: Into<ExposeHeaders>,","highlight_start":12,"highlight_end":31}],"label":"required by this bound in `CorsLayer::expose_headers`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/cors.rs:149:36: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m: the trait bound `ExposeHeaders: From<Vec<axum::http::HeaderValue>>` is not satisfied: the trait `From<Vec<axum::http::HeaderValue>>` is not implemented for `ExposeHeaders`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"unused variable: `request`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":14322,"byte_end":14329,"line_start":455,"line_end":455,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    request: &Request,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/middleware/rate_limit.rs","byte_start":14322,"byte_end":14329,"line_start":455,"line_end":455,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    request: &Request,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"_request","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/middleware/rate_limit.rs:455:5: \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m: unused variable: `request`: help: if this is intentional, prefix it with an underscore: `_request`\u001b[0m\n"}
{"$message_type":"diagnostic","message":"aborting due to 410 previous errors; 66 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m: aborting due to 410 previous errors; 66 warnings emitted\u001b[0m\n"}
